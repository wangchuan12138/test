04/19 11:28:00: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=8, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=32000, init_ckpt='', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/19 11:28:00: Device:cuda
04/19 11:28:00: Files length: 24641
04/19 11:28:00: Files length: 4
04/19 11:28:07: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/19 11:28:07: Random initialization.
04/19 11:28:07: LR: [0.0008, 0.0008, 0.0008]
04/19 11:29:09: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=8, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=32000, init_ckpt='', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/19 11:29:09: Device:cuda
04/19 11:29:09: Files length: 24641
04/19 11:29:09: Files length: 4
04/19 11:29:12: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/19 11:29:12: Random initialization.
04/19 11:29:12: LR: [0.0008, 0.0008, 0.0008]
04/19 11:32:19: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=8, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=32000, init_ckpt='', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/19 11:32:19: Device:cuda
04/19 11:32:19: Files length: 24641
04/19 11:32:19: Files length: 4
04/19 11:32:22: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/19 11:32:22: Random initialization.
04/19 11:32:22: LR: [0.0008, 0.0008, 0.0008]
04/19 11:33:19: 


======= larger than 4e5 ======: 433241



04/19 11:34:54: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=8, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=32000, init_ckpt='', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/19 11:34:54: Device:cuda
04/19 11:34:54: Files length: 24641
04/19 11:34:54: Files length: 4
04/19 11:34:56: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/19 11:34:56: Random initialization.
04/19 11:34:56: LR: [0.0008, 0.0008, 0.0008]
04/19 11:36:27: 
Iteration: 100
04/19 11:36:27: Running time: 1.51 min
04/19 11:36:27: Data Loading time: 0.00006 s
04/19 11:36:27: Loss R: 0.2398
04/19 11:40:18: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=8, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=32000, init_ckpt='', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/19 11:40:18: Device:cuda
04/19 11:40:18: Files length: 24641
04/19 11:40:18: Files length: 4
04/19 11:40:20: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/19 11:40:20: Random initialization.
04/19 11:40:20: LR: [0.0008, 0.0008, 0.0008]
04/19 11:40:40: 


======= larger than 4e5 ======: 404224



04/19 11:41:48: 
Iteration: 100
04/19 11:41:48: Running time: 1.47 min
04/19 11:41:48: Data Loading time: 0.00006 s
04/19 11:41:48: Loss R: 0.2412
04/19 11:41:48: Loss G: 2431.9024
04/19 11:43:35: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=8, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=32000, init_ckpt='', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/19 11:43:35: Device:cuda
04/19 11:43:35: Files length: 24641
04/19 11:43:35: Files length: 4
04/19 11:43:38: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/19 11:43:38: Random initialization.
04/19 11:43:38: LR: [0.0008, 0.0008, 0.0008]
04/19 11:45:10: 
Iteration: 100
04/19 11:45:10: Running time: 1.53 min
04/19 11:45:10: Data Loading time: 0.00007 s
04/19 11:45:10: Loss R: 0.2401
04/19 11:45:10: Loss G: 1807.3613
04/19 11:45:10: bpp: 0.9495
04/19 11:45:51: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=8, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=32000, init_ckpt='', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/19 11:45:51: Device:cuda
04/19 11:45:51: Files length: 24641
04/19 11:45:51: Files length: 4
04/19 11:45:54: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/19 11:45:54: Random initialization.
04/19 11:45:54: LR: [0.0008, 0.0008, 0.0008]
04/19 11:47:08: 


======= larger than 4e5 ======: 407680



04/19 11:47:22: 
Iteration: 100
04/19 11:47:22: Running time: 1.47 min
04/19 11:47:22: Data Loading time: 0.00007 s
04/19 11:47:22: Loss R: 0.2460
04/19 11:47:22: Loss G: 1053.7329
04/19 11:47:22: bpp: 0.9521
04/19 11:47:22: Sum Loss: 1059.6058
04/19 11:47:22: Loss (s-m-l): [0.2179, 0.4625, 0.0577]
04/19 11:47:22: Metrics (s-m-l): [[0.9088, 0.99, 0.9088], [0.8033, 0.99, 0.8033], [0.99, 0.99, 0.99]]
04/19 11:48:05: 


======= larger than 4e5 ======: 441924



04/19 11:48:33: 


======= larger than 4e5 ======: 401990



04/19 11:48:51: 
Iteration: 200
04/19 11:48:51: Running time: 2.95 min
04/19 11:48:51: Data Loading time: 0.00008 s
04/19 11:48:51: Loss R: 0.1287
04/19 11:48:51: Loss G: 1960.7920
04/19 11:48:51: bpp: 0.7905
04/19 11:48:51: Sum Loss: 1964.1556
04/19 11:48:51: Loss (s-m-l): [0.0572, 0.3288, 0.0]
04/19 11:48:51: Metrics (s-m-l): [[0.9597, 0.98, 0.9597], [0.8409, 0.98, 0.8409], [0.98, 0.98, 0.98]]
04/19 11:50:04: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=8, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=200000, init_ckpt='', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/19 11:50:04: Device:cuda
04/19 11:50:04: Files length: 24641
04/19 11:50:04: Files length: 4
04/19 11:50:06: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/19 11:50:06: Random initialization.
04/19 11:50:06: LR: [0.0008, 0.0008, 0.0008]
04/19 11:51:01: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=200000, init_ckpt='', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/19 11:51:01: Device:cuda
04/19 11:51:01: Files length: 24641
04/19 11:51:01: Files length: 4
04/19 11:51:04: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/19 11:51:04: Random initialization.
04/19 11:51:04: LR: [0.0008, 0.0008, 0.0008]
04/19 11:51:04: 


======= larger than 4e5 ======: 660399



04/19 11:51:04: 


======= larger than 4e5 ======: 578462



04/19 11:51:04: 


======= larger than 4e5 ======: 473026



04/19 11:51:05: 


======= larger than 4e5 ======: 535180



04/19 11:51:05: 


======= larger than 4e5 ======: 561459



04/19 11:51:05: 


======= larger than 4e5 ======: 506713



04/19 11:51:05: 


======= larger than 4e5 ======: 421244



04/19 11:51:05: 


======= larger than 4e5 ======: 493201



04/19 11:51:08: 


======= larger than 4e5 ======: 508245



04/19 11:51:08: 


======= larger than 4e5 ======: 610862



04/19 11:51:08: 


======= larger than 4e5 ======: 403941



04/19 11:51:08: 


======= larger than 4e5 ======: 545276



04/19 11:51:08: 


======= larger than 4e5 ======: 504622



04/19 11:51:08: 


======= larger than 4e5 ======: 534772



04/19 11:51:09: 


======= larger than 4e5 ======: 642185



04/19 11:51:09: 


======= larger than 4e5 ======: 474263



04/19 11:51:09: 


======= larger than 4e5 ======: 603062



04/19 11:51:10: 


======= larger than 4e5 ======: 518950



04/19 11:51:10: 


======= larger than 4e5 ======: 491490



04/19 11:51:10: 


======= larger than 4e5 ======: 468762



04/19 11:51:10: 


======= larger than 4e5 ======: 586119



04/19 11:51:10: 


======= larger than 4e5 ======: 542843



04/19 11:51:10: 


======= larger than 4e5 ======: 562469



04/19 11:51:10: 


======= larger than 4e5 ======: 518105



04/19 11:51:10: 


======= larger than 4e5 ======: 479145



04/19 11:51:10: 


======= larger than 4e5 ======: 410699



04/19 11:51:10: 


======= larger than 4e5 ======: 600783



04/19 11:51:10: 


======= larger than 4e5 ======: 517442



04/19 11:51:10: 


======= larger than 4e5 ======: 659985



04/19 11:51:10: 


======= larger than 4e5 ======: 471808



04/19 11:51:11: 


======= larger than 4e5 ======: 440871



04/19 11:51:11: 


======= larger than 4e5 ======: 686366



04/19 11:51:11: 


======= larger than 4e5 ======: 442427



04/19 11:51:11: 


======= larger than 4e5 ======: 474907



04/19 11:51:11: 


======= larger than 4e5 ======: 585617



04/19 11:51:11: 


======= larger than 4e5 ======: 590473



04/19 11:51:11: 


======= larger than 4e5 ======: 557001



04/19 11:51:11: 


======= larger than 4e5 ======: 714541



04/19 11:51:11: 


======= larger than 4e5 ======: 500471



04/19 11:51:11: 


======= larger than 4e5 ======: 528430



04/19 11:51:11: 


======= larger than 4e5 ======: 486781



04/19 11:51:11: 


======= larger than 4e5 ======: 456373



04/19 11:51:12: 


======= larger than 4e5 ======: 678924



04/19 11:51:12: 


======= larger than 4e5 ======: 597277



04/19 11:51:12: 


======= larger than 4e5 ======: 439350



04/19 11:51:12: 


======= larger than 4e5 ======: 569134



04/19 11:51:39: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=200000, init_ckpt='', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/19 11:51:39: Device:cuda
04/19 11:51:39: Files length: 24641
04/19 11:51:39: Files length: 4
04/19 11:51:42: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/19 11:51:42: Random initialization.
04/19 11:51:42: LR: [0.0008, 0.0008, 0.0008]
04/19 11:52:30: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=32, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=200000, init_ckpt='', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/19 11:52:30: Device:cuda
04/19 11:52:30: Files length: 24641
04/19 11:52:30: Files length: 4
04/19 11:52:33: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/19 11:52:33: Random initialization.
04/19 11:52:33: LR: [0.0008, 0.0008, 0.0008]
04/19 11:53:27: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=200000, init_ckpt='', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/19 11:53:27: Device:cuda
04/19 11:53:27: Files length: 24641
04/19 11:53:27: Files length: 4
04/19 11:53:30: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/19 11:53:30: Random initialization.
04/19 11:53:30: LR: [0.0008, 0.0008, 0.0008]
04/19 11:56:07: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=200000, init_ckpt='', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/19 11:56:07: Device:cuda
04/19 11:56:07: Files length: 24641
04/19 11:56:07: Files length: 4
04/19 11:56:10: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/19 11:56:10: Random initialization.
04/19 11:56:10: LR: [0.0008, 0.0008, 0.0008]
04/19 11:59:03: 
Iteration: 100
04/19 11:59:03: Running time: 2.88 min
04/19 11:59:03: Data Loading time: 0.00008 s
04/19 11:59:03: Loss R: 0.2251
04/19 11:59:03: Loss G: 1320.7370
04/19 11:59:03: bpp: 0.9638
04/19 11:59:03: Sum Loss: 1326.2026
04/19 11:59:03: Loss (s-m-l): [0.1803, 0.4346, 0.0604]
04/19 11:59:03: Metrics (s-m-l): [[0.9337, 1.0, 0.9337], [0.8249, 1.0, 0.8249], [1.0, 1.0, 1.0]]
04/19 12:01:55: 
Iteration: 200
04/19 12:01:55: Running time: 5.75 min
04/19 12:01:55: Data Loading time: 0.00007 s
04/19 12:01:55: Loss R: 0.1060
04/19 12:01:55: Loss G: 1986.7254
04/19 12:01:55: bpp: 0.8028
04/19 12:01:55: Sum Loss: 1989.6475
04/19 12:01:55: Loss (s-m-l): [0.04, 0.2779, 0.0]
04/19 12:01:55: Metrics (s-m-l): [[0.9858, 1.0, 0.9858], [0.8838, 1.0, 0.8838], [1.0, 1.0, 1.0]]
04/19 12:04:53: 
Iteration: 300
04/19 12:04:53: Running time: 8.72 min
04/19 12:04:53: Data Loading time: 0.00007 s
04/19 12:04:53: Loss R: 0.0842
04/19 12:04:53: Loss G: 1979.4135
04/19 12:04:53: bpp: 0.6870
04/19 12:04:53: Sum Loss: 1981.7843
04/19 12:04:53: Loss (s-m-l): [0.0234, 0.2292, 0.0]
04/19 12:04:53: Metrics (s-m-l): [[0.992, 1.0, 0.992], [0.9047, 1.0, 0.9047], [1.0, 1.0, 1.0]]
04/19 12:07:50: 
Iteration: 400
04/19 12:07:50: Running time: 11.68 min
04/19 12:07:50: Data Loading time: 0.00007 s
04/19 12:07:50: Loss R: 0.0708
04/19 12:07:50: Loss G: 1964.5278
04/19 12:07:50: bpp: 0.6133
04/19 12:07:50: Sum Loss: 1966.5569
04/19 12:07:50: Loss (s-m-l): [0.015, 0.1974, 0.0]
04/19 12:07:50: Metrics (s-m-l): [[0.9949, 1.0, 0.9949], [0.9186, 1.0, 0.9186], [1.0, 1.0, 1.0]]
04/19 12:10:50: 
Iteration: 500
04/19 12:10:50: Running time: 14.67 min
04/19 12:10:50: Data Loading time: 0.00007 s
04/19 12:10:50: Loss R: 0.0632
04/19 12:10:50: Loss G: 2037.9253
04/19 12:10:50: bpp: 0.5597
04/19 12:10:50: Sum Loss: 2039.7485
04/19 12:10:50: Loss (s-m-l): [0.0114, 0.1781, 0.0]
04/19 12:10:50: Metrics (s-m-l): [[0.9961, 1.0, 0.9961], [0.9275, 1.0, 0.9275], [1.0, 1.0, 1.0]]
04/19 12:13:42: 
Iteration: 600
04/19 12:13:42: Running time: 17.53 min
04/19 12:13:42: Data Loading time: 0.00007 s
04/19 12:13:42: Loss R: 0.0589
04/19 12:13:42: Loss G: 5731.1889
04/19 12:13:42: bpp: 0.5359
04/19 12:13:42: Sum Loss: 5732.9043
04/19 12:13:42: Loss (s-m-l): [0.0095, 0.1673, 0.0]
04/19 12:13:42: Metrics (s-m-l): [[0.9968, 1.0, 0.9968], [0.9321, 1.0, 0.9321], [1.0, 1.0, 1.0]]
04/19 12:16:38: 
Iteration: 700
04/19 12:16:38: Running time: 20.48 min
04/19 12:16:38: Data Loading time: 0.00007 s
04/19 12:16:38: Loss R: 0.0612
04/19 12:16:38: Loss G: 5775.6704
04/19 12:16:38: bpp: 0.5131
04/19 12:16:38: Sum Loss: 5777.4062
04/19 12:16:38: Loss (s-m-l): [0.0103, 0.1733, 0.0]
04/19 12:16:38: Metrics (s-m-l): [[0.9965, 1.0, 0.9965], [0.9298, 1.0, 0.9298], [1.0, 1.0, 1.0]]
04/19 12:19:36: 
Iteration: 800
04/19 12:19:36: Running time: 23.44 min
04/19 12:19:36: Data Loading time: 0.00007 s
04/19 12:19:36: Loss R: 0.0529
04/19 12:19:36: Loss G: 5460.4988
04/19 12:19:36: bpp: 0.4880
04/19 12:19:36: Sum Loss: 5462.0454
04/19 12:19:36: Loss (s-m-l): [0.0072, 0.1515, 0.0]
04/19 12:19:36: Metrics (s-m-l): [[0.9976, 1.0, 0.9976], [0.9387, 1.0, 0.9387], [1.0, 1.0, 1.0]]
04/19 12:22:33: 
Iteration: 900
04/19 12:22:33: Running time: 26.38 min
04/19 12:22:33: Data Loading time: 0.00007 s
04/19 12:22:33: Loss R: 0.0506
04/19 12:22:33: Loss G: 4762.5410
04/19 12:22:33: bpp: 0.4740
04/19 12:22:33: Sum Loss: 4764.0254
04/19 12:22:33: Loss (s-m-l): [0.0062, 0.1455, 0.0]
04/19 12:22:33: Metrics (s-m-l): [[0.998, 1.0, 0.998], [0.9412, 1.0, 0.9412], [1.0, 1.0, 1.0]]
04/19 12:25:29: 
Iteration: 1000
04/19 12:25:29: Running time: 29.31 min
04/19 12:25:29: Data Loading time: 0.00008 s
04/19 12:25:29: Loss R: 0.0501
04/19 12:25:29: Loss G: 3931.9623
04/19 12:25:29: bpp: 0.4640
04/19 12:25:29: Sum Loss: 3933.4265
04/19 12:25:29: Loss (s-m-l): [0.0059, 0.1442, 0.0]
04/19 12:25:29: Metrics (s-m-l): [[0.998, 1.0, 0.998], [0.9418, 1.0, 0.9418], [1.0, 1.0, 1.0]]
04/19 12:28:26: 
Iteration: 1100
04/19 12:28:26: Running time: 32.28 min
04/19 12:28:26: Data Loading time: 0.00007 s
04/19 12:28:26: Loss R: 0.0476
04/19 12:28:26: Loss G: 3740.6462
04/19 12:28:26: bpp: 0.4465
04/19 12:28:26: Sum Loss: 3742.0442
04/19 12:28:26: Loss (s-m-l): [0.0054, 0.1373, 0.0]
04/19 12:28:26: Metrics (s-m-l): [[0.9983, 1.0, 0.9983], [0.945, 1.0, 0.945], [1.0, 1.0, 1.0]]
04/19 12:31:24: 
Iteration: 1200
04/19 12:31:24: Running time: 35.23 min
04/19 12:31:24: Data Loading time: 0.00007 s
04/19 12:31:24: Loss R: 0.0471
04/19 12:31:24: Loss G: 3018.7108
04/19 12:31:24: bpp: 0.4392
04/19 12:31:24: Sum Loss: 3020.0930
04/19 12:31:24: Loss (s-m-l): [0.0054, 0.136, 0.0]
04/19 12:31:24: Metrics (s-m-l): [[0.9983, 1.0, 0.9983], [0.9452, 1.0, 0.9452], [1.0, 1.0, 1.0]]
04/19 12:34:17: 
Iteration: 1300
04/19 12:34:17: Running time: 38.12 min
04/19 12:34:17: Data Loading time: 0.00007 s
04/19 12:34:17: Loss R: 0.0459
04/19 12:34:17: Loss G: 2413.4040
04/19 12:34:17: bpp: 0.4335
04/19 12:34:17: Sum Loss: 2414.7549
04/19 12:34:17: Loss (s-m-l): [0.0049, 0.1328, 0.0]
04/19 12:34:17: Metrics (s-m-l): [[0.9985, 1.0, 0.9985], [0.9468, 1.0, 0.9468], [1.0, 1.0, 1.0]]
04/19 12:37:12: 
Iteration: 1400
04/19 12:37:12: Running time: 41.04 min
04/19 12:37:12: Data Loading time: 0.00008 s
04/19 12:37:12: Loss R: 0.0451
04/19 12:37:12: Loss G: 2547.0440
04/19 12:37:12: bpp: 0.4184
04/19 12:37:12: Sum Loss: 2548.3650
04/19 12:37:12: Loss (s-m-l): [0.0046, 0.1308, 0.0]
04/19 12:37:12: Metrics (s-m-l): [[0.9985, 1.0, 0.9985], [0.9477, 1.0, 0.9477], [1.0, 1.0, 1.0]]
04/19 12:40:11: 
Iteration: 1500
04/19 12:40:11: Running time: 44.01 min
04/19 12:40:11: Data Loading time: 0.00007 s
04/19 12:40:11: Loss R: 0.0445
04/19 12:40:11: Loss G: 2255.4310
04/19 12:40:11: bpp: 0.4141
04/19 12:40:11: Sum Loss: 2256.7349
04/19 12:40:11: Loss (s-m-l): [0.0044, 0.1291, 0.0]
04/19 12:40:11: Metrics (s-m-l): [[0.9985, 1.0, 0.9985], [0.9482, 1.0, 0.9482], [1.0, 1.0, 1.0]]
04/19 12:43:05: 
Iteration: 1600
04/19 12:43:05: Running time: 46.92 min
04/19 12:43:05: Data Loading time: 0.00007 s
04/19 12:43:05: Loss R: 0.0427
04/19 12:43:05: Loss G: 2255.1765
04/19 12:43:05: bpp: 0.4044
04/19 12:43:05: Sum Loss: 2256.4353
04/19 12:43:05: Loss (s-m-l): [0.0041, 0.1241, 0.0]
04/19 12:43:05: Metrics (s-m-l): [[0.9987, 1.0, 0.9987], [0.9504, 1.0, 0.9504], [1.0, 1.0, 1.0]]
04/19 12:45:59: 
Iteration: 1700
04/19 12:45:59: Running time: 49.83 min
04/19 12:45:59: Data Loading time: 0.00007 s
04/19 12:45:59: Loss R: 0.0412
04/19 12:45:59: Loss G: 2161.9321
04/19 12:45:59: bpp: 0.3943
04/19 12:45:59: Sum Loss: 2163.1494
04/19 12:45:59: Loss (s-m-l): [0.0039, 0.1195, 0.0]
04/19 12:45:59: Metrics (s-m-l): [[0.9987, 1.0, 0.9987], [0.9522, 1.0, 0.9522], [1.0, 1.0, 1.0]]
04/19 12:48:52: 
Iteration: 1800
04/19 12:48:52: Running time: 52.71 min
04/19 12:48:52: Data Loading time: 0.00007 s
04/19 12:48:52: Loss R: 0.0402
04/19 12:48:52: Loss G: 2438.3503
04/19 12:48:52: bpp: 0.3843
04/19 12:48:52: Sum Loss: 2439.5376
04/19 12:48:52: Loss (s-m-l): [0.0038, 0.1168, 0.0]
04/19 12:48:52: Metrics (s-m-l): [[0.9988, 1.0, 0.9988], [0.9535, 1.0, 0.9535], [1.0, 1.0, 1.0]]
04/19 12:51:51: 
Iteration: 1900
04/19 12:51:51: Running time: 55.68 min
04/19 12:51:51: Data Loading time: 0.00007 s
04/19 12:51:51: Loss R: 0.0408
04/19 12:51:51: Loss G: 2313.7917
04/19 12:51:51: bpp: 0.3709
04/19 12:51:51: Sum Loss: 2314.9792
04/19 12:51:51: Loss (s-m-l): [0.0037, 0.1187, 0.0]
04/19 12:51:51: Metrics (s-m-l): [[0.9988, 1.0, 0.9988], [0.9526, 1.0, 0.9526], [1.0, 1.0, 1.0]]
04/19 12:54:45: 
Iteration: 2000
04/19 12:54:45: Running time: 58.58 min
04/19 12:54:45: Data Loading time: 0.00007 s
04/19 12:54:45: Loss R: 0.0382
04/19 12:54:45: Loss G: 2274.8170
04/19 12:54:45: bpp: 0.3651
04/19 12:54:45: Sum Loss: 2275.9460
04/19 12:54:45: Loss (s-m-l): [0.0034, 0.1112, 0.0]
04/19 12:54:45: Metrics (s-m-l): [[0.9989, 1.0, 0.9989], [0.9555, 1.0, 0.9555], [1.0, 1.0, 1.0]]
04/19 12:54:45: 
==========Evaluation: iter 2000==========
04/19 12:54:45: save checkpoints: ckpts/tp/tp2000
04/19 12:57:40: 
Iteration: 2100
04/19 12:57:40: Running time: 61.50 min
04/19 12:57:40: Data Loading time: 0.00007 s
04/19 12:57:40: Loss R: 0.0371
04/19 12:57:40: Loss G: 2419.9650
04/19 12:57:40: bpp: 0.3574
04/19 12:57:40: Sum Loss: 2421.0640
04/19 12:57:40: Loss (s-m-l): [0.0033, 0.1079, 0.0]
04/19 12:57:40: Metrics (s-m-l): [[0.9989, 1.0, 0.9989], [0.9571, 1.0, 0.9571], [1.0, 1.0, 1.0]]
04/19 13:00:33: 
Iteration: 2200
04/19 13:00:33: Running time: 64.38 min
04/19 13:00:33: Data Loading time: 0.00007 s
04/19 13:00:33: Loss R: 0.0380
04/19 13:00:33: Loss G: 2257.0542
04/19 13:00:33: bpp: 0.3481
04/19 13:00:33: Sum Loss: 2258.1626
04/19 13:00:33: Loss (s-m-l): [0.0034, 0.1107, 0.0]
04/19 13:00:33: Metrics (s-m-l): [[0.9989, 1.0, 0.9989], [0.9557, 1.0, 0.9557], [1.0, 1.0, 1.0]]
04/19 13:03:33: 
Iteration: 2300
04/19 13:03:33: Running time: 67.39 min
04/19 13:03:33: Data Loading time: 0.00007 s
04/19 13:03:33: Loss R: 0.0376
04/19 13:03:33: Loss G: 1913.9141
04/19 13:03:33: bpp: 0.3443
04/19 13:03:33: Sum Loss: 1915.0107
04/19 13:03:33: Loss (s-m-l): [0.0031, 0.1098, 0.0]
04/19 13:03:33: Metrics (s-m-l): [[0.9989, 1.0, 0.9989], [0.9558, 1.0, 0.9558], [1.0, 1.0, 1.0]]
04/19 13:06:28: 
Iteration: 2400
04/19 13:06:28: Running time: 70.30 min
04/19 13:06:28: Data Loading time: 0.00007 s
04/19 13:06:28: Loss R: 0.0363
04/19 13:06:28: Loss G: 1801.3546
04/19 13:06:28: bpp: 0.3386
04/19 13:06:28: Sum Loss: 1802.4191
04/19 13:06:28: Loss (s-m-l): [0.003, 0.1059, 0.0]
04/19 13:06:28: Metrics (s-m-l): [[0.999, 1.0, 0.999], [0.9578, 1.0, 0.9578], [1.0, 1.0, 1.0]]
04/19 13:09:26: 
Iteration: 2500
04/19 13:09:26: Running time: 73.27 min
04/19 13:09:26: Data Loading time: 0.00007 s
04/19 13:09:26: Loss R: 0.0347
04/19 13:09:26: Loss G: 7831.8088
04/19 13:09:26: bpp: 0.3325
04/19 13:09:26: Sum Loss: 7832.8359
04/19 13:09:26: Loss (s-m-l): [0.0026, 0.1016, 0.0]
04/19 13:09:26: Metrics (s-m-l): [[0.9991, 1.0, 0.9991], [0.9591, 1.0, 0.9591], [1.0, 1.0, 1.0]]
04/19 13:12:21: 
Iteration: 2600
04/19 13:12:21: Running time: 76.19 min
04/19 13:12:21: Data Loading time: 0.00007 s
04/19 13:12:21: Loss R: 0.0343
04/19 13:12:21: Loss G: 11348.6842
04/19 13:12:21: bpp: 0.3351
04/19 13:12:21: Sum Loss: 11349.7090
04/19 13:12:21: Loss (s-m-l): [0.0027, 0.1002, 0.0]
04/19 13:12:21: Metrics (s-m-l): [[0.9991, 1.0, 0.9991], [0.96, 1.0, 0.96], [1.0, 1.0, 1.0]]
04/19 13:15:17: 
Iteration: 2700
04/19 13:15:17: Running time: 79.12 min
04/19 13:15:17: Data Loading time: 0.00007 s
04/19 13:15:17: Loss R: 0.0331
04/19 13:15:17: Loss G: 10316.4425
04/19 13:15:17: bpp: 0.3304
04/19 13:15:17: Sum Loss: 10317.4346
04/19 13:15:17: Loss (s-m-l): [0.0025, 0.0968, 0.0]
04/19 13:15:17: Metrics (s-m-l): [[0.9991, 1.0, 0.9991], [0.961, 1.0, 0.961], [1.0, 1.0, 1.0]]
04/19 13:18:12: 
Iteration: 2800
04/19 13:18:12: Running time: 82.03 min
04/19 13:18:12: Data Loading time: 0.00007 s
04/19 13:18:12: Loss R: 0.0326
04/19 13:18:12: Loss G: 9531.7905
04/19 13:18:12: bpp: 0.3257
04/19 13:18:12: Sum Loss: 9532.7715
04/19 13:18:12: Loss (s-m-l): [0.0024, 0.0955, 0.0]
04/19 13:18:12: Metrics (s-m-l): [[0.9992, 1.0, 0.9992], [0.9624, 1.0, 0.9624], [1.0, 1.0, 1.0]]
04/19 13:21:09: 
Iteration: 2900
04/19 13:21:09: Running time: 84.98 min
04/19 13:21:09: Data Loading time: 0.00007 s
04/19 13:21:09: Loss R: 0.0317
04/19 13:21:09: Loss G: 8454.3218
04/19 13:21:09: bpp: 0.3237
04/19 13:21:09: Sum Loss: 8455.2803
04/19 13:21:09: Loss (s-m-l): [0.0022, 0.0929, 0.0]
04/19 13:21:09: Metrics (s-m-l): [[0.9993, 1.0, 0.9993], [0.9626, 1.0, 0.9626], [1.0, 1.0, 1.0]]
04/19 13:24:06: 
Iteration: 3000
04/19 13:24:06: Running time: 87.94 min
04/19 13:24:06: Data Loading time: 0.00007 s
04/19 13:24:06: Loss R: 0.0315
04/19 13:24:06: Loss G: 8515.6818
04/19 13:24:06: bpp: 0.3227
04/19 13:24:06: Sum Loss: 8516.6338
04/19 13:24:06: Loss (s-m-l): [0.0022, 0.0922, 0.0]
04/19 13:24:06: Metrics (s-m-l): [[0.9992, 1.0, 0.9992], [0.9628, 1.0, 0.9628], [1.0, 1.0, 1.0]]
04/19 13:27:02: 
Iteration: 3100
04/19 13:27:02: Running time: 90.86 min
04/19 13:27:02: Data Loading time: 0.00007 s
04/19 13:27:02: Loss R: 0.0311
04/19 13:27:02: Loss G: 20077.2808
04/19 13:27:02: bpp: 0.3189
04/19 13:27:02: Sum Loss: 20078.2227
04/19 13:27:02: Loss (s-m-l): [0.0022, 0.091, 0.0]
04/19 13:27:02: Metrics (s-m-l): [[0.9993, 1.0, 0.9993], [0.9637, 1.0, 0.9637], [1.0, 1.0, 1.0]]
04/19 13:29:54: 
Iteration: 3200
04/19 13:29:54: Running time: 93.74 min
04/19 13:29:54: Data Loading time: 0.00007 s
04/19 13:29:54: Loss R: 0.0298
04/19 13:29:54: Loss G: 15007.0303
04/19 13:29:54: bpp: 0.3256
04/19 13:29:54: Sum Loss: 15007.9492
04/19 13:29:54: Loss (s-m-l): [0.0021, 0.0872, 0.0]
04/19 13:29:54: Metrics (s-m-l): [[0.9993, 1.0, 0.9993], [0.9651, 1.0, 0.9651], [1.0, 1.0, 1.0]]
04/19 13:32:54: 
Iteration: 3300
04/19 13:32:54: Running time: 96.74 min
04/19 13:32:54: Data Loading time: 0.00007 s
04/19 13:32:54: Loss R: 0.0300
04/19 13:32:54: Loss G: 10051.6866
04/19 13:32:54: bpp: 0.3223
04/19 13:32:54: Sum Loss: 10052.6055
04/19 13:32:54: Loss (s-m-l): [0.002, 0.0878, 0.0]
04/19 13:32:54: Metrics (s-m-l): [[0.9993, 1.0, 0.9993], [0.9647, 1.0, 0.9647], [1.0, 1.0, 1.0]]
04/19 13:35:52: 
Iteration: 3400
04/19 13:35:52: Running time: 99.70 min
04/19 13:35:52: Data Loading time: 0.00007 s
04/19 13:35:52: Loss R: 0.0290
04/19 13:35:52: Loss G: 7768.3120
04/19 13:35:52: bpp: 0.3219
04/19 13:35:52: Sum Loss: 7769.2153
04/19 13:35:52: Loss (s-m-l): [0.002, 0.085, 0.0]
04/19 13:35:52: Metrics (s-m-l): [[0.9993, 1.0, 0.9993], [0.9661, 1.0, 0.9661], [1.0, 1.0, 1.0]]
04/19 13:38:49: 
Iteration: 3500
04/19 13:38:49: Running time: 102.65 min
04/19 13:38:49: Data Loading time: 0.00007 s
04/19 13:38:49: Loss R: 0.0282
04/19 13:38:49: Loss G: 7432.7434
04/19 13:38:49: bpp: 0.3198
04/19 13:38:49: Sum Loss: 7433.6260
04/19 13:38:49: Loss (s-m-l): [0.0018, 0.0827, 0.0]
04/19 13:38:49: Metrics (s-m-l): [[0.9994, 1.0, 0.9994], [0.9672, 1.0, 0.9672], [1.0, 1.0, 1.0]]
04/19 13:41:48: 
Iteration: 3600
04/19 13:41:48: Running time: 105.63 min
04/19 13:41:48: Data Loading time: 0.00007 s
04/19 13:41:48: Loss R: 0.0281
04/19 13:41:48: Loss G: 7053.6679
04/19 13:41:48: bpp: 0.3215
04/19 13:41:48: Sum Loss: 7054.5537
04/19 13:41:48: Loss (s-m-l): [0.0018, 0.0825, 0.0]
04/19 13:41:48: Metrics (s-m-l): [[0.9994, 1.0, 0.9994], [0.9667, 1.0, 0.9667], [1.0, 1.0, 1.0]]
04/19 13:44:38: 
Iteration: 3700
04/19 13:44:38: Running time: 108.48 min
04/19 13:44:38: Data Loading time: 0.00007 s
04/19 13:44:38: Loss R: 0.0289
04/19 13:44:38: Loss G: 5342.6603
04/19 13:44:38: bpp: 0.3221
04/19 13:44:38: Sum Loss: 5343.5586
04/19 13:44:38: Loss (s-m-l): [0.002, 0.0846, 0.0]
04/19 13:44:38: Metrics (s-m-l): [[0.9993, 1.0, 0.9993], [0.9662, 1.0, 0.9662], [1.0, 1.0, 1.0]]
04/19 13:47:33: 
Iteration: 3800
04/19 13:47:33: Running time: 111.39 min
04/19 13:47:33: Data Loading time: 0.00007 s
04/19 13:47:33: Loss R: 0.0287
04/19 13:47:33: Loss G: 3907.4975
04/19 13:47:33: bpp: 0.3251
04/19 13:47:33: Sum Loss: 3908.3979
04/19 13:47:33: Loss (s-m-l): [0.0018, 0.0844, 0.0]
04/19 13:47:33: Metrics (s-m-l): [[0.9994, 1.0, 0.9994], [0.966, 1.0, 0.966], [1.0, 1.0, 1.0]]
04/19 13:50:29: 
Iteration: 3900
04/19 13:50:29: Running time: 114.33 min
04/19 13:50:29: Data Loading time: 0.00007 s
04/19 13:50:29: Loss R: 0.0284
04/19 13:50:29: Loss G: 3014.5927
04/19 13:50:29: bpp: 0.3234
04/19 13:50:29: Sum Loss: 3015.4834
04/19 13:50:29: Loss (s-m-l): [0.0018, 0.0833, 0.0]
04/19 13:50:29: Metrics (s-m-l): [[0.9994, 1.0, 0.9994], [0.9665, 1.0, 0.9665], [1.0, 1.0, 1.0]]
04/19 13:53:25: 
Iteration: 4000
04/19 13:53:25: Running time: 117.25 min
04/19 13:53:25: Data Loading time: 0.00007 s
04/19 13:53:25: Loss R: 0.0272
04/19 13:53:25: Loss G: 4496.5303
04/19 13:53:25: bpp: 0.3220
04/19 13:53:25: Sum Loss: 4497.3960
04/19 13:53:25: Loss (s-m-l): [0.0016, 0.0798, 0.0]
04/19 13:53:25: Metrics (s-m-l): [[0.9994, 1.0, 0.9994], [0.9682, 1.0, 0.9682], [1.0, 1.0, 1.0]]
04/19 13:53:25: 
==========Evaluation: iter 4000==========
04/19 13:53:25: save checkpoints: ckpts/tp/tp4000
04/19 13:56:20: 
Iteration: 4100
04/19 13:56:20: Running time: 120.17 min
04/19 13:56:20: Data Loading time: 0.00007 s
04/19 13:56:20: Loss R: 0.0263
04/19 13:56:20: Loss G: 4069.9475
04/19 13:56:20: bpp: 0.3261
04/19 13:56:20: Sum Loss: 4070.7996
04/19 13:56:20: Loss (s-m-l): [0.0016, 0.0773, 0.0]
04/19 13:56:20: Metrics (s-m-l): [[0.9995, 1.0, 0.9995], [0.9691, 1.0, 0.9691], [1.0, 1.0, 1.0]]
04/19 13:59:16: 
Iteration: 4200
04/19 13:59:16: Running time: 123.10 min
04/19 13:59:16: Data Loading time: 0.00007 s
04/19 13:59:16: Loss R: 0.0279
04/19 13:59:16: Loss G: 2804.3717
04/19 13:59:16: bpp: 0.3252
04/19 13:59:16: Sum Loss: 2805.2559
04/19 13:59:16: Loss (s-m-l): [0.0018, 0.082, 0.0]
04/19 13:59:16: Metrics (s-m-l): [[0.9994, 1.0, 0.9994], [0.9671, 1.0, 0.9671], [1.0, 1.0, 1.0]]
04/19 14:02:11: 
Iteration: 4300
04/19 14:02:11: Running time: 126.01 min
04/19 14:02:11: Data Loading time: 0.00007 s
04/19 14:02:11: Loss R: 0.0271
04/19 14:02:11: Loss G: 2220.6587
04/19 14:02:11: bpp: 0.3260
04/19 14:02:11: Sum Loss: 2221.5273
04/19 14:02:11: Loss (s-m-l): [0.0016, 0.0798, 0.0]
04/19 14:02:11: Metrics (s-m-l): [[0.9994, 1.0, 0.9994], [0.9681, 1.0, 0.9681], [1.0, 1.0, 1.0]]
04/19 14:05:07: 
Iteration: 4400
04/19 14:05:07: Running time: 128.95 min
04/19 14:05:07: Data Loading time: 0.00007 s
04/19 14:05:07: Loss R: 0.0261
04/19 14:05:07: Loss G: 1811.8256
04/19 14:05:07: bpp: 0.3254
04/19 14:05:07: Sum Loss: 1812.6730
04/19 14:05:07: Loss (s-m-l): [0.0016, 0.0768, 0.0]
04/19 14:05:07: Metrics (s-m-l): [[0.9995, 1.0, 0.9995], [0.9694, 1.0, 0.9694], [1.0, 1.0, 1.0]]
04/19 14:08:01: 
Iteration: 4500
04/19 14:08:01: Running time: 131.86 min
04/19 14:08:01: Data Loading time: 0.00007 s
04/19 14:08:01: Loss R: 0.0247
04/19 14:08:01: Loss G: 1219.7263
04/19 14:08:01: bpp: 0.3236
04/19 14:08:01: Sum Loss: 1220.5431
04/19 14:08:01: Loss (s-m-l): [0.0014, 0.0726, 0.0]
04/19 14:08:01: Metrics (s-m-l): [[0.9995, 1.0, 0.9995], [0.971, 1.0, 0.971], [1.0, 1.0, 1.0]]
04/19 14:10:57: 
Iteration: 4600
04/19 14:10:57: Running time: 134.79 min
04/19 14:10:57: Data Loading time: 0.00007 s
04/19 14:10:57: Loss R: 0.0259
04/19 14:10:57: Loss G: 1060.4850
04/19 14:10:57: bpp: 0.3247
04/19 14:10:57: Sum Loss: 1061.3278
04/19 14:10:57: Loss (s-m-l): [0.0016, 0.0761, 0.0]
04/19 14:10:57: Metrics (s-m-l): [[0.9995, 1.0, 0.9995], [0.9696, 1.0, 0.9696], [1.0, 1.0, 1.0]]
04/19 14:13:54: 
Iteration: 4700
04/19 14:13:54: Running time: 137.74 min
04/19 14:13:54: Data Loading time: 0.00007 s
04/19 14:13:54: Loss R: 0.0271
04/19 14:13:54: Loss G: 753.3732
04/19 14:13:54: bpp: 0.3282
04/19 14:13:54: Sum Loss: 754.2431
04/19 14:13:54: Loss (s-m-l): [0.0017, 0.0796, 0.0]
04/19 14:13:54: Metrics (s-m-l): [[0.9994, 1.0, 0.9994], [0.9681, 1.0, 0.9681], [1.0, 1.0, 1.0]]
04/19 14:16:46: 
Iteration: 4800
04/19 14:16:46: Running time: 140.61 min
04/19 14:16:46: Data Loading time: 0.00007 s
04/19 14:16:46: Loss R: 0.0251
04/19 14:16:46: Loss G: 501.7452
04/19 14:16:46: bpp: 0.3271
04/19 14:16:46: Sum Loss: 502.5750
04/19 14:16:46: Loss (s-m-l): [0.0016, 0.0739, 0.0]
04/19 14:16:46: Metrics (s-m-l): [[0.9995, 1.0, 0.9995], [0.9704, 1.0, 0.9704], [1.0, 1.0, 1.0]]
04/19 14:19:43: 
Iteration: 4900
04/19 14:19:43: Running time: 143.55 min
04/19 14:19:43: Data Loading time: 0.00007 s
04/19 14:19:43: Loss R: 0.0240
04/19 14:19:43: Loss G: 351.9882
04/19 14:19:43: bpp: 0.3257
04/19 14:19:43: Sum Loss: 352.7935
04/19 14:19:43: Loss (s-m-l): [0.0013, 0.0706, 0.0]
04/19 14:19:43: Metrics (s-m-l): [[0.9996, 1.0, 0.9996], [0.9719, 1.0, 0.9719], [1.0, 1.0, 1.0]]
04/19 14:22:37: 
Iteration: 5000
04/19 14:22:37: Running time: 146.45 min
04/19 14:22:37: Data Loading time: 0.00007 s
04/19 14:22:37: Loss R: 0.0244
04/19 14:22:37: Loss G: 271.3628
04/19 14:22:37: bpp: 0.3248
04/19 14:22:37: Sum Loss: 272.1747
04/19 14:22:37: Loss (s-m-l): [0.0014, 0.0716, 0.0]
04/19 14:22:37: Metrics (s-m-l): [[0.9995, 1.0, 0.9995], [0.9714, 1.0, 0.9714], [1.0, 1.0, 1.0]]
04/19 14:25:34: 
Iteration: 5100
04/19 14:25:34: Running time: 149.41 min
04/19 14:25:34: Data Loading time: 0.00007 s
04/19 14:25:34: Loss R: 0.0242
04/19 14:25:34: Loss G: 229.5807
04/19 14:25:34: bpp: 0.3241
04/19 14:25:34: Sum Loss: 230.3893
04/19 14:25:34: Loss (s-m-l): [0.0014, 0.0713, 0.0]
04/19 14:25:34: Metrics (s-m-l): [[0.9995, 1.0, 0.9995], [0.9716, 1.0, 0.9716], [1.0, 1.0, 1.0]]
04/19 14:28:28: 
Iteration: 5200
04/19 14:28:28: Running time: 152.30 min
04/19 14:28:28: Data Loading time: 0.00007 s
04/19 14:28:28: Loss R: 0.0256
04/19 14:28:28: Loss G: 292.6761
04/19 14:28:28: bpp: 0.3289
04/19 14:28:28: Sum Loss: 293.5169
04/19 14:28:28: Loss (s-m-l): [0.0016, 0.0752, 0.0]
04/19 14:28:28: Metrics (s-m-l): [[0.9995, 1.0, 0.9995], [0.9697, 1.0, 0.9697], [1.0, 1.0, 1.0]]
04/19 14:31:25: 
Iteration: 5300
04/19 14:31:25: Running time: 155.26 min
04/19 14:31:25: Data Loading time: 0.00007 s
04/19 14:31:25: Loss R: 0.0242
04/19 14:31:25: Loss G: 249.6698
04/19 14:31:25: bpp: 0.3280
04/19 14:31:25: Sum Loss: 250.4824
04/19 14:31:25: Loss (s-m-l): [0.0014, 0.0713, 0.0]
04/19 14:31:25: Metrics (s-m-l): [[0.9995, 1.0, 0.9995], [0.9716, 1.0, 0.9716], [1.0, 1.0, 1.0]]
04/19 14:34:21: 
Iteration: 5400
04/19 14:34:21: Running time: 158.19 min
04/19 14:34:21: Data Loading time: 0.00007 s
04/19 14:34:21: Loss R: 0.0254
04/19 14:34:21: Loss G: 294.6970
04/19 14:34:21: bpp: 0.3260
04/19 14:34:21: Sum Loss: 295.5309
04/19 14:34:21: Loss (s-m-l): [0.0015, 0.0747, 0.0]
04/19 14:34:21: Metrics (s-m-l): [[0.9995, 1.0, 0.9995], [0.9701, 1.0, 0.9701], [1.0, 1.0, 1.0]]
04/19 14:37:16: 
Iteration: 5500
04/19 14:37:16: Running time: 161.10 min
04/19 14:37:16: Data Loading time: 0.00007 s
04/19 14:37:16: Loss R: 0.0238
04/19 14:37:16: Loss G: 212.7606
04/19 14:37:16: bpp: 0.3283
04/19 14:37:16: Sum Loss: 213.5647
04/19 14:37:16: Loss (s-m-l): [0.0013, 0.07, 0.0]
04/19 14:37:16: Metrics (s-m-l): [[0.9995, 1.0, 0.9995], [0.9719, 1.0, 0.9719], [1.0, 1.0, 1.0]]
04/19 14:40:12: 
Iteration: 5600
04/19 14:40:12: Running time: 164.04 min
04/19 14:40:12: Data Loading time: 0.00007 s
04/19 14:40:12: Loss R: 0.0233
04/19 14:40:12: Loss G: 273.3131
04/19 14:40:12: bpp: 0.3252
04/19 14:40:12: Sum Loss: 274.1032
04/19 14:40:12: Loss (s-m-l): [0.0014, 0.0684, 0.0]
04/19 14:40:12: Metrics (s-m-l): [[0.9995, 1.0, 0.9995], [0.9725, 1.0, 0.9725], [1.0, 1.0, 1.0]]
04/19 14:43:10: 
Iteration: 5700
04/19 14:43:10: Running time: 167.00 min
04/19 14:43:10: Data Loading time: 0.00007 s
04/19 14:43:10: Loss R: 0.0244
04/19 14:43:10: Loss G: 171.6366
04/19 14:43:10: bpp: 0.3270
04/19 14:43:10: Sum Loss: 172.4520
04/19 14:43:10: Loss (s-m-l): [0.0014, 0.0718, 0.0]
04/19 14:43:10: Metrics (s-m-l): [[0.9995, 1.0, 0.9995], [0.9711, 1.0, 0.9711], [1.0, 1.0, 1.0]]
04/19 14:46:06: 
Iteration: 5800
04/19 14:46:06: Running time: 169.94 min
04/19 14:46:06: Data Loading time: 0.00007 s
04/19 14:46:06: Loss R: 0.0234
04/19 14:46:06: Loss G: 127.6661
04/19 14:46:06: bpp: 0.3255
04/19 14:46:06: Sum Loss: 128.4595
04/19 14:46:06: Loss (s-m-l): [0.0014, 0.0688, 0.0]
04/19 14:46:06: Metrics (s-m-l): [[0.9995, 1.0, 0.9995], [0.9725, 1.0, 0.9725], [1.0, 1.0, 1.0]]
04/19 14:49:01: 
Iteration: 5900
04/19 14:49:01: Running time: 172.86 min
04/19 14:49:01: Data Loading time: 0.00007 s
04/19 14:49:01: Loss R: 0.0220
04/19 14:49:01: Loss G: 102.3666
04/19 14:49:01: bpp: 0.3297
04/19 14:49:01: Sum Loss: 103.1359
04/19 14:49:01: Loss (s-m-l): [0.0012, 0.0647, 0.0]
04/19 14:49:01: Metrics (s-m-l): [[0.9996, 1.0, 0.9996], [0.9742, 1.0, 0.9742], [1.0, 1.0, 1.0]]
04/19 14:51:57: 
Iteration: 6000
04/19 14:51:57: Running time: 175.78 min
04/19 14:51:57: Data Loading time: 0.00007 s
04/19 14:51:57: Loss R: 0.0230
04/19 14:51:57: Loss G: 86.0683
04/19 14:51:57: bpp: 0.3277
04/19 14:51:57: Sum Loss: 86.8569
04/19 14:51:57: Loss (s-m-l): [0.0013, 0.0678, 0.0]
04/19 14:51:57: Metrics (s-m-l): [[0.9996, 1.0, 0.9996], [0.9728, 1.0, 0.9728], [1.0, 1.0, 1.0]]
04/19 14:51:57: 
==========Evaluation: iter 6000==========
04/19 14:51:57: save checkpoints: ckpts/tp/tp6000
04/19 14:51:57: LR: [0.0002, 0.0002, 0.0002]
04/19 14:54:53: 
Iteration: 6100
04/19 14:54:53: Running time: 178.71 min
04/19 14:54:53: Data Loading time: 0.00007 s
04/19 14:54:53: Loss R: 0.0206
04/19 14:54:53: Loss G: 86.5375
04/19 14:54:53: bpp: 0.3272
04/19 14:54:53: Sum Loss: 87.2776
04/19 14:54:53: Loss (s-m-l): [0.001, 0.0609, 0.0]
04/19 14:54:53: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9756, 1.0, 0.9756], [1.0, 1.0, 1.0]]
04/19 14:57:51: 
Iteration: 6200
04/19 14:57:51: Running time: 181.69 min
04/19 14:57:51: Data Loading time: 0.00007 s
04/19 14:57:51: Loss R: 0.0200
04/19 14:57:51: Loss G: 84.8046
04/19 14:57:51: bpp: 0.3236
04/19 14:57:51: Sum Loss: 85.5274
04/19 14:57:51: Loss (s-m-l): [0.0009, 0.0589, 0.0]
04/19 14:57:51: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9766, 1.0, 0.9766], [1.0, 1.0, 1.0]]
04/19 15:00:45: 
Iteration: 6300
04/19 15:00:45: Running time: 184.59 min
04/19 15:00:45: Data Loading time: 0.00007 s
04/19 15:00:45: Loss R: 0.0199
04/19 15:00:45: Loss G: 80.1096
04/19 15:00:45: bpp: 0.3268
04/19 15:00:45: Sum Loss: 80.8350
04/19 15:00:45: Loss (s-m-l): [0.001, 0.0588, 0.0]
04/19 15:00:45: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9766, 1.0, 0.9766], [1.0, 1.0, 1.0]]
04/19 15:03:39: 
Iteration: 6400
04/19 15:03:39: Running time: 187.48 min
04/19 15:03:39: Data Loading time: 0.00007 s
04/19 15:03:39: Loss R: 0.0193
04/19 15:03:39: Loss G: 80.9887
04/19 15:03:39: bpp: 0.3268
04/19 15:03:39: Sum Loss: 81.7008
04/19 15:03:39: Loss (s-m-l): [0.001, 0.0568, 0.0]
04/19 15:03:39: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9774, 1.0, 0.9774], [1.0, 1.0, 1.0]]
04/19 15:06:37: 
Iteration: 6500
04/19 15:06:37: Running time: 190.45 min
04/19 15:06:37: Data Loading time: 0.00007 s
04/19 15:06:37: Loss R: 0.0215
04/19 15:06:37: Loss G: 81.0089
04/19 15:06:37: bpp: 0.3217
04/19 15:06:37: Sum Loss: 81.7597
04/19 15:06:37: Loss (s-m-l): [0.001, 0.0633, 0.0]
04/19 15:06:37: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9744, 1.0, 0.9744], [1.0, 1.0, 1.0]]
04/19 15:09:38: 
Iteration: 6600
04/19 15:09:38: Running time: 193.47 min
04/19 15:09:38: Data Loading time: 0.00007 s
04/19 15:09:38: Loss R: 0.0203
04/19 15:09:38: Loss G: 79.1126
04/19 15:09:38: bpp: 0.3248
04/19 15:09:38: Sum Loss: 79.8436
04/19 15:09:38: Loss (s-m-l): [0.001, 0.0599, 0.0]
04/19 15:09:38: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.976, 1.0, 0.976], [1.0, 1.0, 1.0]]
04/19 15:12:31: 
Iteration: 6700
04/19 15:12:31: Running time: 196.36 min
04/19 15:12:31: Data Loading time: 0.00007 s
04/19 15:12:31: Loss R: 0.0197
04/19 15:12:31: Loss G: 93.5413
04/19 15:12:31: bpp: 0.3254
04/19 15:12:31: Sum Loss: 94.2614
04/19 15:12:31: Loss (s-m-l): [0.001, 0.0582, 0.0]
04/19 15:12:31: Metrics (s-m-l): [[0.9996, 1.0, 0.9996], [0.9767, 1.0, 0.9767], [1.0, 1.0, 1.0]]
04/19 15:15:25: 
Iteration: 6800
04/19 15:15:25: Running time: 199.26 min
04/19 15:15:25: Data Loading time: 0.00007 s
04/19 15:15:25: Loss R: 0.0202
04/19 15:15:25: Loss G: 110.1555
04/19 15:15:25: bpp: 0.3270
04/19 15:15:25: Sum Loss: 110.8871
04/19 15:15:25: Loss (s-m-l): [0.0011, 0.0596, 0.0]
04/19 15:15:25: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9761, 1.0, 0.9761], [1.0, 1.0, 1.0]]
04/19 15:18:24: 
Iteration: 6900
04/19 15:18:24: Running time: 202.24 min
04/19 15:18:24: Data Loading time: 0.00007 s
04/19 15:18:24: Loss R: 0.0206
04/19 15:18:24: Loss G: 105.5734
04/19 15:18:24: bpp: 0.3252
04/19 15:18:24: Sum Loss: 106.3110
04/19 15:18:24: Loss (s-m-l): [0.0011, 0.0607, 0.0]
04/19 15:18:24: Metrics (s-m-l): [[0.9996, 1.0, 0.9996], [0.9756, 1.0, 0.9756], [1.0, 1.0, 1.0]]
04/19 15:21:20: 
Iteration: 7000
04/19 15:21:20: Running time: 205.17 min
04/19 15:21:20: Data Loading time: 0.00007 s
04/19 15:21:20: Loss R: 0.0202
04/19 15:21:20: Loss G: 111.8896
04/19 15:21:20: bpp: 0.3252
04/19 15:21:20: Sum Loss: 112.6195
04/19 15:21:20: Loss (s-m-l): [0.001, 0.0597, 0.0]
04/19 15:21:20: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9762, 1.0, 0.9762], [1.0, 1.0, 1.0]]
04/19 15:24:12: 
Iteration: 7100
04/19 15:24:12: Running time: 208.03 min
04/19 15:24:12: Data Loading time: 0.00007 s
04/19 15:24:12: Loss R: 0.0202
04/19 15:24:12: Loss G: 88.7896
04/19 15:24:12: bpp: 0.3277
04/19 15:24:12: Sum Loss: 89.5208
04/19 15:24:12: Loss (s-m-l): [0.001, 0.0595, 0.0]
04/19 15:24:12: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9761, 1.0, 0.9761], [1.0, 1.0, 1.0]]
04/19 15:27:07: 
Iteration: 7200
04/19 15:27:07: Running time: 210.96 min
04/19 15:27:07: Data Loading time: 0.00007 s
04/19 15:27:07: Loss R: 0.0194
04/19 15:27:07: Loss G: 80.0977
04/19 15:27:07: bpp: 0.3298
04/19 15:27:07: Sum Loss: 80.8163
04/19 15:27:07: Loss (s-m-l): [0.001, 0.0573, 0.0]
04/19 15:27:07: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.977, 1.0, 0.977], [1.0, 1.0, 1.0]]
04/19 15:30:04: 
Iteration: 7300
04/19 15:30:04: Running time: 213.90 min
04/19 15:30:04: Data Loading time: 0.00007 s
04/19 15:30:04: Loss R: 0.0191
04/19 15:30:04: Loss G: 87.2607
04/19 15:30:04: bpp: 0.3276
04/19 15:30:04: Sum Loss: 87.9703
04/19 15:30:04: Loss (s-m-l): [0.001, 0.0563, 0.0]
04/19 15:30:04: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9774, 1.0, 0.9774], [1.0, 1.0, 1.0]]
04/19 15:32:59: 
Iteration: 7400
04/19 15:32:59: Running time: 216.82 min
04/19 15:32:59: Data Loading time: 0.00007 s
04/19 15:32:59: Loss R: 0.0187
04/19 15:32:59: Loss G: 78.1945
04/19 15:32:59: bpp: 0.3292
04/19 15:32:59: Sum Loss: 78.8975
04/19 15:32:59: Loss (s-m-l): [0.001, 0.0551, 0.0]
04/19 15:32:59: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.978, 1.0, 0.978], [1.0, 1.0, 1.0]]
04/19 15:35:54: 
Iteration: 7500
04/19 15:35:54: Running time: 219.74 min
04/19 15:35:54: Data Loading time: 0.00007 s
04/19 15:35:54: Loss R: 0.0199
04/19 15:35:54: Loss G: 122.0292
04/19 15:35:54: bpp: 0.3275
04/19 15:35:54: Sum Loss: 122.7549
04/19 15:35:54: Loss (s-m-l): [0.001, 0.0587, 0.0]
04/19 15:35:54: Metrics (s-m-l): [[0.9996, 1.0, 0.9996], [0.9766, 1.0, 0.9766], [1.0, 1.0, 1.0]]
04/19 15:38:54: 
Iteration: 7600
04/19 15:38:54: Running time: 222.73 min
04/19 15:38:54: Data Loading time: 0.00007 s
04/19 15:38:54: Loss R: 0.0200
04/19 15:38:54: Loss G: 627.7971
04/19 15:38:54: bpp: 0.3228
04/19 15:38:54: Sum Loss: 628.5191
04/19 15:38:54: Loss (s-m-l): [0.001, 0.0588, 0.0]
04/19 15:38:54: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9765, 1.0, 0.9765], [1.0, 1.0, 1.0]]
04/19 15:41:47: 
Iteration: 7700
04/19 15:41:47: Running time: 225.63 min
04/19 15:41:47: Data Loading time: 0.00007 s
04/19 15:41:47: Loss R: 0.0196
04/19 15:41:47: Loss G: 285.3935
04/19 15:41:47: bpp: 0.3301
04/19 15:41:47: Sum Loss: 286.1152
04/19 15:41:47: Loss (s-m-l): [0.001, 0.0577, 0.0]
04/19 15:41:47: Metrics (s-m-l): [[0.9996, 1.0, 0.9996], [0.977, 1.0, 0.977], [1.0, 1.0, 1.0]]
04/19 15:44:45: 
Iteration: 7800
04/19 15:44:45: Running time: 228.58 min
04/19 15:44:45: Data Loading time: 0.00007 s
04/19 15:44:45: Loss R: 0.0204
04/19 15:44:45: Loss G: 175.6440
04/19 15:44:45: bpp: 0.3283
04/19 15:44:45: Sum Loss: 176.3808
04/19 15:44:45: Loss (s-m-l): [0.0011, 0.0602, 0.0]
04/19 15:44:45: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9757, 1.0, 0.9757], [1.0, 1.0, 1.0]]
04/19 15:47:42: 
Iteration: 7900
04/19 15:47:42: Running time: 231.54 min
04/19 15:47:42: Data Loading time: 0.00007 s
04/19 15:47:42: Loss R: 0.0196
04/19 15:47:42: Loss G: 113.7197
04/19 15:47:42: bpp: 0.3238
04/19 15:47:42: Sum Loss: 114.4345
04/19 15:47:42: Loss (s-m-l): [0.001, 0.0576, 0.0]
04/19 15:47:42: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9768, 1.0, 0.9768], [1.0, 1.0, 1.0]]
04/19 15:50:40: 
Iteration: 8000
04/19 15:50:40: Running time: 234.50 min
04/19 15:50:40: Data Loading time: 0.00007 s
04/19 15:50:40: Loss R: 0.0192
04/19 15:50:40: Loss G: 81.8342
04/19 15:50:40: bpp: 0.3261
04/19 15:50:40: Sum Loss: 82.5436
04/19 15:50:40: Loss (s-m-l): [0.0009, 0.0566, 0.0]
04/19 15:50:40: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9773, 1.0, 0.9773], [1.0, 1.0, 1.0]]
04/19 15:50:40: 
==========Evaluation: iter 8000==========
04/19 15:50:40: save checkpoints: ckpts/tp/tp8000
04/19 15:53:39: 
Iteration: 8100
04/19 15:53:39: Running time: 237.48 min
04/19 15:53:39: Data Loading time: 0.00007 s
04/19 15:53:39: Loss R: 0.0188
04/19 15:53:39: Loss G: 79.5908
04/19 15:53:39: bpp: 0.3279
04/19 15:53:39: Sum Loss: 80.2947
04/19 15:53:39: Loss (s-m-l): [0.001, 0.0554, 0.0]
04/19 15:53:39: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9778, 1.0, 0.9778], [1.0, 1.0, 1.0]]
04/19 15:56:31: 
Iteration: 8200
04/19 15:56:31: Running time: 240.35 min
04/19 15:56:31: Data Loading time: 0.00007 s
04/19 15:56:31: Loss R: 0.0189
04/19 15:56:31: Loss G: 71.5998
04/19 15:56:31: bpp: 0.3261
04/19 15:56:31: Sum Loss: 72.3031
04/19 15:56:31: Loss (s-m-l): [0.001, 0.0556, 0.0]
04/19 15:56:31: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9778, 1.0, 0.9778], [1.0, 1.0, 1.0]]
04/19 15:59:29: 
Iteration: 8300
04/19 15:59:29: Running time: 243.32 min
04/19 15:59:29: Data Loading time: 0.00007 s
04/19 15:59:29: Loss R: 0.0196
04/19 15:59:29: Loss G: 105.6933
04/19 15:59:29: bpp: 0.3267
04/19 15:59:29: Sum Loss: 106.4116
04/19 15:59:29: Loss (s-m-l): [0.001, 0.0577, 0.0]
04/19 15:59:29: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.977, 1.0, 0.977], [1.0, 1.0, 1.0]]
04/19 16:02:25: 
Iteration: 8400
04/19 16:02:25: Running time: 246.25 min
04/19 16:02:25: Data Loading time: 0.00007 s
04/19 16:02:25: Loss R: 0.0192
04/19 16:02:25: Loss G: 90.3559
04/19 16:02:25: bpp: 0.3310
04/19 16:02:25: Sum Loss: 91.0710
04/19 16:02:25: Loss (s-m-l): [0.001, 0.0566, 0.0]
04/19 16:02:25: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9771, 1.0, 0.9771], [1.0, 1.0, 1.0]]
04/19 16:05:25: 
Iteration: 8500
04/19 16:05:25: Running time: 249.25 min
04/19 16:05:25: Data Loading time: 0.00007 s
04/19 16:05:25: Loss R: 0.0188
04/19 16:05:25: Loss G: 80.0928
04/19 16:05:25: bpp: 0.3287
04/19 16:05:25: Sum Loss: 80.7978
04/19 16:05:25: Loss (s-m-l): [0.001, 0.0554, 0.0]
04/19 16:05:25: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9778, 1.0, 0.9778], [1.0, 1.0, 1.0]]
04/19 16:08:15: 
Iteration: 8600
04/19 16:08:15: Running time: 252.09 min
04/19 16:08:15: Data Loading time: 0.00007 s
04/19 16:08:15: Loss R: 0.0185
04/19 16:08:15: Loss G: 71.2191
04/19 16:08:15: bpp: 0.3271
04/19 16:08:15: Sum Loss: 71.9157
04/19 16:08:15: Loss (s-m-l): [0.001, 0.0544, 0.0]
04/19 16:08:15: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9783, 1.0, 0.9783], [1.0, 1.0, 1.0]]
04/19 16:11:13: 
Iteration: 8700
04/19 16:11:13: Running time: 255.04 min
04/19 16:11:13: Data Loading time: 0.00007 s
04/19 16:11:13: Loss R: 0.0191
04/19 16:11:13: Loss G: 61.8608
04/19 16:11:13: bpp: 0.3258
04/19 16:11:13: Sum Loss: 62.5680
04/19 16:11:13: Loss (s-m-l): [0.001, 0.0562, 0.0]
04/19 16:11:13: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9776, 1.0, 0.9776], [1.0, 1.0, 1.0]]
04/19 16:14:11: 
Iteration: 8800
04/19 16:14:11: Running time: 258.02 min
04/19 16:14:11: Data Loading time: 0.00007 s
04/19 16:14:11: Loss R: 0.0193
04/19 16:14:11: Loss G: 66.5051
04/19 16:14:11: bpp: 0.3263
04/19 16:14:11: Sum Loss: 67.2182
04/19 16:14:11: Loss (s-m-l): [0.0011, 0.057, 0.0]
04/19 16:14:11: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9773, 1.0, 0.9773], [1.0, 1.0, 1.0]]
04/19 16:17:11: 
Iteration: 8900
04/19 16:17:11: Running time: 261.02 min
04/19 16:17:11: Data Loading time: 0.00007 s
04/19 16:17:11: Loss R: 0.0192
04/19 16:17:11: Loss G: 72.8652
04/19 16:17:11: bpp: 0.3286
04/19 16:17:11: Sum Loss: 73.5775
04/19 16:17:11: Loss (s-m-l): [0.001, 0.0566, 0.0]
04/19 16:17:11: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9773, 1.0, 0.9773], [1.0, 1.0, 1.0]]
04/19 16:20:06: 
Iteration: 9000
04/19 16:20:06: Running time: 263.93 min
04/19 16:20:06: Data Loading time: 0.00007 s
04/19 16:20:06: Loss R: 0.0191
04/19 16:20:06: Loss G: 70.7359
04/19 16:20:06: bpp: 0.3289
04/19 16:20:06: Sum Loss: 71.4460
04/19 16:20:06: Loss (s-m-l): [0.001, 0.0562, 0.0]
04/19 16:20:06: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9775, 1.0, 0.9775], [1.0, 1.0, 1.0]]
04/19 16:23:05: 
Iteration: 9100
04/19 16:23:05: Running time: 266.93 min
04/19 16:23:05: Data Loading time: 0.00007 s
04/19 16:23:05: Loss R: 0.0179
04/19 16:23:05: Loss G: 65.4888
04/19 16:23:05: bpp: 0.3260
04/19 16:23:05: Sum Loss: 66.1732
04/19 16:23:05: Loss (s-m-l): [0.0009, 0.0528, 0.0]
04/19 16:23:05: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.979, 1.0, 0.979], [1.0, 1.0, 1.0]]
04/19 16:25:56: 
Iteration: 9200
04/19 16:25:56: Running time: 269.78 min
04/19 16:25:56: Data Loading time: 0.00007 s
04/19 16:25:56: Loss R: 0.0187
04/19 16:25:56: Loss G: 58.6624
04/19 16:25:56: bpp: 0.3297
04/19 16:25:56: Sum Loss: 59.3652
04/19 16:25:56: Loss (s-m-l): [0.001, 0.0549, 0.0]
04/19 16:25:56: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.978, 1.0, 0.978], [1.0, 1.0, 1.0]]
04/19 16:28:53: 
Iteration: 9300
04/19 16:28:53: Running time: 272.72 min
04/19 16:28:53: Data Loading time: 0.00007 s
04/19 16:28:53: Loss R: 0.0184
04/19 16:28:53: Loss G: 60.6800
04/19 16:28:53: bpp: 0.3288
04/19 16:28:53: Sum Loss: 61.3761
04/19 16:28:53: Loss (s-m-l): [0.0009, 0.0542, 0.0]
04/19 16:28:53: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9784, 1.0, 0.9784], [1.0, 1.0, 1.0]]
04/19 16:31:54: 
Iteration: 9400
04/19 16:31:54: Running time: 275.74 min
04/19 16:31:54: Data Loading time: 0.00008 s
04/19 16:31:54: Loss R: 0.0181
04/19 16:31:54: Loss G: 56.0176
04/19 16:31:54: bpp: 0.3270
04/19 16:31:54: Sum Loss: 56.7065
04/19 16:31:54: Loss (s-m-l): [0.0009, 0.0534, 0.0]
04/19 16:31:54: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9786, 1.0, 0.9786], [1.0, 1.0, 1.0]]
04/19 16:34:53: 
Iteration: 9500
04/19 16:34:53: Running time: 278.72 min
04/19 16:34:53: Data Loading time: 0.00007 s
04/19 16:34:53: Loss R: 0.0183
04/19 16:34:53: Loss G: 57.3975
04/19 16:34:53: bpp: 0.3266
04/19 16:34:53: Sum Loss: 58.0891
04/19 16:34:53: Loss (s-m-l): [0.0009, 0.0538, 0.0]
04/19 16:34:53: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9784, 1.0, 0.9784], [1.0, 1.0, 1.0]]
04/19 16:37:48: 
Iteration: 9600
04/19 16:37:48: Running time: 281.64 min
04/19 16:37:48: Data Loading time: 0.00007 s
04/19 16:37:48: Loss R: 0.0189
04/19 16:37:48: Loss G: 53.4252
04/19 16:37:48: bpp: 0.3281
04/19 16:37:48: Sum Loss: 54.1310
04/19 16:37:48: Loss (s-m-l): [0.001, 0.0557, 0.0]
04/19 16:37:48: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9777, 1.0, 0.9777], [1.0, 1.0, 1.0]]
04/19 16:40:44: 
Iteration: 9700
04/19 16:40:44: Running time: 284.56 min
04/19 16:40:44: Data Loading time: 0.00007 s
04/19 16:40:44: Loss R: 0.0190
04/19 16:40:44: Loss G: 53.4710
04/19 16:40:44: bpp: 0.3274
04/19 16:40:44: Sum Loss: 54.1788
04/19 16:40:44: Loss (s-m-l): [0.001, 0.0561, 0.0]
04/19 16:40:44: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9777, 1.0, 0.9777], [1.0, 1.0, 1.0]]
04/19 16:43:40: 
Iteration: 9800
04/19 16:43:40: Running time: 287.50 min
04/19 16:43:40: Data Loading time: 0.00007 s
04/19 16:43:40: Loss R: 0.0180
04/19 16:43:40: Loss G: 46.8510
04/19 16:43:40: bpp: 0.3295
04/19 16:43:40: Sum Loss: 47.5411
04/19 16:43:40: Loss (s-m-l): [0.001, 0.0531, 0.0]
04/19 16:43:40: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9787, 1.0, 0.9787], [1.0, 1.0, 1.0]]
04/19 16:46:35: 
Iteration: 9900
04/19 16:46:35: Running time: 290.42 min
04/19 16:46:35: Data Loading time: 0.00007 s
04/19 16:46:35: Loss R: 0.0182
04/19 16:46:35: Loss G: 46.2989
04/19 16:46:35: bpp: 0.3284
04/19 16:46:35: Sum Loss: 46.9915
04/19 16:46:35: Loss (s-m-l): [0.0009, 0.0537, 0.0]
04/19 16:46:35: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9784, 1.0, 0.9784], [1.0, 1.0, 1.0]]
04/19 16:49:33: 
Iteration: 10000
04/19 16:49:33: Running time: 293.39 min
04/19 16:49:33: Data Loading time: 0.00007 s
04/19 16:49:33: Loss R: 0.0190
04/19 16:49:33: Loss G: 60.3033
04/19 16:49:33: bpp: 0.3279
04/19 16:49:33: Sum Loss: 61.0106
04/19 16:49:33: Loss (s-m-l): [0.001, 0.0559, 0.0]
04/19 16:49:33: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9775, 1.0, 0.9775], [1.0, 1.0, 1.0]]
04/19 16:49:33: 
==========Evaluation: iter 10000==========
04/19 16:49:33: save checkpoints: ckpts/tp/tp10000
04/19 16:52:28: 
Iteration: 10100
04/19 16:52:28: Running time: 296.30 min
04/19 16:52:28: Data Loading time: 0.00007 s
04/19 16:52:28: Loss R: 0.0186
04/19 16:52:28: Loss G: 55.5516
04/19 16:52:28: bpp: 0.3280
04/19 16:52:28: Sum Loss: 56.2508
04/19 16:52:28: Loss (s-m-l): [0.001, 0.0547, 0.0]
04/19 16:52:28: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9783, 1.0, 0.9783], [1.0, 1.0, 1.0]]
04/19 16:55:21: 
Iteration: 10200
04/19 16:55:21: Running time: 299.19 min
04/19 16:55:21: Data Loading time: 0.00007 s
04/19 16:55:21: Loss R: 0.0205
04/19 16:55:21: Loss G: 47.2162
04/19 16:55:21: bpp: 0.3312
04/19 16:55:21: Sum Loss: 47.9582
04/19 16:55:21: Loss (s-m-l): [0.0016, 0.0601, 0.0]
04/19 16:55:21: Metrics (s-m-l): [[0.9995, 1.0, 0.9995], [0.9761, 1.0, 0.9761], [1.0, 1.0, 1.0]]
04/19 16:58:17: 
Iteration: 10300
04/19 16:58:17: Running time: 302.11 min
04/19 16:58:17: Data Loading time: 0.00007 s
04/19 16:58:17: Loss R: 0.0180
04/19 16:58:17: Loss G: 42.1955
04/19 16:58:17: bpp: 0.3297
04/19 16:58:17: Sum Loss: 42.8853
04/19 16:58:17: Loss (s-m-l): [0.001, 0.0531, 0.0]
04/19 16:58:17: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9789, 1.0, 0.9789], [1.0, 1.0, 1.0]]
04/19 17:01:11: 
Iteration: 10400
04/19 17:01:11: Running time: 305.02 min
04/19 17:01:11: Data Loading time: 0.00007 s
04/19 17:01:11: Loss R: 0.0184
04/19 17:01:11: Loss G: 41.5106
04/19 17:01:11: bpp: 0.3282
04/19 17:01:11: Sum Loss: 42.2077
04/19 17:01:11: Loss (s-m-l): [0.001, 0.0544, 0.0]
04/19 17:01:11: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9783, 1.0, 0.9783], [1.0, 1.0, 1.0]]
04/19 17:04:09: 
Iteration: 10500
04/19 17:04:09: Running time: 307.98 min
04/19 17:04:09: Data Loading time: 0.00007 s
04/19 17:04:09: Loss R: 0.0183
04/19 17:04:09: Loss G: 57.9520
04/19 17:04:09: bpp: 0.3281
04/19 17:04:09: Sum Loss: 58.6468
04/19 17:04:09: Loss (s-m-l): [0.0009, 0.0541, 0.0]
04/19 17:04:09: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9783, 1.0, 0.9783], [1.0, 1.0, 1.0]]
04/19 17:07:06: 
Iteration: 10600
04/19 17:07:06: Running time: 310.94 min
04/19 17:07:06: Data Loading time: 0.00007 s
04/19 17:07:06: Loss R: 0.0181
04/19 17:07:06: Loss G: 47.5479
04/19 17:07:06: bpp: 0.3281
04/19 17:07:06: Sum Loss: 48.2378
04/19 17:07:06: Loss (s-m-l): [0.0009, 0.0533, 0.0]
04/19 17:07:06: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9787, 1.0, 0.9787], [1.0, 1.0, 1.0]]
04/19 17:10:04: 
Iteration: 10700
04/19 17:10:04: Running time: 313.90 min
04/19 17:10:04: Data Loading time: 0.00007 s
04/19 17:10:04: Loss R: 0.0180
04/19 17:10:04: Loss G: 38.9907
04/19 17:10:04: bpp: 0.3288
04/19 17:10:04: Sum Loss: 39.6799
04/19 17:10:04: Loss (s-m-l): [0.0009, 0.0531, 0.0]
04/19 17:10:04: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9786, 1.0, 0.9786], [1.0, 1.0, 1.0]]
04/19 17:13:01: 
Iteration: 10800
04/19 17:13:01: Running time: 316.85 min
04/19 17:13:01: Data Loading time: 0.00007 s
04/19 17:13:01: Loss R: 0.0176
04/19 17:13:01: Loss G: 41.1441
04/19 17:13:01: bpp: 0.3289
04/19 17:13:01: Sum Loss: 41.8251
04/19 17:13:01: Loss (s-m-l): [0.001, 0.0518, 0.0]
04/19 17:13:01: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9794, 1.0, 0.9794], [1.0, 1.0, 1.0]]
04/19 17:15:51: 
Iteration: 10900
04/19 17:15:51: Running time: 319.69 min
04/19 17:15:51: Data Loading time: 0.00007 s
04/19 17:15:51: Loss R: 0.0180
04/19 17:15:51: Loss G: 44.3358
04/19 17:15:51: bpp: 0.3285
04/19 17:15:51: Sum Loss: 45.0251
04/19 17:15:51: Loss (s-m-l): [0.0009, 0.0532, 0.0]
04/19 17:15:51: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9787, 1.0, 0.9787], [1.0, 1.0, 1.0]]
04/19 17:18:47: 
Iteration: 11000
04/19 17:18:47: Running time: 322.63 min
04/19 17:18:47: Data Loading time: 0.00007 s
04/19 17:18:47: Loss R: 0.0174
04/19 17:18:47: Loss G: 38.2839
04/19 17:18:47: bpp: 0.3296
04/19 17:18:47: Sum Loss: 38.9609
04/19 17:18:47: Loss (s-m-l): [0.0009, 0.0512, 0.0]
04/19 17:18:47: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9794, 1.0, 0.9794], [1.0, 1.0, 1.0]]
04/19 17:21:44: 
Iteration: 11100
04/19 17:21:44: Running time: 325.57 min
04/19 17:21:44: Data Loading time: 0.00007 s
04/19 17:21:44: Loss R: 0.0192
04/19 17:21:44: Loss G: 34.9131
04/19 17:21:44: bpp: 0.3266
04/19 17:21:44: Sum Loss: 35.6243
04/19 17:21:44: Loss (s-m-l): [0.0012, 0.0565, 0.0]
04/19 17:21:44: Metrics (s-m-l): [[0.9996, 1.0, 0.9996], [0.9775, 1.0, 0.9775], [1.0, 1.0, 1.0]]
04/19 17:24:40: 
Iteration: 11200
04/19 17:24:40: Running time: 328.50 min
04/19 17:24:40: Data Loading time: 0.00007 s
04/19 17:24:40: Loss R: 0.0181
04/19 17:24:40: Loss G: 37.0411
04/19 17:24:40: bpp: 0.3270
04/19 17:24:40: Sum Loss: 37.7310
04/19 17:24:40: Loss (s-m-l): [0.001, 0.0534, 0.0]
04/19 17:24:40: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9788, 1.0, 0.9788], [1.0, 1.0, 1.0]]
04/19 17:27:35: 
Iteration: 11300
04/19 17:27:35: Running time: 331.42 min
04/19 17:27:35: Data Loading time: 0.00007 s
04/19 17:27:35: Loss R: 0.0177
04/19 17:27:35: Loss G: 33.8593
04/19 17:27:35: bpp: 0.3317
04/19 17:27:35: Sum Loss: 34.5456
04/19 17:27:35: Loss (s-m-l): [0.001, 0.0522, 0.0]
04/19 17:27:35: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9791, 1.0, 0.9791], [1.0, 1.0, 1.0]]
04/19 17:30:29: 
Iteration: 11400
04/19 17:30:29: Running time: 334.32 min
04/19 17:30:29: Data Loading time: 0.00007 s
04/19 17:30:29: Loss R: 0.0174
04/19 17:30:29: Loss G: 33.9953
04/19 17:30:29: bpp: 0.3334
04/19 17:30:29: Sum Loss: 34.6767
04/19 17:30:29: Loss (s-m-l): [0.0009, 0.0513, 0.0]
04/19 17:30:29: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9794, 1.0, 0.9794], [1.0, 1.0, 1.0]]
04/19 17:33:28: 
Iteration: 11500
04/19 17:33:28: Running time: 337.30 min
04/19 17:33:28: Data Loading time: 0.00007 s
04/19 17:33:28: Loss R: 0.0180
04/19 17:33:28: Loss G: 60.7367
04/19 17:33:28: bpp: 0.3266
04/19 17:33:28: Sum Loss: 61.4242
04/19 17:33:28: Loss (s-m-l): [0.0009, 0.0532, 0.0]
04/19 17:33:28: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9787, 1.0, 0.9787], [1.0, 1.0, 1.0]]
04/19 17:36:24: 
Iteration: 11600
04/19 17:36:24: Running time: 340.24 min
04/19 17:36:24: Data Loading time: 0.00010 s
04/19 17:36:24: Loss R: 0.0173
04/19 17:36:24: Loss G: 41.6083
04/19 17:36:24: bpp: 0.3267
04/19 17:36:24: Sum Loss: 42.2814
04/19 17:36:24: Loss (s-m-l): [0.001, 0.051, 0.0]
04/19 17:36:24: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9796, 1.0, 0.9796], [1.0, 1.0, 1.0]]
04/19 17:39:20: 
Iteration: 11700
04/19 17:39:20: Running time: 343.16 min
04/19 17:39:20: Data Loading time: 0.00007 s
04/19 17:39:20: Loss R: 0.0174
04/19 17:39:20: Loss G: 56.0938
04/19 17:39:20: bpp: 0.3269
04/19 17:39:20: Sum Loss: 56.7692
04/19 17:39:20: Loss (s-m-l): [0.0009, 0.0514, 0.0]
04/19 17:39:20: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9796, 1.0, 0.9796], [1.0, 1.0, 1.0]]
04/19 17:42:14: 
Iteration: 11800
04/19 17:42:14: Running time: 346.07 min
04/19 17:42:14: Data Loading time: 0.00007 s
04/19 17:42:14: Loss R: 0.0176
04/19 17:42:14: Loss G: 35.7885
04/19 17:42:14: bpp: 0.3270
04/19 17:42:14: Sum Loss: 36.4684
04/19 17:42:14: Loss (s-m-l): [0.0009, 0.052, 0.0]
04/19 17:42:14: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9791, 1.0, 0.9791], [1.0, 1.0, 1.0]]
04/19 17:45:12: 
Iteration: 11900
04/19 17:45:12: Running time: 349.03 min
04/19 17:45:12: Data Loading time: 0.00007 s
04/19 17:45:12: Loss R: 0.0175
04/19 17:45:12: Loss G: 93.7506
04/19 17:45:12: bpp: 0.3285
04/19 17:45:12: Sum Loss: 94.4298
04/19 17:45:12: Loss (s-m-l): [0.0009, 0.0517, 0.0]
04/19 17:45:12: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9793, 1.0, 0.9793], [1.0, 1.0, 1.0]]
04/19 17:48:07: 
Iteration: 12000
04/19 17:48:07: Running time: 351.96 min
04/19 17:48:07: Data Loading time: 0.00007 s
04/19 17:48:07: Loss R: 0.0181
04/19 17:48:07: Loss G: 34.3856
04/19 17:48:07: bpp: 0.3304
04/19 17:48:07: Sum Loss: 35.0775
04/19 17:48:07: Loss (s-m-l): [0.001, 0.0532, 0.0]
04/19 17:48:07: Metrics (s-m-l): [[0.9996, 1.0, 0.9996], [0.9787, 1.0, 0.9787], [1.0, 1.0, 1.0]]
04/19 17:48:07: 
==========Evaluation: iter 12000==========
04/19 17:48:07: save checkpoints: ckpts/tp/tp12000
04/19 17:48:07: LR: [0.0001, 0.0001, 0.0001]
04/19 17:51:05: 
Iteration: 12100
04/19 17:51:05: Running time: 354.91 min
04/19 17:51:05: Data Loading time: 0.00010 s
04/19 17:51:05: Loss R: 0.0166
04/19 17:51:05: Loss G: 33.1842
04/19 17:51:05: bpp: 0.3272
04/19 17:51:05: Sum Loss: 33.8442
04/19 17:51:05: Loss (s-m-l): [0.0008, 0.0491, 0.0]
04/19 17:51:05: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9805, 1.0, 0.9805], [1.0, 1.0, 1.0]]
04/19 17:54:00: 
Iteration: 12200
04/19 17:54:00: Running time: 357.84 min
04/19 17:54:00: Data Loading time: 0.00007 s
04/19 17:54:00: Loss R: 0.0155
04/19 17:54:00: Loss G: 35.5032
04/19 17:54:00: bpp: 0.3274
04/19 17:54:00: Sum Loss: 36.1399
04/19 17:54:00: Loss (s-m-l): [0.0008, 0.0456, 0.0]
04/19 17:54:00: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9819, 1.0, 0.9819], [1.0, 1.0, 1.0]]
04/19 17:56:52: 
Iteration: 12300
04/19 17:56:52: Running time: 360.71 min
04/19 17:56:52: Data Loading time: 0.00007 s
04/19 17:56:52: Loss R: 0.0164
04/19 17:56:52: Loss G: 36.0638
04/19 17:56:52: bpp: 0.3247
04/19 17:56:52: Sum Loss: 36.7164
04/19 17:56:52: Loss (s-m-l): [0.0008, 0.0484, 0.0]
04/19 17:56:52: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9807, 1.0, 0.9807], [1.0, 1.0, 1.0]]
04/19 17:59:50: 
Iteration: 12400
04/19 17:59:50: Running time: 363.68 min
04/19 17:59:50: Data Loading time: 0.00010 s
04/19 17:59:50: Loss R: 0.0165
04/19 17:59:50: Loss G: 28.6130
04/19 17:59:50: bpp: 0.3256
04/19 17:59:50: Sum Loss: 29.2687
04/19 17:59:50: Loss (s-m-l): [0.0008, 0.0487, 0.0]
04/19 17:59:50: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9804, 1.0, 0.9804], [1.0, 1.0, 1.0]]
04/19 18:02:45: 
Iteration: 12500
04/19 18:02:45: Running time: 366.59 min
04/19 18:02:45: Data Loading time: 0.00007 s
04/19 18:02:45: Loss R: 0.0167
04/19 18:02:45: Loss G: 30.0319
04/19 18:02:45: bpp: 0.3271
04/19 18:02:45: Sum Loss: 30.6928
04/19 18:02:45: Loss (s-m-l): [0.0008, 0.0493, 0.0]
04/19 18:02:45: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9802, 1.0, 0.9802], [1.0, 1.0, 1.0]]
04/19 18:05:40: 
Iteration: 12600
04/19 18:05:40: Running time: 369.50 min
04/19 18:05:40: Data Loading time: 0.00007 s
04/19 18:05:40: Loss R: 0.0159
04/19 18:05:40: Loss G: 31.4632
04/19 18:05:40: bpp: 0.3268
04/19 18:05:40: Sum Loss: 32.1076
04/19 18:05:40: Loss (s-m-l): [0.0008, 0.0469, 0.0]
04/19 18:05:40: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9813, 1.0, 0.9813], [1.0, 1.0, 1.0]]
04/19 18:08:38: 
Iteration: 12700
04/19 18:08:38: Running time: 372.47 min
04/19 18:08:38: Data Loading time: 0.00007 s
04/19 18:08:38: Loss R: 0.0158
04/19 18:08:38: Loss G: 28.1789
04/19 18:08:38: bpp: 0.3241
04/19 18:08:38: Sum Loss: 28.8180
04/19 18:08:38: Loss (s-m-l): [0.0008, 0.0464, 0.0]
04/19 18:08:38: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9815, 1.0, 0.9815], [1.0, 1.0, 1.0]]
04/19 18:11:39: 
Iteration: 12800
04/19 18:11:39: Running time: 375.49 min
04/19 18:11:39: Data Loading time: 0.00007 s
04/19 18:11:39: Loss R: 0.0164
04/19 18:11:39: Loss G: 35.5439
04/19 18:11:39: bpp: 0.3280
04/19 18:11:39: Sum Loss: 36.2007
04/19 18:11:39: Loss (s-m-l): [0.0008, 0.0485, 0.0]
04/19 18:11:39: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9805, 1.0, 0.9805], [1.0, 1.0, 1.0]]
04/19 18:14:34: 
Iteration: 12900
04/19 18:14:34: Running time: 378.41 min
04/19 18:14:34: Data Loading time: 0.00007 s
04/19 18:14:34: Loss R: 0.0149
04/19 18:14:34: Loss G: 31.8195
04/19 18:14:34: bpp: 0.3286
04/19 18:14:34: Sum Loss: 32.4468
04/19 18:14:34: Loss (s-m-l): [0.0008, 0.044, 0.0]
04/19 18:14:34: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9824, 1.0, 0.9824], [1.0, 1.0, 1.0]]
04/19 18:17:31: 
Iteration: 13000
04/19 18:17:31: Running time: 381.34 min
04/19 18:17:31: Data Loading time: 0.00007 s
04/19 18:17:31: Loss R: 0.0158
04/19 18:17:31: Loss G: 28.6313
04/19 18:17:31: bpp: 0.3282
04/19 18:17:31: Sum Loss: 29.2764
04/19 18:17:31: Loss (s-m-l): [0.0008, 0.0468, 0.0]
04/19 18:17:31: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9813, 1.0, 0.9813], [1.0, 1.0, 1.0]]
04/19 18:20:30: 
Iteration: 13100
04/19 18:20:30: Running time: 384.33 min
04/19 18:20:30: Data Loading time: 0.00007 s
04/19 18:20:30: Loss R: 0.0166
04/19 18:20:30: Loss G: 34.0169
04/19 18:20:30: bpp: 0.3242
04/19 18:20:30: Sum Loss: 34.6726
04/19 18:20:30: Loss (s-m-l): [0.0008, 0.0489, 0.0]
04/19 18:20:30: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9805, 1.0, 0.9805], [1.0, 1.0, 1.0]]
04/19 18:23:26: 
Iteration: 13200
04/19 18:23:26: Running time: 387.27 min
04/19 18:23:26: Data Loading time: 0.00007 s
04/19 18:23:26: Loss R: 0.0152
04/19 18:23:26: Loss G: 36.5129
04/19 18:23:26: bpp: 0.3261
04/19 18:23:26: Sum Loss: 37.1433
04/19 18:23:26: Loss (s-m-l): [0.0008, 0.0449, 0.0]
04/19 18:23:26: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9821, 1.0, 0.9821], [1.0, 1.0, 1.0]]
04/19 18:26:20: 
Iteration: 13300
04/19 18:26:20: Running time: 390.17 min
04/19 18:26:20: Data Loading time: 0.00007 s
04/19 18:26:20: Loss R: 0.0164
04/19 18:26:20: Loss G: 29.0622
04/19 18:26:20: bpp: 0.3284
04/19 18:26:20: Sum Loss: 29.7182
04/19 18:26:20: Loss (s-m-l): [0.0008, 0.0483, 0.0]
04/19 18:26:20: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9805, 1.0, 0.9805], [1.0, 1.0, 1.0]]
04/19 18:29:17: 
Iteration: 13400
04/19 18:29:17: Running time: 393.11 min
04/19 18:29:17: Data Loading time: 0.00007 s
04/19 18:29:17: Loss R: 0.0155
04/19 18:29:17: Loss G: 35.2022
04/19 18:29:17: bpp: 0.3241
04/19 18:29:17: Sum Loss: 35.8371
04/19 18:29:17: Loss (s-m-l): [0.0008, 0.0459, 0.0]
04/19 18:29:17: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9816, 1.0, 0.9816], [1.0, 1.0, 1.0]]
04/19 18:32:11: 
Iteration: 13500
04/19 18:32:11: Running time: 396.01 min
04/19 18:32:11: Data Loading time: 0.00007 s
04/19 18:32:11: Loss R: 0.0160
04/19 18:32:11: Loss G: 27.4157
04/19 18:32:11: bpp: 0.3261
04/19 18:32:11: Sum Loss: 28.0608
04/19 18:32:11: Loss (s-m-l): [0.0008, 0.0471, 0.0]
04/19 18:32:11: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9813, 1.0, 0.9813], [1.0, 1.0, 1.0]]
04/19 18:35:08: 
Iteration: 13600
04/19 18:35:08: Running time: 398.97 min
04/19 18:35:08: Data Loading time: 0.00007 s
04/19 18:35:08: Loss R: 0.0160
04/19 18:35:08: Loss G: 29.3239
04/19 18:35:08: bpp: 0.3234
04/19 18:35:08: Sum Loss: 29.9674
04/19 18:35:08: Loss (s-m-l): [0.0008, 0.0472, 0.0]
04/19 18:35:08: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9812, 1.0, 0.9812], [1.0, 1.0, 1.0]]
04/19 18:38:05: 
Iteration: 13700
04/19 18:38:05: Running time: 401.92 min
04/19 18:38:05: Data Loading time: 0.00007 s
04/19 18:38:05: Loss R: 0.0156
04/19 18:38:05: Loss G: 43.5857
04/19 18:38:05: bpp: 0.3244
04/19 18:38:05: Sum Loss: 44.2218
04/19 18:38:05: Loss (s-m-l): [0.0007, 0.046, 0.0]
04/19 18:38:05: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9816, 1.0, 0.9816], [1.0, 1.0, 1.0]]
04/19 18:40:59: 
Iteration: 13800
04/19 18:40:59: Running time: 404.83 min
04/19 18:40:59: Data Loading time: 0.00007 s
04/19 18:40:59: Loss R: 0.0154
04/19 18:40:59: Loss G: 34.3094
04/19 18:40:59: bpp: 0.3279
04/19 18:40:59: Sum Loss: 34.9451
04/19 18:40:59: Loss (s-m-l): [0.0008, 0.0454, 0.0]
04/19 18:40:59: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.982, 1.0, 0.982], [1.0, 1.0, 1.0]]
04/19 18:43:57: 
Iteration: 13900
04/19 18:43:57: Running time: 407.79 min
04/19 18:43:57: Data Loading time: 0.00007 s
04/19 18:43:57: Loss R: 0.0162
04/19 18:43:57: Loss G: 42.7045
04/19 18:43:57: bpp: 0.3254
04/19 18:43:57: Sum Loss: 43.3531
04/19 18:43:57: Loss (s-m-l): [0.0008, 0.0477, 0.0]
04/19 18:43:57: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9808, 1.0, 0.9808], [1.0, 1.0, 1.0]]
04/19 18:46:56: 
Iteration: 14000
04/19 18:46:56: Running time: 410.77 min
04/19 18:46:56: Data Loading time: 0.00007 s
04/19 18:46:56: Loss R: 0.0166
04/19 18:46:56: Loss G: 33.8974
04/19 18:46:56: bpp: 0.3255
04/19 18:46:56: Sum Loss: 34.5551
04/19 18:46:56: Loss (s-m-l): [0.0008, 0.049, 0.0]
04/19 18:46:56: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9804, 1.0, 0.9804], [1.0, 1.0, 1.0]]
04/19 18:46:56: 
==========Evaluation: iter 14000==========
04/19 18:46:56: save checkpoints: ckpts/tp/tp14000
04/19 18:49:51: 
Iteration: 14100
04/19 18:49:51: Running time: 413.69 min
04/19 18:49:51: Data Loading time: 0.00008 s
04/19 18:49:51: Loss R: 0.0163
04/19 18:49:51: Loss G: 27.9217
04/19 18:49:51: bpp: 0.3276
04/19 18:49:51: Sum Loss: 28.5756
04/19 18:49:51: Loss (s-m-l): [0.0008, 0.0481, 0.0]
04/19 18:49:51: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9806, 1.0, 0.9806], [1.0, 1.0, 1.0]]
04/19 18:52:46: 
Iteration: 14200
04/19 18:52:46: Running time: 416.60 min
04/19 18:52:46: Data Loading time: 0.00007 s
04/19 18:52:46: Loss R: 0.0149
04/19 18:52:46: Loss G: 27.6622
04/19 18:52:46: bpp: 0.3282
04/19 18:52:46: Sum Loss: 28.2889
04/19 18:52:46: Loss (s-m-l): [0.0008, 0.044, 0.0]
04/19 18:52:46: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9824, 1.0, 0.9824], [1.0, 1.0, 1.0]]
04/19 18:55:44: 
Iteration: 14300
04/19 18:55:44: Running time: 419.57 min
04/19 18:55:44: Data Loading time: 0.00007 s
04/19 18:55:44: Loss R: 0.0148
04/19 18:55:44: Loss G: 30.2163
04/19 18:55:44: bpp: 0.3263
04/19 18:55:44: Sum Loss: 30.8391
04/19 18:55:44: Loss (s-m-l): [0.0008, 0.0437, 0.0]
04/19 18:55:44: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9826, 1.0, 0.9826], [1.0, 1.0, 1.0]]
04/19 18:58:42: 
Iteration: 14400
04/19 18:58:42: Running time: 422.53 min
04/19 18:58:42: Data Loading time: 0.00007 s
04/19 18:58:42: Loss R: 0.0167
04/19 18:58:42: Loss G: 38.6630
04/19 18:58:42: bpp: 0.3264
04/19 18:58:42: Sum Loss: 39.3241
04/19 18:58:42: Loss (s-m-l): [0.0008, 0.0494, 0.0]
04/19 18:58:42: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9802, 1.0, 0.9802], [1.0, 1.0, 1.0]]
04/19 19:01:39: 
Iteration: 14500
04/19 19:01:39: Running time: 425.48 min
04/19 19:01:39: Data Loading time: 0.00007 s
04/19 19:01:39: Loss R: 0.0155
04/19 19:01:39: Loss G: 27.5292
04/19 19:01:39: bpp: 0.3245
04/19 19:01:39: Sum Loss: 28.1627
04/19 19:01:39: Loss (s-m-l): [0.0008, 0.0456, 0.0]
04/19 19:01:39: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9818, 1.0, 0.9818], [1.0, 1.0, 1.0]]
04/19 19:04:36: 
Iteration: 14600
04/19 19:04:36: Running time: 428.44 min
04/19 19:04:36: Data Loading time: 0.00007 s
04/19 19:04:36: Loss R: 0.0161
04/19 19:04:36: Loss G: 36.6920
04/19 19:04:36: bpp: 0.3290
04/19 19:04:36: Sum Loss: 37.3436
04/19 19:04:36: Loss (s-m-l): [0.0009, 0.0475, 0.0]
04/19 19:04:36: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.981, 1.0, 0.981], [1.0, 1.0, 1.0]]
04/19 19:07:29: 
Iteration: 14700
04/19 19:07:29: Running time: 431.32 min
04/19 19:07:29: Data Loading time: 0.00007 s
04/19 19:07:29: Loss R: 0.0160
04/19 19:07:29: Loss G: 29.8437
04/19 19:07:29: bpp: 0.3265
04/19 19:07:29: Sum Loss: 30.4911
04/19 19:07:29: Loss (s-m-l): [0.0008, 0.0473, 0.0]
04/19 19:07:29: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9811, 1.0, 0.9811], [1.0, 1.0, 1.0]]
04/19 19:10:24: 
Iteration: 14800
04/19 19:10:24: Running time: 434.23 min
04/19 19:10:24: Data Loading time: 0.00007 s
04/19 19:10:24: Loss R: 0.0154
04/19 19:10:24: Loss G: 28.5905
04/19 19:10:24: bpp: 0.3267
04/19 19:10:24: Sum Loss: 29.2260
04/19 19:10:24: Loss (s-m-l): [0.0008, 0.0455, 0.0]
04/19 19:10:24: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9818, 1.0, 0.9818], [1.0, 1.0, 1.0]]
04/19 19:13:20: 
Iteration: 14900
04/19 19:13:20: Running time: 437.17 min
04/19 19:13:20: Data Loading time: 0.00007 s
04/19 19:13:20: Loss R: 0.0158
04/19 19:13:20: Loss G: 37.9411
04/19 19:13:20: bpp: 0.3267
04/19 19:13:20: Sum Loss: 38.5843
04/19 19:13:20: Loss (s-m-l): [0.0008, 0.0467, 0.0]
04/19 19:13:20: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9814, 1.0, 0.9814], [1.0, 1.0, 1.0]]
04/19 19:16:17: 
Iteration: 15000
04/19 19:16:17: Running time: 440.12 min
04/19 19:16:17: Data Loading time: 0.00007 s
04/19 19:16:17: Loss R: 0.0171
04/19 19:16:17: Loss G: 55.2077
04/19 19:16:17: bpp: 0.3230
04/19 19:16:17: Sum Loss: 55.8717
04/19 19:16:17: Loss (s-m-l): [0.001, 0.0501, 0.0]
04/19 19:16:17: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.98, 1.0, 0.98], [1.0, 1.0, 1.0]]
04/19 19:19:14: 
Iteration: 15100
04/19 19:19:14: Running time: 443.07 min
04/19 19:19:14: Data Loading time: 0.00007 s
04/19 19:19:14: Loss R: 0.0152
04/19 19:19:14: Loss G: 32.8194
04/19 19:19:14: bpp: 0.3263
04/19 19:19:14: Sum Loss: 33.4493
04/19 19:19:14: Loss (s-m-l): [0.0008, 0.0448, 0.0]
04/19 19:19:14: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9822, 1.0, 0.9822], [1.0, 1.0, 1.0]]
04/19 19:22:08: 
Iteration: 15200
04/19 19:22:08: Running time: 445.98 min
04/19 19:22:08: Data Loading time: 0.00007 s
04/19 19:22:08: Loss R: 0.0156
04/19 19:22:08: Loss G: 29.0455
04/19 19:22:08: bpp: 0.3257
04/19 19:22:08: Sum Loss: 29.6839
04/19 19:22:08: Loss (s-m-l): [0.0008, 0.0461, 0.0]
04/19 19:22:08: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9816, 1.0, 0.9816], [1.0, 1.0, 1.0]]
04/19 19:25:02: 
Iteration: 15300
04/19 19:25:02: Running time: 448.87 min
04/19 19:25:02: Data Loading time: 0.00007 s
04/19 19:25:02: Loss R: 0.0149
04/19 19:25:02: Loss G: 28.3537
04/19 19:25:02: bpp: 0.3248
04/19 19:25:02: Sum Loss: 28.9761
04/19 19:25:02: Loss (s-m-l): [0.0008, 0.0439, 0.0]
04/19 19:25:02: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9825, 1.0, 0.9825], [1.0, 1.0, 1.0]]
04/19 19:27:59: 
Iteration: 15400
04/19 19:27:59: Running time: 451.82 min
04/19 19:27:59: Data Loading time: 0.00007 s
04/19 19:27:59: Loss R: 0.0155
04/19 19:27:59: Loss G: 41.6336
04/19 19:27:59: bpp: 0.3268
04/19 19:27:59: Sum Loss: 42.2712
04/19 19:27:59: Loss (s-m-l): [0.0008, 0.0458, 0.0]
04/19 19:27:59: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9818, 1.0, 0.9818], [1.0, 1.0, 1.0]]
04/19 19:30:53: 
Iteration: 15500
04/19 19:30:53: Running time: 454.72 min
04/19 19:30:53: Data Loading time: 0.00007 s
04/19 19:30:53: Loss R: 0.0157
04/19 19:30:53: Loss G: 37.3467
04/19 19:30:53: bpp: 0.3281
04/19 19:30:53: Sum Loss: 37.9882
04/19 19:30:53: Loss (s-m-l): [0.0008, 0.0462, 0.0]
04/19 19:30:53: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9814, 1.0, 0.9814], [1.0, 1.0, 1.0]]
04/19 19:33:50: 
Iteration: 15600
04/19 19:33:50: Running time: 457.67 min
04/19 19:33:50: Data Loading time: 0.00007 s
04/19 19:33:50: Loss R: 0.0152
04/19 19:33:50: Loss G: 27.5383
04/19 19:33:50: bpp: 0.3264
04/19 19:33:50: Sum Loss: 28.1686
04/19 19:33:50: Loss (s-m-l): [0.0008, 0.0448, 0.0]
04/19 19:33:50: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9823, 1.0, 0.9823], [1.0, 1.0, 1.0]]
04/19 19:36:46: 
Iteration: 15700
04/19 19:36:46: Running time: 460.61 min
04/19 19:36:46: Data Loading time: 0.00007 s
04/19 19:36:46: Loss R: 0.0163
04/19 19:36:46: Loss G: 28.9999
04/19 19:36:46: bpp: 0.3256
04/19 19:36:46: Sum Loss: 29.6523
04/19 19:36:46: Loss (s-m-l): [0.001, 0.0481, 0.0]
04/19 19:36:46: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9808, 1.0, 0.9808], [1.0, 1.0, 1.0]]
04/19 19:39:47: 
Iteration: 15800
04/19 19:39:47: Running time: 463.62 min
04/19 19:39:47: Data Loading time: 0.00007 s
04/19 19:39:47: Loss R: 0.0155
04/19 19:39:47: Loss G: 35.2639
04/19 19:39:47: bpp: 0.3292
04/19 19:39:47: Sum Loss: 35.9024
04/19 19:39:47: Loss (s-m-l): [0.0008, 0.0456, 0.0]
04/19 19:39:47: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9818, 1.0, 0.9818], [1.0, 1.0, 1.0]]
04/19 19:42:44: 
Iteration: 15900
04/19 19:42:44: Running time: 466.57 min
04/19 19:42:44: Data Loading time: 0.00007 s
04/19 19:42:44: Loss R: 0.0158
04/19 19:42:44: Loss G: 31.8799
04/19 19:42:44: bpp: 0.3289
04/19 19:42:44: Sum Loss: 32.5241
04/19 19:42:44: Loss (s-m-l): [0.0007, 0.0466, 0.0]
04/19 19:42:44: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9813, 1.0, 0.9813], [1.0, 1.0, 1.0]]
04/19 19:45:42: 
Iteration: 16000
04/19 19:45:42: Running time: 469.53 min
04/19 19:45:42: Data Loading time: 0.00010 s
04/19 19:45:42: Loss R: 0.0152
04/19 19:45:42: Loss G: 34.6036
04/19 19:45:42: bpp: 0.3266
04/19 19:45:42: Sum Loss: 35.2348
04/19 19:45:42: Loss (s-m-l): [0.0008, 0.0449, 0.0]
04/19 19:45:42: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9821, 1.0, 0.9821], [1.0, 1.0, 1.0]]
04/19 19:45:42: 
==========Evaluation: iter 16000==========
04/19 19:45:42: save checkpoints: ckpts/tp/tp16000
04/19 19:48:40: 
Iteration: 16100
04/19 19:48:40: Running time: 472.50 min
04/19 19:48:40: Data Loading time: 0.00007 s
04/19 19:48:40: Loss R: 0.0155
04/19 19:48:40: Loss G: 28.9710
04/19 19:48:40: bpp: 0.3239
04/19 19:48:40: Sum Loss: 29.6056
04/19 19:48:40: Loss (s-m-l): [0.0008, 0.0458, 0.0]
04/19 19:48:40: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9818, 1.0, 0.9818], [1.0, 1.0, 1.0]]
04/19 19:51:37: 
Iteration: 16200
04/19 19:51:37: Running time: 475.46 min
04/19 19:51:37: Data Loading time: 0.00007 s
04/19 19:51:37: Loss R: 0.0153
04/19 19:51:37: Loss G: 32.9479
04/19 19:51:37: bpp: 0.3286
04/19 19:51:37: Sum Loss: 33.5817
04/19 19:51:37: Loss (s-m-l): [0.0008, 0.045, 0.0]
04/19 19:51:37: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9821, 1.0, 0.9821], [1.0, 1.0, 1.0]]
04/19 19:54:35: 
Iteration: 16300
04/19 19:54:35: Running time: 478.42 min
04/19 19:54:35: Data Loading time: 0.00007 s
04/19 19:54:35: Loss R: 0.0153
04/19 19:54:35: Loss G: 32.9575
04/19 19:54:35: bpp: 0.3224
04/19 19:54:35: Sum Loss: 33.5856
04/19 19:54:35: Loss (s-m-l): [0.0008, 0.045, 0.0]
04/19 19:54:35: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.982, 1.0, 0.982], [1.0, 1.0, 1.0]]
04/19 19:57:31: 
Iteration: 16400
04/19 19:57:31: Running time: 481.35 min
04/19 19:57:31: Data Loading time: 0.00007 s
04/19 19:57:31: Loss R: 0.0156
04/19 19:57:31: Loss G: 33.8186
04/19 19:57:31: bpp: 0.3265
04/19 19:57:31: Sum Loss: 34.4570
04/19 19:57:31: Loss (s-m-l): [0.0008, 0.046, 0.0]
04/19 19:57:31: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9816, 1.0, 0.9816], [1.0, 1.0, 1.0]]
04/19 20:00:30: 
Iteration: 16500
04/19 20:00:30: Running time: 484.34 min
04/19 20:00:30: Data Loading time: 0.00012 s
04/19 20:00:30: Loss R: 0.0150
04/19 20:00:30: Loss G: 32.2588
04/19 20:00:30: bpp: 0.3239
04/19 20:00:30: Sum Loss: 32.8828
04/19 20:00:30: Loss (s-m-l): [0.0008, 0.0442, 0.0]
04/19 20:00:30: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9824, 1.0, 0.9824], [1.0, 1.0, 1.0]]
04/19 20:03:32: 
Iteration: 16600
04/19 20:03:32: Running time: 487.37 min
04/19 20:03:32: Data Loading time: 0.00007 s
04/19 20:03:32: Loss R: 0.0153
04/19 20:03:32: Loss G: 44.1832
04/19 20:03:32: bpp: 0.3254
04/19 20:03:32: Sum Loss: 44.8152
04/19 20:03:32: Loss (s-m-l): [0.0008, 0.0452, 0.0]
04/19 20:03:32: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9819, 1.0, 0.9819], [1.0, 1.0, 1.0]]
04/19 20:06:29: 
Iteration: 16700
04/19 20:06:29: Running time: 490.31 min
04/19 20:06:29: Data Loading time: 0.00007 s
04/19 20:06:29: Loss R: 0.0151
04/19 20:06:29: Loss G: 51.7803
04/19 20:06:29: bpp: 0.3249
04/19 20:06:29: Sum Loss: 52.4082
04/19 20:06:29: Loss (s-m-l): [0.0008, 0.0447, 0.0]
04/19 20:06:29: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9823, 1.0, 0.9823], [1.0, 1.0, 1.0]]
04/19 20:09:26: 
Iteration: 16800
04/19 20:09:26: Running time: 493.28 min
04/19 20:09:26: Data Loading time: 0.00007 s
04/19 20:09:26: Loss R: 0.0156
04/19 20:09:26: Loss G: 30.4477
04/19 20:09:26: bpp: 0.3251
04/19 20:09:26: Sum Loss: 31.0847
04/19 20:09:26: Loss (s-m-l): [0.0008, 0.046, 0.0]
04/19 20:09:26: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9816, 1.0, 0.9816], [1.0, 1.0, 1.0]]
04/19 20:12:24: 
Iteration: 16900
04/19 20:12:24: Running time: 496.24 min
04/19 20:12:24: Data Loading time: 0.00007 s
04/19 20:12:24: Loss R: 0.0151
04/19 20:12:24: Loss G: 29.0689
04/19 20:12:24: bpp: 0.3276
04/19 20:12:24: Sum Loss: 29.6991
04/19 20:12:24: Loss (s-m-l): [0.0008, 0.0446, 0.0]
04/19 20:12:24: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9821, 1.0, 0.9821], [1.0, 1.0, 1.0]]
04/19 20:15:25: 
Iteration: 17000
04/19 20:15:25: Running time: 499.25 min
04/19 20:15:25: Data Loading time: 0.00007 s
04/19 20:15:25: Loss R: 0.0151
04/19 20:15:25: Loss G: 29.0179
04/19 20:15:25: bpp: 0.3278
04/19 20:15:25: Sum Loss: 29.6479
04/19 20:15:25: Loss (s-m-l): [0.0008, 0.0445, 0.0]
04/19 20:15:25: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9822, 1.0, 0.9822], [1.0, 1.0, 1.0]]
04/19 20:18:21: 
Iteration: 17100
04/19 20:18:21: Running time: 502.18 min
04/19 20:18:21: Data Loading time: 0.00007 s
04/19 20:18:21: Loss R: 0.0155
04/19 20:18:21: Loss G: 30.8755
04/19 20:18:21: bpp: 0.3270
04/19 20:18:21: Sum Loss: 31.5128
04/19 20:18:21: Loss (s-m-l): [0.0008, 0.0457, 0.0]
04/19 20:18:21: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9817, 1.0, 0.9817], [1.0, 1.0, 1.0]]
04/19 20:21:11: 
Iteration: 17200
04/19 20:21:11: Running time: 505.03 min
04/19 20:21:11: Data Loading time: 0.00007 s
04/19 20:21:11: Loss R: 0.0151
04/19 20:21:11: Loss G: 30.9437
04/19 20:21:11: bpp: 0.3282
04/19 20:21:11: Sum Loss: 31.5732
04/19 20:21:11: Loss (s-m-l): [0.0008, 0.0444, 0.0]
04/19 20:21:11: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9821, 1.0, 0.9821], [1.0, 1.0, 1.0]]
04/19 20:24:09: 
Iteration: 17300
04/19 20:24:09: Running time: 507.98 min
04/19 20:24:09: Data Loading time: 0.00007 s
04/19 20:24:09: Loss R: 0.0151
04/19 20:24:09: Loss G: 44.8536
04/19 20:24:09: bpp: 0.3245
04/19 20:24:09: Sum Loss: 45.4808
04/19 20:24:09: Loss (s-m-l): [0.0008, 0.0446, 0.0]
04/19 20:24:09: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9822, 1.0, 0.9822], [1.0, 1.0, 1.0]]
04/19 20:27:05: 
Iteration: 17400
04/19 20:27:05: Running time: 510.92 min
04/19 20:27:05: Data Loading time: 0.00007 s
04/19 20:27:05: Loss R: 0.0152
04/19 20:27:05: Loss G: 35.3398
04/19 20:27:05: bpp: 0.3227
04/19 20:27:05: Sum Loss: 35.9674
04/19 20:27:05: Loss (s-m-l): [0.0008, 0.045, 0.0]
04/19 20:27:05: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9822, 1.0, 0.9822], [1.0, 1.0, 1.0]]
04/19 20:30:04: 
Iteration: 17500
04/19 20:30:04: Running time: 513.90 min
04/19 20:30:04: Data Loading time: 0.00007 s
04/19 20:30:04: Loss R: 0.0160
04/19 20:30:04: Loss G: 34.8895
04/19 20:30:04: bpp: 0.3259
04/19 20:30:04: Sum Loss: 35.5361
04/19 20:30:04: Loss (s-m-l): [0.0008, 0.0473, 0.0]
04/19 20:30:04: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9812, 1.0, 0.9812], [1.0, 1.0, 1.0]]
04/19 20:33:01: 
Iteration: 17600
04/19 20:33:01: Running time: 516.86 min
04/19 20:33:01: Data Loading time: 0.00007 s
04/19 20:33:01: Loss R: 0.0149
04/19 20:33:01: Loss G: 33.3140
04/19 20:33:01: bpp: 0.3284
04/19 20:33:01: Sum Loss: 33.9403
04/19 20:33:01: Loss (s-m-l): [0.0008, 0.0439, 0.0]
04/19 20:33:01: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9825, 1.0, 0.9825], [1.0, 1.0, 1.0]]
04/19 20:35:58: 
Iteration: 17700
04/19 20:35:58: Running time: 519.80 min
04/19 20:35:58: Data Loading time: 0.00007 s
04/19 20:35:58: Loss R: 0.0147
04/19 20:35:58: Loss G: 28.9473
04/19 20:35:58: bpp: 0.3270
04/19 20:35:58: Sum Loss: 29.5680
04/19 20:35:58: Loss (s-m-l): [0.0008, 0.0433, 0.0]
04/19 20:35:58: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9828, 1.0, 0.9828], [1.0, 1.0, 1.0]]
04/19 20:38:57: 
Iteration: 17800
04/19 20:38:57: Running time: 522.79 min
04/19 20:38:57: Data Loading time: 0.00007 s
04/19 20:38:57: Loss R: 0.0144
04/19 20:38:57: Loss G: 32.0684
04/19 20:38:57: bpp: 0.3291
04/19 20:38:57: Sum Loss: 32.6845
04/19 20:38:57: Loss (s-m-l): [0.0008, 0.0423, 0.0]
04/19 20:38:57: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9832, 1.0, 0.9832], [1.0, 1.0, 1.0]]
04/19 20:41:54: 
Iteration: 17900
04/19 20:41:54: Running time: 525.74 min
04/19 20:41:54: Data Loading time: 0.00007 s
04/19 20:41:54: Loss R: 0.0154
04/19 20:41:54: Loss G: 39.7358
04/19 20:41:54: bpp: 0.3233
04/19 20:41:54: Sum Loss: 40.3670
04/19 20:41:54: Loss (s-m-l): [0.0008, 0.0454, 0.0]
04/19 20:41:54: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.982, 1.0, 0.982], [1.0, 1.0, 1.0]]
04/19 20:44:51: 
Iteration: 18000
04/19 20:44:51: Running time: 528.68 min
04/19 20:44:51: Data Loading time: 0.00007 s
04/19 20:44:51: Loss R: 0.0150
04/19 20:44:51: Loss G: 47.3512
04/19 20:44:51: bpp: 0.3298
04/19 20:44:51: Sum Loss: 47.9809
04/19 20:44:51: Loss (s-m-l): [0.0008, 0.0442, 0.0]
04/19 20:44:51: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9822, 1.0, 0.9822], [1.0, 1.0, 1.0]]
04/19 20:44:51: 
==========Evaluation: iter 18000==========
04/19 20:44:51: save checkpoints: ckpts/tp/tp18000
04/19 20:44:51: LR: [5e-05, 5e-05, 5e-05]
04/19 20:47:47: 
Iteration: 18100
04/19 20:47:47: Running time: 531.62 min
04/19 20:47:47: Data Loading time: 0.00007 s
04/19 20:47:47: Loss R: 0.0140
04/19 20:47:47: Loss G: 34.4643
04/19 20:47:47: bpp: 0.3239
04/19 20:47:47: Sum Loss: 35.0680
04/19 20:47:47: Loss (s-m-l): [0.0007, 0.0413, 0.0]
04/19 20:47:47: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9836, 1.0, 0.9836], [1.0, 1.0, 1.0]]
04/19 20:50:52: 
Iteration: 18200
04/19 20:50:52: Running time: 534.70 min
04/19 20:50:52: Data Loading time: 0.00007 s
04/19 20:50:52: Loss R: 0.0138
04/19 20:50:52: Loss G: 29.4115
04/19 20:50:52: bpp: 0.3234
04/19 20:50:52: Sum Loss: 30.0110
04/19 20:50:52: Loss (s-m-l): [0.0007, 0.0407, 0.0]
04/19 20:50:52: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9837, 1.0, 0.9837], [1.0, 1.0, 1.0]]
04/19 20:53:45: 
Iteration: 18300
04/19 20:53:45: Running time: 537.59 min
04/19 20:53:45: Data Loading time: 0.00007 s
04/19 20:53:45: Loss R: 0.0144
04/19 20:53:45: Loss G: 30.8872
04/19 20:53:45: bpp: 0.3212
04/19 20:53:45: Sum Loss: 31.4955
04/19 20:53:45: Loss (s-m-l): [0.0007, 0.0423, 0.0]
04/19 20:53:45: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9833, 1.0, 0.9833], [1.0, 1.0, 1.0]]
04/19 20:56:35: 
Iteration: 18400
04/19 20:56:35: Running time: 540.43 min
04/19 20:56:35: Data Loading time: 0.00007 s
04/19 20:56:35: Loss R: 0.0141
04/19 20:56:35: Loss G: 30.1667
04/19 20:56:35: bpp: 0.3250
04/19 20:56:35: Sum Loss: 30.7734
04/19 20:56:35: Loss (s-m-l): [0.0007, 0.0415, 0.0]
04/19 20:56:35: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9835, 1.0, 0.9835], [1.0, 1.0, 1.0]]
04/19 20:59:31: 
Iteration: 18500
04/19 20:59:31: Running time: 543.36 min
04/19 20:59:31: Data Loading time: 0.00007 s
04/19 20:59:31: Loss R: 0.0148
04/19 20:59:31: Loss G: 34.6490
04/19 20:59:31: bpp: 0.3258
04/19 20:59:31: Sum Loss: 35.2712
04/19 20:59:31: Loss (s-m-l): [0.0008, 0.0437, 0.0]
04/19 20:59:31: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9825, 1.0, 0.9825], [1.0, 1.0, 1.0]]
04/19 21:02:29: 
Iteration: 18600
04/19 21:02:29: Running time: 546.32 min
04/19 21:02:29: Data Loading time: 0.00007 s
04/19 21:02:29: Loss R: 0.0145
04/19 21:02:29: Loss G: 38.5127
04/19 21:02:29: bpp: 0.3230
04/19 21:02:29: Sum Loss: 39.1254
04/19 21:02:29: Loss (s-m-l): [0.0007, 0.0427, 0.0]
04/19 21:02:29: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.983, 1.0, 0.983], [1.0, 1.0, 1.0]]
04/19 21:05:26: 
Iteration: 18700
04/19 21:05:26: Running time: 549.27 min
04/19 21:05:26: Data Loading time: 0.00007 s
04/19 21:05:26: Loss R: 0.0149
04/19 21:05:26: Loss G: 35.3242
04/19 21:05:26: bpp: 0.3257
04/19 21:05:26: Sum Loss: 35.9474
04/19 21:05:26: Loss (s-m-l): [0.0007, 0.0439, 0.0]
04/19 21:05:26: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9824, 1.0, 0.9824], [1.0, 1.0, 1.0]]
04/19 21:08:18: 
Iteration: 18800
04/19 21:08:18: Running time: 552.14 min
04/19 21:08:18: Data Loading time: 0.00007 s
04/19 21:08:18: Loss R: 0.0143
04/19 21:08:18: Loss G: 31.7744
04/19 21:08:18: bpp: 0.3248
04/19 21:08:18: Sum Loss: 32.3850
04/19 21:08:18: Loss (s-m-l): [0.0007, 0.0421, 0.0]
04/19 21:08:18: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9831, 1.0, 0.9831], [1.0, 1.0, 1.0]]
04/19 21:11:16: 
Iteration: 18900
04/19 21:11:16: Running time: 555.11 min
04/19 21:11:16: Data Loading time: 0.00007 s
04/19 21:11:16: Loss R: 0.0143
04/19 21:11:16: Loss G: 31.3743
04/19 21:11:16: bpp: 0.3229
04/19 21:11:16: Sum Loss: 31.9831
04/19 21:11:16: Loss (s-m-l): [0.0007, 0.0422, 0.0]
04/19 21:11:16: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.983, 1.0, 0.983], [1.0, 1.0, 1.0]]
04/19 21:14:10: 
Iteration: 19000
04/19 21:14:10: Running time: 558.00 min
04/19 21:14:10: Data Loading time: 0.00010 s
04/19 21:14:10: Loss R: 0.0141
04/19 21:14:10: Loss G: 32.8287
04/19 21:14:10: bpp: 0.3230
04/19 21:14:10: Sum Loss: 33.4330
04/19 21:14:10: Loss (s-m-l): [0.0007, 0.0415, 0.0]
04/19 21:14:10: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9835, 1.0, 0.9835], [1.0, 1.0, 1.0]]
04/19 21:17:05: 
Iteration: 19100
04/19 21:17:05: Running time: 560.93 min
04/19 21:17:05: Data Loading time: 0.00007 s
04/19 21:17:05: Loss R: 0.0146
04/19 21:17:05: Loss G: 32.9406
04/19 21:17:05: bpp: 0.3245
04/19 21:17:05: Sum Loss: 33.5569
04/19 21:17:05: Loss (s-m-l): [0.0007, 0.043, 0.0]
04/19 21:17:05: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9827, 1.0, 0.9827], [1.0, 1.0, 1.0]]
04/19 21:20:06: 
Iteration: 19200
04/19 21:20:06: Running time: 563.94 min
04/19 21:20:06: Data Loading time: 0.00007 s
04/19 21:20:06: Loss R: 0.0150
04/19 21:20:06: Loss G: 41.8373
04/19 21:20:06: bpp: 0.3237
04/19 21:20:06: Sum Loss: 42.4607
04/19 21:20:06: Loss (s-m-l): [0.0007, 0.0442, 0.0]
04/19 21:20:06: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9822, 1.0, 0.9822], [1.0, 1.0, 1.0]]
04/19 21:23:02: 
Iteration: 19300
04/19 21:23:02: Running time: 566.88 min
04/19 21:23:02: Data Loading time: 0.00007 s
04/19 21:23:02: Loss R: 0.0138
04/19 21:23:02: Loss G: 54.5913
04/19 21:23:02: bpp: 0.3224
04/19 21:23:02: Sum Loss: 55.1899
04/19 21:23:02: Loss (s-m-l): [0.0007, 0.0408, 0.0]
04/19 21:23:02: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9838, 1.0, 0.9838], [1.0, 1.0, 1.0]]
04/19 21:26:00: 
Iteration: 19400
04/19 21:26:00: Running time: 569.83 min
04/19 21:26:00: Data Loading time: 0.00007 s
04/19 21:26:00: Loss R: 0.0145
04/19 21:26:00: Loss G: 31.6503
04/19 21:26:00: bpp: 0.3261
04/19 21:26:00: Sum Loss: 32.2660
04/19 21:26:00: Loss (s-m-l): [0.0007, 0.0427, 0.0]
04/19 21:26:00: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9828, 1.0, 0.9828], [1.0, 1.0, 1.0]]
04/19 21:28:56: 
Iteration: 19500
04/19 21:28:56: Running time: 572.77 min
04/19 21:28:56: Data Loading time: 0.00007 s
04/19 21:28:56: Loss R: 0.0137
04/19 21:28:56: Loss G: 31.8706
04/19 21:28:56: bpp: 0.3237
04/19 21:28:56: Sum Loss: 32.4693
04/19 21:28:56: Loss (s-m-l): [0.0007, 0.0406, 0.0]
04/19 21:28:56: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.984, 1.0, 0.984], [1.0, 1.0, 1.0]]
04/19 21:31:52: 
Iteration: 19600
04/19 21:31:52: Running time: 575.70 min
04/19 21:31:52: Data Loading time: 0.00007 s
04/19 21:31:52: Loss R: 0.0143
04/19 21:31:52: Loss G: 35.3279
04/19 21:31:52: bpp: 0.3248
04/19 21:31:52: Sum Loss: 35.9383
04/19 21:31:52: Loss (s-m-l): [0.0007, 0.0421, 0.0]
04/19 21:31:52: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9831, 1.0, 0.9831], [1.0, 1.0, 1.0]]
04/19 21:34:47: 
Iteration: 19700
04/19 21:34:47: Running time: 578.62 min
04/19 21:34:47: Data Loading time: 0.00007 s
04/19 21:34:47: Loss R: 0.0143
04/19 21:34:47: Loss G: 32.3749
04/19 21:34:47: bpp: 0.3242
04/19 21:34:47: Sum Loss: 32.9845
04/19 21:34:47: Loss (s-m-l): [0.0007, 0.0421, 0.0]
04/19 21:34:47: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9832, 1.0, 0.9832], [1.0, 1.0, 1.0]]
04/19 21:37:43: 
Iteration: 19800
04/19 21:37:43: Running time: 581.56 min
04/19 21:37:43: Data Loading time: 0.00007 s
04/19 21:37:43: Loss R: 0.0145
04/19 21:37:43: Loss G: 34.4248
04/19 21:37:43: bpp: 0.3229
04/19 21:37:43: Sum Loss: 35.0380
04/19 21:37:43: Loss (s-m-l): [0.0007, 0.0428, 0.0]
04/19 21:37:43: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9828, 1.0, 0.9828], [1.0, 1.0, 1.0]]
04/19 21:40:39: 
Iteration: 19900
04/19 21:40:39: Running time: 584.48 min
04/19 21:40:39: Data Loading time: 0.00007 s
04/19 21:40:39: Loss R: 0.0143
04/19 21:40:39: Loss G: 40.9883
04/19 21:40:39: bpp: 0.3247
04/19 21:40:39: Sum Loss: 41.5999
04/19 21:40:39: Loss (s-m-l): [0.0007, 0.0423, 0.0]
04/19 21:40:39: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9831, 1.0, 0.9831], [1.0, 1.0, 1.0]]
04/19 21:43:36: 
Iteration: 20000
04/19 21:43:36: Running time: 587.43 min
04/19 21:43:36: Data Loading time: 0.00007 s
04/19 21:43:36: Loss R: 0.0143
04/19 21:43:36: Loss G: 35.9709
04/19 21:43:36: bpp: 0.3240
04/19 21:43:36: Sum Loss: 36.5803
04/19 21:43:36: Loss (s-m-l): [0.0007, 0.0421, 0.0]
04/19 21:43:36: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9832, 1.0, 0.9832], [1.0, 1.0, 1.0]]
04/19 21:43:36: 
==========Evaluation: iter 20000==========
04/19 21:43:36: save checkpoints: ckpts/tp/tp20000
04/19 21:46:33: 
Iteration: 20100
04/19 21:46:33: Running time: 590.39 min
04/19 21:46:33: Data Loading time: 0.00007 s
04/19 21:46:33: Loss R: 0.0145
04/19 21:46:33: Loss G: 30.4647
04/19 21:46:33: bpp: 0.3254
04/19 21:46:33: Sum Loss: 31.0805
04/19 21:46:33: Loss (s-m-l): [0.0007, 0.0428, 0.0]
04/19 21:46:33: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9829, 1.0, 0.9829], [1.0, 1.0, 1.0]]
04/19 21:49:28: 
Iteration: 20200
04/19 21:49:28: Running time: 593.30 min
04/19 21:49:28: Data Loading time: 0.00007 s
04/19 21:49:28: Loss R: 0.0146
04/19 21:49:28: Loss G: 39.3767
04/19 21:49:28: bpp: 0.3244
04/19 21:49:28: Sum Loss: 39.9934
04/19 21:49:28: Loss (s-m-l): [0.0007, 0.0431, 0.0]
04/19 21:49:28: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9827, 1.0, 0.9827], [1.0, 1.0, 1.0]]
04/19 21:52:28: 
Iteration: 20300
04/19 21:52:28: Running time: 596.30 min
04/19 21:52:28: Data Loading time: 0.00007 s
04/19 21:52:28: Loss R: 0.0133
04/19 21:52:28: Loss G: 36.3134
04/19 21:52:28: bpp: 0.3261
04/19 21:52:28: Sum Loss: 36.9063
04/19 21:52:28: Loss (s-m-l): [0.0007, 0.0394, 0.0]
04/19 21:52:28: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9844, 1.0, 0.9844], [1.0, 1.0, 1.0]]
04/19 21:55:21: 
Iteration: 20400
04/19 21:55:21: Running time: 599.19 min
04/19 21:55:21: Data Loading time: 0.00007 s
04/19 21:55:22: Loss R: 0.0144
04/19 21:55:22: Loss G: 31.0806
04/19 21:55:22: bpp: 0.3236
04/19 21:55:22: Sum Loss: 31.6925
04/19 21:55:22: Loss (s-m-l): [0.0008, 0.0425, 0.0]
04/19 21:55:22: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9831, 1.0, 0.9831], [1.0, 1.0, 1.0]]
04/19 21:58:23: 
Iteration: 20500
04/19 21:58:23: Running time: 602.21 min
04/19 21:58:23: Data Loading time: 0.00007 s
04/19 21:58:23: Loss R: 0.0141
04/19 21:58:23: Loss G: 32.2218
04/19 21:58:23: bpp: 0.3228
04/19 21:58:23: Sum Loss: 32.8274
04/19 21:58:23: Loss (s-m-l): [0.0007, 0.0417, 0.0]
04/19 21:58:23: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9834, 1.0, 0.9834], [1.0, 1.0, 1.0]]
04/19 22:01:20: 
Iteration: 20600
04/19 22:01:20: Running time: 605.17 min
04/19 22:01:20: Data Loading time: 0.00007 s
04/19 22:01:20: Loss R: 0.0146
04/19 22:01:20: Loss G: 35.3169
04/19 22:01:20: bpp: 0.3243
04/19 22:01:20: Sum Loss: 35.9330
04/19 22:01:20: Loss (s-m-l): [0.0007, 0.043, 0.0]
04/19 22:01:20: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9828, 1.0, 0.9828], [1.0, 1.0, 1.0]]
04/19 22:04:12: 
Iteration: 20700
04/19 22:04:12: Running time: 608.04 min
04/19 22:04:12: Data Loading time: 0.00007 s
04/19 22:04:12: Loss R: 0.0145
04/19 22:04:12: Loss G: 32.3622
04/19 22:04:12: bpp: 0.3242
04/19 22:04:12: Sum Loss: 32.9774
04/19 22:04:12: Loss (s-m-l): [0.0007, 0.0429, 0.0]
04/19 22:04:12: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9828, 1.0, 0.9828], [1.0, 1.0, 1.0]]
04/19 22:07:06: 
Iteration: 20800
04/19 22:07:06: Running time: 610.93 min
04/19 22:07:06: Data Loading time: 0.00007 s
04/19 22:07:06: Loss R: 0.0144
04/19 22:07:06: Loss G: 37.3378
04/19 22:07:06: bpp: 0.3258
04/19 22:07:06: Sum Loss: 37.9523
04/19 22:07:06: Loss (s-m-l): [0.0007, 0.0426, 0.0]
04/19 22:07:06: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9829, 1.0, 0.9829], [1.0, 1.0, 1.0]]
04/19 22:10:00: 
Iteration: 20900
04/19 22:10:00: Running time: 613.83 min
04/19 22:10:00: Data Loading time: 0.00007 s
04/19 22:10:00: Loss R: 0.0140
04/19 22:10:00: Loss G: 38.4533
04/19 22:10:00: bpp: 0.3243
04/19 22:10:00: Sum Loss: 39.0581
04/19 22:10:00: Loss (s-m-l): [0.0007, 0.0414, 0.0]
04/19 22:10:00: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9833, 1.0, 0.9833], [1.0, 1.0, 1.0]]
04/19 22:12:58: 
Iteration: 21000
04/19 22:12:58: Running time: 616.81 min
04/19 22:12:58: Data Loading time: 0.00007 s
04/19 22:12:58: Loss R: 0.0135
04/19 22:12:58: Loss G: 35.2248
04/19 22:12:58: bpp: 0.3247
04/19 22:12:58: Sum Loss: 35.8193
04/19 22:12:58: Loss (s-m-l): [0.0007, 0.0398, 0.0]
04/19 22:12:58: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9842, 1.0, 0.9842], [1.0, 1.0, 1.0]]
04/19 22:15:53: 
Iteration: 21100
04/19 22:15:53: Running time: 619.73 min
04/19 22:15:53: Data Loading time: 0.00007 s
04/19 22:15:53: Loss R: 0.0143
04/19 22:15:53: Loss G: 32.0502
04/19 22:15:53: bpp: 0.3259
04/19 22:15:53: Sum Loss: 32.6626
04/19 22:15:53: Loss (s-m-l): [0.0007, 0.0423, 0.0]
04/19 22:15:53: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9832, 1.0, 0.9832], [1.0, 1.0, 1.0]]
04/19 22:18:51: 
Iteration: 21200
04/19 22:18:51: Running time: 622.68 min
04/19 22:18:51: Data Loading time: 0.00007 s
04/19 22:18:51: Loss R: 0.0138
04/19 22:18:51: Loss G: 33.1419
04/19 22:18:51: bpp: 0.3236
04/19 22:18:51: Sum Loss: 33.7418
04/19 22:18:51: Loss (s-m-l): [0.0007, 0.0408, 0.0]
04/19 22:18:51: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9837, 1.0, 0.9837], [1.0, 1.0, 1.0]]
04/19 22:21:48: 
Iteration: 21300
04/19 22:21:48: Running time: 625.64 min
04/19 22:21:48: Data Loading time: 0.00007 s
04/19 22:21:48: Loss R: 0.0138
04/19 22:21:48: Loss G: 33.7092
04/19 22:21:48: bpp: 0.3206
04/19 22:21:48: Sum Loss: 34.3062
04/19 22:21:48: Loss (s-m-l): [0.0007, 0.0408, 0.0]
04/19 22:21:48: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9838, 1.0, 0.9838], [1.0, 1.0, 1.0]]
04/19 22:24:44: 
Iteration: 21400
04/19 22:24:44: Running time: 628.57 min
04/19 22:24:44: Data Loading time: 0.00007 s
04/19 22:24:44: Loss R: 0.0139
04/19 22:24:44: Loss G: 32.4986
04/19 22:24:44: bpp: 0.3230
04/19 22:24:44: Sum Loss: 33.0994
04/19 22:24:44: Loss (s-m-l): [0.0007, 0.0409, 0.0]
04/19 22:24:44: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9838, 1.0, 0.9838], [1.0, 1.0, 1.0]]
04/19 22:27:45: 
Iteration: 21500
04/19 22:27:45: Running time: 631.58 min
04/19 22:27:45: Data Loading time: 0.00007 s
04/19 22:27:45: Loss R: 0.0139
04/19 22:27:45: Loss G: 32.2217
04/19 22:27:45: bpp: 0.3240
04/19 22:27:45: Sum Loss: 32.8236
04/19 22:27:45: Loss (s-m-l): [0.0007, 0.041, 0.0]
04/19 22:27:45: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9836, 1.0, 0.9836], [1.0, 1.0, 1.0]]
04/19 22:30:40: 
Iteration: 21600
04/19 22:30:40: Running time: 634.51 min
04/19 22:30:40: Data Loading time: 0.00010 s
04/19 22:30:40: Loss R: 0.0144
04/19 22:30:40: Loss G: 34.4655
04/19 22:30:40: bpp: 0.3257
04/19 22:30:40: Sum Loss: 35.0794
04/19 22:30:40: Loss (s-m-l): [0.0007, 0.0425, 0.0]
04/19 22:30:40: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.983, 1.0, 0.983], [1.0, 1.0, 1.0]]
04/19 22:33:38: 
Iteration: 21700
04/19 22:33:38: Running time: 637.48 min
04/19 22:33:38: Data Loading time: 0.00007 s
04/19 22:33:38: Loss R: 0.0141
04/19 22:33:38: Loss G: 53.3015
04/19 22:33:38: bpp: 0.3236
04/19 22:33:38: Sum Loss: 53.9066
04/19 22:33:38: Loss (s-m-l): [0.0007, 0.0415, 0.0]
04/19 22:33:38: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9834, 1.0, 0.9834], [1.0, 1.0, 1.0]]
04/19 22:36:40: 
Iteration: 21800
04/19 22:36:40: Running time: 640.50 min
04/19 22:36:40: Data Loading time: 0.00007 s
04/19 22:36:40: Loss R: 0.0145
04/19 22:36:40: Loss G: 40.0890
04/19 22:36:40: bpp: 0.3205
04/19 22:36:40: Sum Loss: 40.6997
04/19 22:36:40: Loss (s-m-l): [0.0007, 0.0428, 0.0]
04/19 22:36:40: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.983, 1.0, 0.983], [1.0, 1.0, 1.0]]
04/19 22:39:36: 
Iteration: 21900
04/19 22:39:36: Running time: 643.43 min
04/19 22:39:36: Data Loading time: 0.00007 s
04/19 22:39:36: Loss R: 0.0136
04/19 22:39:36: Loss G: 33.7525
04/19 22:39:36: bpp: 0.3244
04/19 22:39:36: Sum Loss: 34.3484
04/19 22:39:36: Loss (s-m-l): [0.0007, 0.04, 0.0]
04/19 22:39:36: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9841, 1.0, 0.9841], [1.0, 1.0, 1.0]]
04/19 22:42:32: 
Iteration: 22000
04/19 22:42:32: Running time: 646.37 min
04/19 22:42:32: Data Loading time: 0.00007 s
04/19 22:42:32: Loss R: 0.0147
04/19 22:42:32: Loss G: 36.0821
04/19 22:42:32: bpp: 0.3223
04/19 22:42:32: Sum Loss: 36.6993
04/19 22:42:32: Loss (s-m-l): [0.0007, 0.0435, 0.0]
04/19 22:42:32: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9825, 1.0, 0.9825], [1.0, 1.0, 1.0]]
04/19 22:42:32: 
==========Evaluation: iter 22000==========
04/19 22:42:32: save checkpoints: ckpts/tp/tp22000
04/19 22:45:28: 
Iteration: 22100
04/19 22:45:28: Running time: 649.31 min
04/19 22:45:28: Data Loading time: 0.00007 s
04/19 22:45:28: Loss R: 0.0147
04/19 22:45:28: Loss G: 37.3323
04/19 22:45:28: bpp: 0.3243
04/19 22:45:28: Sum Loss: 37.9500
04/19 22:45:28: Loss (s-m-l): [0.0007, 0.0433, 0.0]
04/19 22:45:28: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9827, 1.0, 0.9827], [1.0, 1.0, 1.0]]
04/19 22:48:24: 
Iteration: 22200
04/19 22:48:24: Running time: 652.23 min
04/19 22:48:24: Data Loading time: 0.00007 s
04/19 22:48:24: Loss R: 0.0136
04/19 22:48:24: Loss G: 42.2395
04/19 22:48:24: bpp: 0.3234
04/19 22:48:24: Sum Loss: 42.8358
04/19 22:48:24: Loss (s-m-l): [0.0007, 0.0402, 0.0]
04/19 22:48:24: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9839, 1.0, 0.9839], [1.0, 1.0, 1.0]]
04/19 22:51:19: 
Iteration: 22300
04/19 22:51:19: Running time: 655.16 min
04/19 22:51:19: Data Loading time: 0.00007 s
04/19 22:51:19: Loss R: 0.0138
04/19 22:51:19: Loss G: 67.5503
04/19 22:51:19: bpp: 0.3257
04/19 22:51:19: Sum Loss: 68.1527
04/19 22:51:19: Loss (s-m-l): [0.0007, 0.0408, 0.0]
04/19 22:51:19: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9837, 1.0, 0.9837], [1.0, 1.0, 1.0]]
04/19 22:54:17: 
Iteration: 22400
04/19 22:54:17: Running time: 658.12 min
04/19 22:54:17: Data Loading time: 0.00007 s
04/19 22:54:17: Loss R: 0.0144
04/19 22:54:17: Loss G: 52.2981
04/19 22:54:17: bpp: 0.3233
04/19 22:54:17: Sum Loss: 52.9090
04/19 22:54:17: Loss (s-m-l): [0.0007, 0.0424, 0.0]
04/19 22:54:17: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.983, 1.0, 0.983], [1.0, 1.0, 1.0]]
04/19 22:57:12: 
Iteration: 22500
04/19 22:57:12: Running time: 661.04 min
04/19 22:57:12: Data Loading time: 0.00007 s
04/19 22:57:12: Loss R: 0.0142
04/19 22:57:12: Loss G: 51.1428
04/19 22:57:12: bpp: 0.3259
04/19 22:57:12: Sum Loss: 51.7528
04/19 22:57:12: Loss (s-m-l): [0.0007, 0.0419, 0.0]
04/19 22:57:12: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9833, 1.0, 0.9833], [1.0, 1.0, 1.0]]
04/19 23:00:08: 
Iteration: 22600
04/19 23:00:08: Running time: 663.97 min
04/19 23:00:08: Data Loading time: 0.00007 s
04/19 23:00:08: Loss R: 0.0138
04/19 23:00:08: Loss G: 39.9257
04/19 23:00:08: bpp: 0.3218
04/19 23:00:08: Sum Loss: 40.5233
04/19 23:00:08: Loss (s-m-l): [0.0007, 0.0407, 0.0]
04/19 23:00:08: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9838, 1.0, 0.9838], [1.0, 1.0, 1.0]]
04/19 23:03:06: 
Iteration: 22700
04/19 23:03:06: Running time: 666.94 min
04/19 23:03:06: Data Loading time: 0.00007 s
04/19 23:03:06: Loss R: 0.0142
04/19 23:03:06: Loss G: 32.0691
04/19 23:03:06: bpp: 0.3221
04/19 23:03:06: Sum Loss: 32.6743
04/19 23:03:06: Loss (s-m-l): [0.0007, 0.0417, 0.0]
04/19 23:03:06: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9834, 1.0, 0.9834], [1.0, 1.0, 1.0]]
04/19 23:06:00: 
Iteration: 22800
04/19 23:06:00: Running time: 669.83 min
04/19 23:06:00: Data Loading time: 0.00007 s
04/19 23:06:00: Loss R: 0.0139
04/19 23:06:00: Loss G: 32.0834
04/19 23:06:00: bpp: 0.3268
04/19 23:06:00: Sum Loss: 32.6885
04/19 23:06:00: Loss (s-m-l): [0.0007, 0.041, 0.0]
04/19 23:06:00: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9837, 1.0, 0.9837], [1.0, 1.0, 1.0]]
04/19 23:08:55: 
Iteration: 22900
04/19 23:08:55: Running time: 672.75 min
04/19 23:08:55: Data Loading time: 0.00007 s
04/19 23:08:55: Loss R: 0.0138
04/19 23:08:55: Loss G: 32.8466
04/19 23:08:55: bpp: 0.3192
04/19 23:08:55: Sum Loss: 33.4426
04/19 23:08:55: Loss (s-m-l): [0.0007, 0.0408, 0.0]
04/19 23:08:55: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9838, 1.0, 0.9838], [1.0, 1.0, 1.0]]
04/19 23:11:51: 
Iteration: 23000
04/19 23:11:51: Running time: 675.69 min
04/19 23:11:51: Data Loading time: 0.00007 s
04/19 23:11:51: Loss R: 0.0141
04/19 23:11:51: Loss G: 32.6200
04/19 23:11:51: bpp: 0.3238
04/19 23:11:51: Sum Loss: 33.2263
04/19 23:11:51: Loss (s-m-l): [0.0007, 0.0417, 0.0]
04/19 23:11:51: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9833, 1.0, 0.9833], [1.0, 1.0, 1.0]]
04/19 23:14:49: 
Iteration: 23100
04/19 23:14:49: Running time: 678.66 min
04/19 23:14:49: Data Loading time: 0.00007 s
04/19 23:14:49: Loss R: 0.0139
04/19 23:14:49: Loss G: 32.8498
04/19 23:14:49: bpp: 0.3241
04/19 23:14:49: Sum Loss: 33.4512
04/19 23:14:49: Loss (s-m-l): [0.0007, 0.0409, 0.0]
04/19 23:14:49: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9837, 1.0, 0.9837], [1.0, 1.0, 1.0]]
04/19 23:17:46: 
Iteration: 23200
04/19 23:17:46: Running time: 681.61 min
04/19 23:17:46: Data Loading time: 0.00007 s
04/19 23:17:46: Loss R: 0.0137
04/19 23:17:46: Loss G: 32.4812
04/19 23:17:46: bpp: 0.3253
04/19 23:17:46: Sum Loss: 33.0798
04/19 23:17:46: Loss (s-m-l): [0.0007, 0.0403, 0.0]
04/19 23:17:46: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9839, 1.0, 0.9839], [1.0, 1.0, 1.0]]
04/19 23:20:38: 
Iteration: 23300
04/19 23:20:38: Running time: 684.48 min
04/19 23:20:38: Data Loading time: 0.00007 s
04/19 23:20:38: Loss R: 0.0136
04/19 23:20:38: Loss G: 33.6940
04/19 23:20:38: bpp: 0.3237
04/19 23:20:38: Sum Loss: 34.2903
04/19 23:20:38: Loss (s-m-l): [0.0007, 0.0402, 0.0]
04/19 23:20:38: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9841, 1.0, 0.9841], [1.0, 1.0, 1.0]]
04/19 23:23:34: 
Iteration: 23400
04/19 23:23:34: Running time: 687.40 min
04/19 23:23:34: Data Loading time: 0.00007 s
04/19 23:23:34: Loss R: 0.0138
04/19 23:23:34: Loss G: 34.8611
04/19 23:23:34: bpp: 0.3257
04/19 23:23:34: Sum Loss: 35.4638
04/19 23:23:34: Loss (s-m-l): [0.0007, 0.0408, 0.0]
04/19 23:23:34: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9837, 1.0, 0.9837], [1.0, 1.0, 1.0]]
04/19 23:26:29: 
Iteration: 23500
04/19 23:26:29: Running time: 690.32 min
04/19 23:26:29: Data Loading time: 0.00008 s
04/19 23:26:29: Loss R: 0.0139
04/19 23:26:29: Loss G: 37.7108
04/19 23:26:29: bpp: 0.3248
04/19 23:26:29: Sum Loss: 38.3132
04/19 23:26:29: Loss (s-m-l): [0.0007, 0.0409, 0.0]
04/19 23:26:29: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9835, 1.0, 0.9835], [1.0, 1.0, 1.0]]
04/19 23:29:31: 
Iteration: 23600
04/19 23:29:31: Running time: 693.35 min
04/19 23:29:31: Data Loading time: 0.00007 s
04/19 23:29:31: Loss R: 0.0141
04/19 23:29:31: Loss G: 36.9184
04/19 23:29:31: bpp: 0.3205
04/19 23:29:31: Sum Loss: 37.5200
04/19 23:29:31: Loss (s-m-l): [0.0007, 0.0415, 0.0]
04/19 23:29:31: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9834, 1.0, 0.9834], [1.0, 1.0, 1.0]]
04/19 23:32:27: 
Iteration: 23700
04/19 23:32:27: Running time: 696.28 min
04/19 23:32:27: Data Loading time: 0.00007 s
04/19 23:32:27: Loss R: 0.0141
04/19 23:32:27: Loss G: 34.5115
04/19 23:32:27: bpp: 0.3235
04/19 23:32:27: Sum Loss: 35.1165
04/19 23:32:27: Loss (s-m-l): [0.0007, 0.0415, 0.0]
04/19 23:32:27: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9833, 1.0, 0.9833], [1.0, 1.0, 1.0]]
04/19 23:35:23: 
Iteration: 23800
04/19 23:35:23: Running time: 699.22 min
04/19 23:35:23: Data Loading time: 0.00007 s
04/19 23:35:23: Loss R: 0.0140
04/19 23:35:23: Loss G: 37.7276
04/19 23:35:23: bpp: 0.3262
04/19 23:35:23: Sum Loss: 38.3328
04/19 23:35:23: Loss (s-m-l): [0.0007, 0.0412, 0.0]
04/19 23:35:23: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9836, 1.0, 0.9836], [1.0, 1.0, 1.0]]
04/19 23:38:21: 
Iteration: 23900
04/19 23:38:21: Running time: 702.18 min
04/19 23:38:21: Data Loading time: 0.00007 s
04/19 23:38:21: Loss R: 0.0135
04/19 23:38:21: Loss G: 59.0663
04/19 23:38:21: bpp: 0.3250
04/19 23:38:21: Sum Loss: 59.6618
04/19 23:38:21: Loss (s-m-l): [0.0007, 0.0399, 0.0]
04/19 23:38:21: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9841, 1.0, 0.9841], [1.0, 1.0, 1.0]]
04/19 23:41:16: 
Iteration: 24000
04/19 23:41:16: Running time: 705.11 min
04/19 23:41:16: Data Loading time: 0.00007 s
04/19 23:41:16: Loss R: 0.0134
04/19 23:41:16: Loss G: 52.5165
04/19 23:41:16: bpp: 0.3218
04/19 23:41:16: Sum Loss: 53.1061
04/19 23:41:16: Loss (s-m-l): [0.0007, 0.0395, 0.0]
04/19 23:41:16: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9844, 1.0, 0.9844], [1.0, 1.0, 1.0]]
04/19 23:41:16: 
==========Evaluation: iter 24000==========
04/19 23:41:16: save checkpoints: ckpts/tp/tp24000
04/19 23:41:16: LR: [2.5e-05, 2.5e-05, 2.5e-05]
04/19 23:44:11: 
Iteration: 24100
04/19 23:44:11: Running time: 708.02 min
04/19 23:44:11: Data Loading time: 0.00007 s
04/19 23:44:11: Loss R: 0.0144
04/19 23:44:11: Loss G: 52.2524
04/19 23:44:11: bpp: 0.3235
04/19 23:44:11: Sum Loss: 52.8642
04/19 23:44:11: Loss (s-m-l): [0.0007, 0.0425, 0.0]
04/19 23:44:11: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9829, 1.0, 0.9829], [1.0, 1.0, 1.0]]
04/19 23:47:11: 
Iteration: 24200
04/19 23:47:11: Running time: 711.02 min
04/19 23:47:11: Data Loading time: 0.00007 s
04/19 23:47:11: Loss R: 0.0138
04/19 23:47:11: Loss G: 57.4316
04/19 23:47:11: bpp: 0.3199
04/19 23:47:11: Sum Loss: 58.0279
04/19 23:47:11: Loss (s-m-l): [0.0007, 0.0408, 0.0]
04/19 23:47:11: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9838, 1.0, 0.9838], [1.0, 1.0, 1.0]]
04/19 23:50:11: 
Iteration: 24300
04/19 23:50:11: Running time: 714.01 min
04/19 23:50:11: Data Loading time: 0.00007 s
04/19 23:50:11: Loss R: 0.0138
04/19 23:50:11: Loss G: 47.6261
04/19 23:50:11: bpp: 0.3240
04/19 23:50:11: Sum Loss: 48.2265
04/19 23:50:11: Loss (s-m-l): [0.0007, 0.0408, 0.0]
04/19 23:50:11: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9836, 1.0, 0.9836], [1.0, 1.0, 1.0]]
04/19 23:53:05: 
Iteration: 24400
04/19 23:53:05: Running time: 716.91 min
04/19 23:53:05: Data Loading time: 0.00007 s
04/19 23:53:05: Loss R: 0.0130
04/19 23:53:05: Loss G: 46.5341
04/19 23:53:05: bpp: 0.3250
04/19 23:53:05: Sum Loss: 47.1195
04/19 23:53:05: Loss (s-m-l): [0.0007, 0.0384, 0.0]
04/19 23:53:05: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9847, 1.0, 0.9847], [1.0, 1.0, 1.0]]
04/19 23:55:57: 
Iteration: 24500
04/19 23:55:57: Running time: 719.79 min
04/19 23:55:57: Data Loading time: 0.00007 s
04/19 23:55:57: Loss R: 0.0132
04/19 23:55:57: Loss G: 42.1676
04/19 23:55:57: bpp: 0.3230
04/19 23:55:57: Sum Loss: 42.7546
04/19 23:55:57: Loss (s-m-l): [0.0007, 0.0389, 0.0]
04/19 23:55:57: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9846, 1.0, 0.9846], [1.0, 1.0, 1.0]]
04/19 23:58:46: 
Iteration: 24600
04/19 23:58:46: Running time: 722.60 min
04/19 23:58:46: Data Loading time: 0.00007 s
04/19 23:58:46: Loss R: 0.0139
04/19 23:58:46: Loss G: 40.8004
04/19 23:58:46: bpp: 0.3228
04/19 23:58:46: Sum Loss: 41.4016
04/19 23:58:46: Loss (s-m-l): [0.0007, 0.0411, 0.0]
04/19 23:58:46: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9835, 1.0, 0.9835], [1.0, 1.0, 1.0]]
04/20 00:01:44: 
Iteration: 24700
04/20 00:01:44: Running time: 725.56 min
04/20 00:01:44: Data Loading time: 0.00007 s
04/20 00:01:44: Loss R: 0.0138
04/20 00:01:44: Loss G: 42.7674
04/20 00:01:44: bpp: 0.3219
04/20 00:01:44: Sum Loss: 43.3646
04/20 00:01:44: Loss (s-m-l): [0.0007, 0.0406, 0.0]
04/20 00:01:44: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9839, 1.0, 0.9839], [1.0, 1.0, 1.0]]
04/20 00:04:45: 
Iteration: 24800
04/20 00:04:45: Running time: 728.59 min
04/20 00:04:45: Data Loading time: 0.00007 s
04/20 00:04:45: Loss R: 0.0132
04/20 00:04:45: Loss G: 37.4436
04/20 00:04:45: bpp: 0.3224
04/20 00:04:45: Sum Loss: 38.0306
04/20 00:04:45: Loss (s-m-l): [0.0007, 0.039, 0.0]
04/20 00:04:45: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9844, 1.0, 0.9844], [1.0, 1.0, 1.0]]
04/20 00:07:40: 
Iteration: 24900
04/20 00:07:40: Running time: 731.50 min
04/20 00:07:40: Data Loading time: 0.00007 s
04/20 00:07:40: Loss R: 0.0134
04/20 00:07:40: Loss G: 34.5929
04/20 00:07:40: bpp: 0.3275
04/20 00:07:40: Sum Loss: 35.1877
04/20 00:07:40: Loss (s-m-l): [0.0007, 0.0394, 0.0]
04/20 00:07:40: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9843, 1.0, 0.9843], [1.0, 1.0, 1.0]]
04/20 00:10:39: 
Iteration: 25000
04/20 00:10:39: Running time: 734.49 min
04/20 00:10:39: Data Loading time: 0.00007 s
04/20 00:10:39: Loss R: 0.0137
04/20 00:10:39: Loss G: 35.5780
04/20 00:10:39: bpp: 0.3221
04/20 00:10:39: Sum Loss: 36.1736
04/20 00:10:39: Loss (s-m-l): [0.0007, 0.0404, 0.0]
04/20 00:10:39: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9839, 1.0, 0.9839], [1.0, 1.0, 1.0]]
04/20 00:13:36: 
Iteration: 25100
04/20 00:13:36: Running time: 737.43 min
04/20 00:13:36: Data Loading time: 0.00007 s
04/20 00:13:36: Loss R: 0.0133
04/20 00:13:36: Loss G: 37.2787
04/20 00:13:36: bpp: 0.3201
04/20 00:13:36: Sum Loss: 37.8652
04/20 00:13:36: Loss (s-m-l): [0.0007, 0.0393, 0.0]
04/20 00:13:36: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9844, 1.0, 0.9844], [1.0, 1.0, 1.0]]
04/20 00:16:31: 
Iteration: 25200
04/20 00:16:31: Running time: 740.35 min
04/20 00:16:31: Data Loading time: 0.00007 s
04/20 00:16:31: Loss R: 0.0134
04/20 00:16:31: Loss G: 33.2538
04/20 00:16:31: bpp: 0.3249
04/20 00:16:31: Sum Loss: 33.8469
04/20 00:16:31: Loss (s-m-l): [0.0007, 0.0396, 0.0]
04/20 00:16:31: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9842, 1.0, 0.9842], [1.0, 1.0, 1.0]]
04/20 00:19:27: 
Iteration: 25300
04/20 00:19:27: Running time: 743.29 min
04/20 00:19:27: Data Loading time: 0.00007 s
04/20 00:19:27: Loss R: 0.0136
04/20 00:19:27: Loss G: 35.6894
04/20 00:19:27: bpp: 0.3227
04/20 00:19:27: Sum Loss: 36.2844
04/20 00:19:27: Loss (s-m-l): [0.0007, 0.0401, 0.0]
04/20 00:19:27: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.984, 1.0, 0.984], [1.0, 1.0, 1.0]]
04/20 00:22:22: 
Iteration: 25400
04/20 00:22:22: Running time: 746.20 min
04/20 00:22:22: Data Loading time: 0.00007 s
04/20 00:22:22: Loss R: 0.0129
04/20 00:22:22: Loss G: 33.4222
04/20 00:22:22: bpp: 0.3224
04/20 00:22:22: Sum Loss: 34.0026
04/20 00:22:22: Loss (s-m-l): [0.0007, 0.0381, 0.0]
04/20 00:22:22: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/20 00:25:18: 
Iteration: 25500
04/20 00:25:18: Running time: 749.14 min
04/20 00:25:18: Data Loading time: 0.00007 s
04/20 00:25:18: Loss R: 0.0133
04/20 00:25:18: Loss G: 31.3284
04/20 00:25:18: bpp: 0.3230
04/20 00:25:18: Sum Loss: 31.9175
04/20 00:25:18: Loss (s-m-l): [0.0007, 0.0393, 0.0]
04/20 00:25:18: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9843, 1.0, 0.9843], [1.0, 1.0, 1.0]]
04/20 00:28:16: 
Iteration: 25600
04/20 00:28:16: Running time: 752.10 min
04/20 00:28:16: Data Loading time: 0.00007 s
04/20 00:28:16: Loss R: 0.0134
04/20 00:28:16: Loss G: 30.0607
04/20 00:28:16: bpp: 0.3220
04/20 00:28:16: Sum Loss: 30.6501
04/20 00:28:16: Loss (s-m-l): [0.0007, 0.0394, 0.0]
04/20 00:28:16: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9844, 1.0, 0.9844], [1.0, 1.0, 1.0]]
04/20 00:31:16: 
Iteration: 25700
04/20 00:31:16: Running time: 755.10 min
04/20 00:31:16: Data Loading time: 0.00007 s
04/20 00:31:16: Loss R: 0.0134
04/20 00:31:16: Loss G: 33.9213
04/20 00:31:16: bpp: 0.3247
04/20 00:31:16: Sum Loss: 34.5134
04/20 00:31:16: Loss (s-m-l): [0.0007, 0.0394, 0.0]
04/20 00:31:16: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9842, 1.0, 0.9842], [1.0, 1.0, 1.0]]
04/20 00:34:14: 
Iteration: 25800
04/20 00:34:14: Running time: 758.07 min
04/20 00:34:14: Data Loading time: 0.00007 s
04/20 00:34:14: Loss R: 0.0137
04/20 00:34:14: Loss G: 33.4394
04/20 00:34:14: bpp: 0.3239
04/20 00:34:14: Sum Loss: 34.0381
04/20 00:34:14: Loss (s-m-l): [0.0007, 0.0405, 0.0]
04/20 00:34:14: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9838, 1.0, 0.9838], [1.0, 1.0, 1.0]]
04/20 00:37:10: 
Iteration: 25900
04/20 00:37:10: Running time: 761.00 min
04/20 00:37:10: Data Loading time: 0.00007 s
04/20 00:37:10: Loss R: 0.0142
04/20 00:37:10: Loss G: 38.0006
04/20 00:37:10: bpp: 0.3205
04/20 00:37:10: Sum Loss: 38.6043
04/20 00:37:10: Loss (s-m-l): [0.0007, 0.0418, 0.0]
04/20 00:37:10: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9833, 1.0, 0.9833], [1.0, 1.0, 1.0]]
04/20 00:40:07: 
Iteration: 26000
04/20 00:40:07: Running time: 763.95 min
04/20 00:40:07: Data Loading time: 0.00007 s
04/20 00:40:07: Loss R: 0.0132
04/20 00:40:07: Loss G: 34.3893
04/20 00:40:07: bpp: 0.3202
04/20 00:40:07: Sum Loss: 34.9733
04/20 00:40:07: Loss (s-m-l): [0.0007, 0.0389, 0.0]
04/20 00:40:07: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9845, 1.0, 0.9845], [1.0, 1.0, 1.0]]
04/20 00:40:07: 
==========Evaluation: iter 26000==========
04/20 00:40:07: save checkpoints: ckpts/tp/tp26000
04/20 00:42:59: 
Iteration: 26100
04/20 00:42:59: Running time: 766.81 min
04/20 00:42:59: Data Loading time: 0.00007 s
04/20 00:42:59: Loss R: 0.0137
04/20 00:42:59: Loss G: 30.3573
04/20 00:42:59: bpp: 0.3212
04/20 00:42:59: Sum Loss: 30.9532
04/20 00:42:59: Loss (s-m-l): [0.0007, 0.0405, 0.0]
04/20 00:42:59: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9838, 1.0, 0.9838], [1.0, 1.0, 1.0]]
04/20 00:45:54: 
Iteration: 26200
04/20 00:45:54: Running time: 769.74 min
04/20 00:45:54: Data Loading time: 0.00007 s
04/20 00:45:54: Loss R: 0.0140
04/20 00:45:54: Loss G: 31.0573
04/20 00:45:54: bpp: 0.3212
04/20 00:45:54: Sum Loss: 31.6580
04/20 00:45:54: Loss (s-m-l): [0.0007, 0.0412, 0.0]
04/20 00:45:54: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9836, 1.0, 0.9836], [1.0, 1.0, 1.0]]
04/20 00:48:50: 
Iteration: 26300
04/20 00:48:50: Running time: 772.67 min
04/20 00:48:50: Data Loading time: 0.00007 s
04/20 00:48:50: Loss R: 0.0131
04/20 00:48:50: Loss G: 29.8566
04/20 00:48:50: bpp: 0.3235
04/20 00:48:50: Sum Loss: 30.4428
04/20 00:48:50: Loss (s-m-l): [0.0007, 0.0387, 0.0]
04/20 00:48:50: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9847, 1.0, 0.9847], [1.0, 1.0, 1.0]]
04/20 00:51:45: 
Iteration: 26400
04/20 00:51:45: Running time: 775.58 min
04/20 00:51:45: Data Loading time: 0.00007 s
04/20 00:51:45: Loss R: 0.0138
04/20 00:51:45: Loss G: 32.6069
04/20 00:51:45: bpp: 0.3208
04/20 00:51:45: Sum Loss: 33.2028
04/20 00:51:45: Loss (s-m-l): [0.0007, 0.0406, 0.0]
04/20 00:51:45: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9837, 1.0, 0.9837], [1.0, 1.0, 1.0]]
04/20 00:54:40: 
Iteration: 26500
04/20 00:54:40: Running time: 778.50 min
04/20 00:54:40: Data Loading time: 0.00008 s
04/20 00:54:40: Loss R: 0.0132
04/20 00:54:40: Loss G: 34.9587
04/20 00:54:40: bpp: 0.3237
04/20 00:54:40: Sum Loss: 35.5467
04/20 00:54:40: Loss (s-m-l): [0.0006, 0.039, 0.0]
04/20 00:54:40: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9845, 1.0, 0.9845], [1.0, 1.0, 1.0]]
04/20 00:57:34: 
Iteration: 26600
04/20 00:57:34: Running time: 781.40 min
04/20 00:57:34: Data Loading time: 0.00007 s
04/20 00:57:34: Loss R: 0.0132
04/20 00:57:34: Loss G: 32.3620
04/20 00:57:34: bpp: 0.3241
04/20 00:57:34: Sum Loss: 32.9492
04/20 00:57:34: Loss (s-m-l): [0.0007, 0.0388, 0.0]
04/20 00:57:34: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9845, 1.0, 0.9845], [1.0, 1.0, 1.0]]
04/20 01:00:30: 
Iteration: 26700
04/20 01:00:30: Running time: 784.33 min
04/20 01:00:30: Data Loading time: 0.00007 s
04/20 01:00:30: Loss R: 0.0132
04/20 01:00:30: Loss G: 36.8418
04/20 01:00:30: bpp: 0.3216
04/20 01:00:30: Sum Loss: 37.4266
04/20 01:00:30: Loss (s-m-l): [0.0007, 0.0388, 0.0]
04/20 01:00:30: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9845, 1.0, 0.9845], [1.0, 1.0, 1.0]]
04/20 01:03:27: 
Iteration: 26800
04/20 01:03:27: Running time: 787.29 min
04/20 01:03:27: Data Loading time: 0.00007 s
04/20 01:03:27: Loss R: 0.0137
04/20 01:03:27: Loss G: 36.6620
04/20 01:03:27: bpp: 0.3216
04/20 01:03:27: Sum Loss: 37.2572
04/20 01:03:27: Loss (s-m-l): [0.0007, 0.0403, 0.0]
04/20 01:03:27: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9839, 1.0, 0.9839], [1.0, 1.0, 1.0]]
04/20 01:06:18: 
Iteration: 26900
04/20 01:06:18: Running time: 790.14 min
04/20 01:06:18: Data Loading time: 0.00007 s
04/20 01:06:18: Loss R: 0.0132
04/20 01:06:18: Loss G: 33.3347
04/20 01:06:18: bpp: 0.3226
04/20 01:06:18: Sum Loss: 33.9208
04/20 01:06:18: Loss (s-m-l): [0.0007, 0.0389, 0.0]
04/20 01:06:18: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9845, 1.0, 0.9845], [1.0, 1.0, 1.0]]
04/20 01:09:17: 
Iteration: 27000
04/20 01:09:17: Running time: 793.13 min
04/20 01:09:17: Data Loading time: 0.00007 s
04/20 01:09:17: Loss R: 0.0135
04/20 01:09:17: Loss G: 31.9969
04/20 01:09:17: bpp: 0.3216
04/20 01:09:17: Sum Loss: 32.5895
04/20 01:09:17: Loss (s-m-l): [0.0007, 0.04, 0.0]
04/20 01:09:17: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9841, 1.0, 0.9841], [1.0, 1.0, 1.0]]
04/20 01:12:15: 
Iteration: 27100
04/20 01:12:15: Running time: 796.08 min
04/20 01:12:15: Data Loading time: 0.00007 s
04/20 01:12:15: Loss R: 0.0133
04/20 01:12:15: Loss G: 31.3882
04/20 01:12:15: bpp: 0.3248
04/20 01:12:15: Sum Loss: 31.9799
04/20 01:12:15: Loss (s-m-l): [0.0007, 0.0394, 0.0]
04/20 01:12:15: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9842, 1.0, 0.9842], [1.0, 1.0, 1.0]]
04/20 01:15:10: 
Iteration: 27200
04/20 01:15:10: Running time: 799.00 min
04/20 01:15:10: Data Loading time: 0.00007 s
04/20 01:15:10: Loss R: 0.0129
04/20 01:15:10: Loss G: 31.3321
04/20 01:15:10: bpp: 0.3230
04/20 01:15:10: Sum Loss: 31.9137
04/20 01:15:10: Loss (s-m-l): [0.0007, 0.0381, 0.0]
04/20 01:15:10: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/20 01:18:08: 
Iteration: 27300
04/20 01:18:08: Running time: 801.97 min
04/20 01:18:08: Data Loading time: 0.00010 s
04/20 01:18:08: Loss R: 0.0135
04/20 01:18:08: Loss G: 32.8118
04/20 01:18:08: bpp: 0.3219
04/20 01:18:08: Sum Loss: 33.4035
04/20 01:18:08: Loss (s-m-l): [0.0007, 0.0398, 0.0]
04/20 01:18:08: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9841, 1.0, 0.9841], [1.0, 1.0, 1.0]]
04/20 01:21:06: 
Iteration: 27400
04/20 01:21:06: Running time: 804.94 min
04/20 01:21:06: Data Loading time: 0.00007 s
04/20 01:21:06: Loss R: 0.0135
04/20 01:21:06: Loss G: 34.6377
04/20 01:21:06: bpp: 0.3187
04/20 01:21:06: Sum Loss: 35.2268
04/20 01:21:06: Loss (s-m-l): [0.0006, 0.0399, 0.0]
04/20 01:21:06: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9842, 1.0, 0.9842], [1.0, 1.0, 1.0]]
04/20 01:24:01: 
Iteration: 27500
04/20 01:24:01: Running time: 807.85 min
04/20 01:24:01: Data Loading time: 0.00007 s
04/20 01:24:01: Loss R: 0.0137
04/20 01:24:01: Loss G: 35.9927
04/20 01:24:01: bpp: 0.3199
04/20 01:24:01: Sum Loss: 36.5867
04/20 01:24:01: Loss (s-m-l): [0.0007, 0.0404, 0.0]
04/20 01:24:01: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9838, 1.0, 0.9838], [1.0, 1.0, 1.0]]
04/20 01:26:58: 
Iteration: 27600
04/20 01:26:58: Running time: 810.81 min
04/20 01:26:58: Data Loading time: 0.00007 s
04/20 01:26:58: Loss R: 0.0133
04/20 01:26:58: Loss G: 34.4451
04/20 01:26:58: bpp: 0.3233
04/20 01:26:58: Sum Loss: 35.0340
04/20 01:26:58: Loss (s-m-l): [0.0007, 0.0391, 0.0]
04/20 01:26:58: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9844, 1.0, 0.9844], [1.0, 1.0, 1.0]]
04/20 01:29:52: 
Iteration: 27700
04/20 01:29:52: Running time: 813.70 min
04/20 01:29:52: Data Loading time: 0.00007 s
04/20 01:29:52: Loss R: 0.0132
04/20 01:29:52: Loss G: 32.6241
04/20 01:29:52: bpp: 0.3232
04/20 01:29:52: Sum Loss: 33.2116
04/20 01:29:52: Loss (s-m-l): [0.0007, 0.039, 0.0]
04/20 01:29:52: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9845, 1.0, 0.9845], [1.0, 1.0, 1.0]]
04/20 01:32:47: 
Iteration: 27800
04/20 01:32:47: Running time: 816.62 min
04/20 01:32:47: Data Loading time: 0.00007 s
04/20 01:32:47: Loss R: 0.0132
04/20 01:32:47: Loss G: 40.4335
04/20 01:32:47: bpp: 0.3228
04/20 01:32:47: Sum Loss: 41.0212
04/20 01:32:47: Loss (s-m-l): [0.0007, 0.039, 0.0]
04/20 01:32:47: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9845, 1.0, 0.9845], [1.0, 1.0, 1.0]]
04/20 01:35:41: 
Iteration: 27900
04/20 01:35:41: Running time: 819.51 min
04/20 01:35:41: Data Loading time: 0.00007 s
04/20 01:35:41: Loss R: 0.0135
04/20 01:35:41: Loss G: 39.5685
04/20 01:35:41: bpp: 0.3235
04/20 01:35:41: Sum Loss: 40.1613
04/20 01:35:41: Loss (s-m-l): [0.0007, 0.0397, 0.0]
04/20 01:35:41: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9841, 1.0, 0.9841], [1.0, 1.0, 1.0]]
04/20 01:38:35: 
Iteration: 28000
04/20 01:38:35: Running time: 822.43 min
04/20 01:38:35: Data Loading time: 0.00007 s
04/20 01:38:35: Loss R: 0.0134
04/20 01:38:35: Loss G: 43.0104
04/20 01:38:35: bpp: 0.3260
04/20 01:38:35: Sum Loss: 43.6051
04/20 01:38:35: Loss (s-m-l): [0.0007, 0.0396, 0.0]
04/20 01:38:35: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9842, 1.0, 0.9842], [1.0, 1.0, 1.0]]
04/20 01:38:36: 
==========Evaluation: iter 28000==========
04/20 01:38:36: save checkpoints: ckpts/tp/tp28000
04/20 01:41:34: 
Iteration: 28100
04/20 01:41:34: Running time: 825.40 min
04/20 01:41:34: Data Loading time: 0.00007 s
04/20 01:41:34: Loss R: 0.0134
04/20 01:41:34: Loss G: 43.9442
04/20 01:41:34: bpp: 0.3216
04/20 01:41:34: Sum Loss: 44.5332
04/20 01:41:34: Loss (s-m-l): [0.0007, 0.0394, 0.0]
04/20 01:41:34: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9844, 1.0, 0.9844], [1.0, 1.0, 1.0]]
04/20 01:44:31: 
Iteration: 28200
04/20 01:44:31: Running time: 828.36 min
04/20 01:44:31: Data Loading time: 0.00007 s
04/20 01:44:31: Loss R: 0.0132
04/20 01:44:31: Loss G: 37.6693
04/20 01:44:31: bpp: 0.3243
04/20 01:44:31: Sum Loss: 38.2579
04/20 01:44:31: Loss (s-m-l): [0.0007, 0.0389, 0.0]
04/20 01:44:31: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9844, 1.0, 0.9844], [1.0, 1.0, 1.0]]
04/20 01:47:29: 
Iteration: 28300
04/20 01:47:29: Running time: 831.31 min
04/20 01:47:29: Data Loading time: 0.00007 s
04/20 01:47:29: Loss R: 0.0129
04/20 01:47:29: Loss G: 38.3687
04/20 01:47:29: bpp: 0.3187
04/20 01:47:29: Sum Loss: 38.9461
04/20 01:47:29: Loss (s-m-l): [0.0006, 0.0382, 0.0]
04/20 01:47:29: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9848, 1.0, 0.9848], [1.0, 1.0, 1.0]]
04/20 01:50:25: 
Iteration: 28400
04/20 01:50:25: Running time: 834.26 min
04/20 01:50:25: Data Loading time: 0.00007 s
04/20 01:50:25: Loss R: 0.0129
04/20 01:50:25: Loss G: 37.4698
04/20 01:50:25: bpp: 0.3219
04/20 01:50:25: Sum Loss: 38.0497
04/20 01:50:25: Loss (s-m-l): [0.0007, 0.038, 0.0]
04/20 01:50:25: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/20 01:53:20: 
Iteration: 28500
04/20 01:53:20: Running time: 837.18 min
04/20 01:53:20: Data Loading time: 0.00007 s
04/20 01:53:20: Loss R: 0.0137
04/20 01:53:20: Loss G: 35.6035
04/20 01:53:20: bpp: 0.3237
04/20 01:53:20: Sum Loss: 36.2010
04/20 01:53:20: Loss (s-m-l): [0.0007, 0.0404, 0.0]
04/20 01:53:20: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9839, 1.0, 0.9839], [1.0, 1.0, 1.0]]
04/20 01:56:16: 
Iteration: 28600
04/20 01:56:16: Running time: 840.10 min
04/20 01:56:16: Data Loading time: 0.00007 s
04/20 01:56:16: Loss R: 0.0136
04/20 01:56:16: Loss G: 35.2317
04/20 01:56:16: bpp: 0.3214
04/20 01:56:16: Sum Loss: 35.8247
04/20 01:56:16: Loss (s-m-l): [0.0007, 0.04, 0.0]
04/20 01:56:16: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.984, 1.0, 0.984], [1.0, 1.0, 1.0]]
04/20 01:59:15: 
Iteration: 28700
04/20 01:59:15: Running time: 843.08 min
04/20 01:59:15: Data Loading time: 0.00007 s
04/20 01:59:15: Loss R: 0.0134
04/20 01:59:15: Loss G: 36.9457
04/20 01:59:15: bpp: 0.3225
04/20 01:59:15: Sum Loss: 37.5370
04/20 01:59:15: Loss (s-m-l): [0.0007, 0.0396, 0.0]
04/20 01:59:15: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9842, 1.0, 0.9842], [1.0, 1.0, 1.0]]
04/20 02:02:08: 
Iteration: 28800
04/20 02:02:08: Running time: 845.97 min
04/20 02:02:08: Data Loading time: 0.00007 s
04/20 02:02:08: Loss R: 0.0135
04/20 02:02:08: Loss G: 34.1007
04/20 02:02:08: bpp: 0.3245
04/20 02:02:08: Sum Loss: 34.6947
04/20 02:02:08: Loss (s-m-l): [0.0007, 0.0398, 0.0]
04/20 02:02:08: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.984, 1.0, 0.984], [1.0, 1.0, 1.0]]
04/20 02:05:07: 
Iteration: 28900
04/20 02:05:07: Running time: 848.95 min
04/20 02:05:07: Data Loading time: 0.00007 s
04/20 02:05:07: Loss R: 0.0138
04/20 02:05:07: Loss G: 35.6549
04/20 02:05:07: bpp: 0.3215
04/20 02:05:07: Sum Loss: 36.2520
04/20 02:05:07: Loss (s-m-l): [0.0007, 0.0407, 0.0]
04/20 02:05:07: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9838, 1.0, 0.9838], [1.0, 1.0, 1.0]]
04/20 02:08:01: 
Iteration: 29000
04/20 02:08:01: Running time: 851.85 min
04/20 02:08:01: Data Loading time: 0.00007 s
04/20 02:08:01: Loss R: 0.0132
04/20 02:08:01: Loss G: 34.3156
04/20 02:08:01: bpp: 0.3232
04/20 02:08:01: Sum Loss: 34.9025
04/20 02:08:01: Loss (s-m-l): [0.0007, 0.0389, 0.0]
04/20 02:08:01: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9846, 1.0, 0.9846], [1.0, 1.0, 1.0]]
04/20 02:10:56: 
Iteration: 29100
04/20 02:10:56: Running time: 854.77 min
04/20 02:10:56: Data Loading time: 0.00007 s
04/20 02:10:56: Loss R: 0.0130
04/20 02:10:56: Loss G: 34.0374
04/20 02:10:56: bpp: 0.3228
04/20 02:10:56: Sum Loss: 34.6200
04/20 02:10:56: Loss (s-m-l): [0.0006, 0.0383, 0.0]
04/20 02:10:56: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9847, 1.0, 0.9847], [1.0, 1.0, 1.0]]
04/20 02:13:48: 
Iteration: 29200
04/20 02:13:48: Running time: 857.64 min
04/20 02:13:48: Data Loading time: 0.00007 s
04/20 02:13:48: Loss R: 0.0135
04/20 02:13:48: Loss G: 33.7263
04/20 02:13:48: bpp: 0.3230
04/20 02:13:48: Sum Loss: 34.3189
04/20 02:13:48: Loss (s-m-l): [0.0007, 0.0398, 0.0]
04/20 02:13:48: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9841, 1.0, 0.9841], [1.0, 1.0, 1.0]]
04/20 02:16:39: 
Iteration: 29300
04/20 02:16:39: Running time: 860.49 min
04/20 02:16:39: Data Loading time: 0.00007 s
04/20 02:16:39: Loss R: 0.0134
04/20 02:16:39: Loss G: 37.9004
04/20 02:16:39: bpp: 0.3221
04/20 02:16:39: Sum Loss: 38.4906
04/20 02:16:39: Loss (s-m-l): [0.0007, 0.0395, 0.0]
04/20 02:16:39: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9841, 1.0, 0.9841], [1.0, 1.0, 1.0]]
04/20 02:19:37: 
Iteration: 29400
04/20 02:19:37: Running time: 863.45 min
04/20 02:19:37: Data Loading time: 0.00007 s
04/20 02:19:37: Loss R: 0.0133
04/20 02:19:37: Loss G: 35.3431
04/20 02:19:37: bpp: 0.3221
04/20 02:19:37: Sum Loss: 35.9318
04/20 02:19:37: Loss (s-m-l): [0.0007, 0.0393, 0.0]
04/20 02:19:37: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9843, 1.0, 0.9843], [1.0, 1.0, 1.0]]
04/20 02:22:33: 
Iteration: 29500
04/20 02:22:33: Running time: 866.38 min
04/20 02:22:33: Data Loading time: 0.00007 s
04/20 02:22:33: Loss R: 0.0131
04/20 02:22:33: Loss G: 35.2784
04/20 02:22:33: bpp: 0.3229
04/20 02:22:33: Sum Loss: 35.8640
04/20 02:22:33: Loss (s-m-l): [0.0007, 0.0387, 0.0]
04/20 02:22:33: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9847, 1.0, 0.9847], [1.0, 1.0, 1.0]]
04/20 02:25:23: 
Iteration: 29600
04/20 02:25:23: Running time: 869.23 min
04/20 02:25:23: Data Loading time: 0.00007 s
04/20 02:25:23: Loss R: 0.0131
04/20 02:25:23: Loss G: 34.5006
04/20 02:25:23: bpp: 0.3208
04/20 02:25:23: Sum Loss: 35.0834
04/20 02:25:23: Loss (s-m-l): [0.0007, 0.0386, 0.0]
04/20 02:25:23: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9846, 1.0, 0.9846], [1.0, 1.0, 1.0]]
04/20 02:28:20: 
Iteration: 29700
04/20 02:28:20: Running time: 872.18 min
04/20 02:28:20: Data Loading time: 0.00007 s
04/20 02:28:20: Loss R: 0.0135
04/20 02:28:20: Loss G: 34.1596
04/20 02:28:20: bpp: 0.3194
04/20 02:28:20: Sum Loss: 34.7484
04/20 02:28:20: Loss (s-m-l): [0.0007, 0.0397, 0.0]
04/20 02:28:20: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9842, 1.0, 0.9842], [1.0, 1.0, 1.0]]
04/20 02:31:15: 
Iteration: 29800
04/20 02:31:15: Running time: 875.08 min
04/20 02:31:15: Data Loading time: 0.00007 s
04/20 02:31:15: Loss R: 0.0130
04/20 02:31:15: Loss G: 37.0502
04/20 02:31:15: bpp: 0.3222
04/20 02:31:15: Sum Loss: 37.6321
04/20 02:31:15: Loss (s-m-l): [0.0006, 0.0384, 0.0]
04/20 02:31:15: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9847, 1.0, 0.9847], [1.0, 1.0, 1.0]]
04/20 02:34:11: 
Iteration: 29900
04/20 02:34:11: Running time: 878.03 min
04/20 02:34:11: Data Loading time: 0.00007 s
04/20 02:34:11: Loss R: 0.0131
04/20 02:34:11: Loss G: 35.5711
04/20 02:34:11: bpp: 0.3231
04/20 02:34:11: Sum Loss: 36.1565
04/20 02:34:11: Loss (s-m-l): [0.0007, 0.0387, 0.0]
04/20 02:34:11: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9846, 1.0, 0.9846], [1.0, 1.0, 1.0]]
04/20 02:37:05: 
Iteration: 30000
04/20 02:37:05: Running time: 880.93 min
04/20 02:37:05: Data Loading time: 0.00007 s
04/20 02:37:05: Loss R: 0.0137
04/20 02:37:05: Loss G: 34.1473
04/20 02:37:05: bpp: 0.3245
04/20 02:37:05: Sum Loss: 34.7451
04/20 02:37:05: Loss (s-m-l): [0.0007, 0.0403, 0.0]
04/20 02:37:05: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9838, 1.0, 0.9838], [1.0, 1.0, 1.0]]
04/20 02:37:06: 
==========Evaluation: iter 30000==========
04/20 02:37:06: save checkpoints: ckpts/tp/tp30000
04/20 02:37:06: LR: [1.25e-05, 1.25e-05, 1.25e-05]
04/20 02:40:03: 
Iteration: 30100
04/20 02:40:03: Running time: 883.88 min
04/20 02:40:03: Data Loading time: 0.00008 s
04/20 02:40:03: Loss R: 0.0135
04/20 02:40:03: Loss G: 36.7787
04/20 02:40:03: bpp: 0.3229
04/20 02:40:03: Sum Loss: 37.3723
04/20 02:40:03: Loss (s-m-l): [0.0007, 0.0399, 0.0]
04/20 02:40:03: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.984, 1.0, 0.984], [1.0, 1.0, 1.0]]
04/20 02:43:04: 
Iteration: 30200
04/20 02:43:04: Running time: 886.90 min
04/20 02:43:04: Data Loading time: 0.00007 s
04/20 02:43:04: Loss R: 0.0135
04/20 02:43:04: Loss G: 34.3060
04/20 02:43:04: bpp: 0.3193
04/20 02:43:04: Sum Loss: 34.8950
04/20 02:43:04: Loss (s-m-l): [0.0006, 0.0398, 0.0]
04/20 02:43:04: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9841, 1.0, 0.9841], [1.0, 1.0, 1.0]]
04/20 02:45:53: 
Iteration: 30300
04/20 02:45:53: Running time: 889.72 min
04/20 02:45:53: Data Loading time: 0.00007 s
04/20 02:45:53: Loss R: 0.0129
04/20 02:45:53: Loss G: 33.8246
04/20 02:45:53: bpp: 0.3241
04/20 02:45:53: Sum Loss: 34.4060
04/20 02:45:53: Loss (s-m-l): [0.0006, 0.038, 0.0]
04/20 02:45:53: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9848, 1.0, 0.9848], [1.0, 1.0, 1.0]]
04/20 02:48:51: 
Iteration: 30400
04/20 02:48:51: Running time: 892.68 min
04/20 02:48:51: Data Loading time: 0.00007 s
04/20 02:48:51: Loss R: 0.0138
04/20 02:48:51: Loss G: 39.2445
04/20 02:48:51: bpp: 0.3209
04/20 02:48:51: Sum Loss: 39.8406
04/20 02:48:51: Loss (s-m-l): [0.0007, 0.0406, 0.0]
04/20 02:48:51: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9839, 1.0, 0.9839], [1.0, 1.0, 1.0]]
04/20 02:51:46: 
Iteration: 30500
04/20 02:51:46: Running time: 895.61 min
04/20 02:51:46: Data Loading time: 0.00007 s
04/20 02:51:46: Loss R: 0.0126
04/20 02:51:46: Loss G: 36.5711
04/20 02:51:46: bpp: 0.3243
04/20 02:51:46: Sum Loss: 37.1470
04/20 02:51:46: Loss (s-m-l): [0.0006, 0.0371, 0.0]
04/20 02:51:46: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/20 02:54:44: 
Iteration: 30600
04/20 02:54:44: Running time: 898.58 min
04/20 02:54:44: Data Loading time: 0.00007 s
04/20 02:54:44: Loss R: 0.0125
04/20 02:54:44: Loss G: 33.7747
04/20 02:54:44: bpp: 0.3226
04/20 02:54:44: Sum Loss: 34.3481
04/20 02:54:44: Loss (s-m-l): [0.0007, 0.037, 0.0]
04/20 02:54:44: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/20 02:57:37: 
Iteration: 30700
04/20 02:57:37: Running time: 901.46 min
04/20 02:57:37: Data Loading time: 0.00007 s
04/20 02:57:37: Loss R: 0.0127
04/20 02:57:37: Loss G: 33.5134
04/20 02:57:37: bpp: 0.3204
04/20 02:57:37: Sum Loss: 34.0879
04/20 02:57:37: Loss (s-m-l): [0.0007, 0.0374, 0.0]
04/20 02:57:37: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/20 03:00:35: 
Iteration: 30800
04/20 03:00:35: Running time: 904.42 min
04/20 03:00:35: Data Loading time: 0.00007 s
04/20 03:00:35: Loss R: 0.0131
04/20 03:00:35: Loss G: 32.5842
04/20 03:00:35: bpp: 0.3215
04/20 03:00:35: Sum Loss: 33.1679
04/20 03:00:35: Loss (s-m-l): [0.0006, 0.0387, 0.0]
04/20 03:00:35: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9847, 1.0, 0.9847], [1.0, 1.0, 1.0]]
04/20 03:03:31: 
Iteration: 30900
04/20 03:03:31: Running time: 907.35 min
04/20 03:03:31: Data Loading time: 0.00007 s
04/20 03:03:31: Loss R: 0.0132
04/20 03:03:31: Loss G: 34.2416
04/20 03:03:31: bpp: 0.3253
04/20 03:03:31: Sum Loss: 34.8301
04/20 03:03:31: Loss (s-m-l): [0.0006, 0.0388, 0.0]
04/20 03:03:31: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9844, 1.0, 0.9844], [1.0, 1.0, 1.0]]
04/20 03:06:26: 
Iteration: 31000
04/20 03:06:26: Running time: 910.27 min
04/20 03:06:26: Data Loading time: 0.00007 s
04/20 03:06:26: Loss R: 0.0130
04/20 03:06:26: Loss G: 35.2630
04/20 03:06:26: bpp: 0.3208
04/20 03:06:26: Sum Loss: 35.8435
04/20 03:06:26: Loss (s-m-l): [0.0006, 0.0383, 0.0]
04/20 03:06:26: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9847, 1.0, 0.9847], [1.0, 1.0, 1.0]]
04/20 03:09:21: 
Iteration: 31100
04/20 03:09:21: Running time: 913.18 min
04/20 03:09:21: Data Loading time: 0.00007 s
04/20 03:09:21: Loss R: 0.0132
04/20 03:09:21: Loss G: 34.3279
04/20 03:09:21: bpp: 0.3219
04/20 03:09:21: Sum Loss: 34.9132
04/20 03:09:21: Loss (s-m-l): [0.0007, 0.0389, 0.0]
04/20 03:09:21: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9845, 1.0, 0.9845], [1.0, 1.0, 1.0]]
04/20 03:12:16: 
Iteration: 31200
04/20 03:12:16: Running time: 916.10 min
04/20 03:12:16: Data Loading time: 0.00007 s
04/20 03:12:16: Loss R: 0.0132
04/20 03:12:16: Loss G: 33.7762
04/20 03:12:16: bpp: 0.3202
04/20 03:12:16: Sum Loss: 34.3608
04/20 03:12:16: Loss (s-m-l): [0.0007, 0.039, 0.0]
04/20 03:12:16: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9845, 1.0, 0.9845], [1.0, 1.0, 1.0]]
04/20 03:15:13: 
Iteration: 31300
04/20 03:15:13: Running time: 919.05 min
04/20 03:15:13: Data Loading time: 0.00007 s
04/20 03:15:13: Loss R: 0.0130
04/20 03:15:13: Loss G: 36.2391
04/20 03:15:13: bpp: 0.3207
04/20 03:15:13: Sum Loss: 36.8204
04/20 03:15:13: Loss (s-m-l): [0.0007, 0.0384, 0.0]
04/20 03:15:13: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9847, 1.0, 0.9847], [1.0, 1.0, 1.0]]
04/20 03:18:07: 
Iteration: 31400
04/20 03:18:07: Running time: 921.96 min
04/20 03:18:07: Data Loading time: 0.00007 s
04/20 03:18:07: Loss R: 0.0132
04/20 03:18:07: Loss G: 38.0514
04/20 03:18:07: bpp: 0.3209
04/20 03:18:07: Sum Loss: 38.6361
04/20 03:18:07: Loss (s-m-l): [0.0006, 0.039, 0.0]
04/20 03:18:07: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9844, 1.0, 0.9844], [1.0, 1.0, 1.0]]
04/20 03:21:04: 
Iteration: 31500
04/20 03:21:04: Running time: 924.90 min
04/20 03:21:04: Data Loading time: 0.00007 s
04/20 03:21:04: Loss R: 0.0131
04/20 03:21:04: Loss G: 41.1668
04/20 03:21:04: bpp: 0.3214
04/20 03:21:04: Sum Loss: 41.7497
04/20 03:21:04: Loss (s-m-l): [0.0007, 0.0385, 0.0]
04/20 03:21:04: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9846, 1.0, 0.9846], [1.0, 1.0, 1.0]]
04/20 03:23:58: 
Iteration: 31600
04/20 03:23:58: Running time: 927.81 min
04/20 03:23:58: Data Loading time: 0.00007 s
04/20 03:23:58: Loss R: 0.0130
04/20 03:23:58: Loss G: 35.5581
04/20 03:23:58: bpp: 0.3244
04/20 03:23:58: Sum Loss: 36.1428
04/20 03:23:58: Loss (s-m-l): [0.0006, 0.0384, 0.0]
04/20 03:23:58: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9846, 1.0, 0.9846], [1.0, 1.0, 1.0]]
04/20 03:26:54: 
Iteration: 31700
04/20 03:26:54: Running time: 930.74 min
04/20 03:26:54: Data Loading time: 0.00007 s
04/20 03:26:54: Loss R: 0.0129
04/20 03:26:54: Loss G: 38.2121
04/20 03:26:54: bpp: 0.3193
04/20 03:26:54: Sum Loss: 38.7892
04/20 03:26:54: Loss (s-m-l): [0.0006, 0.038, 0.0]
04/20 03:26:54: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/20 03:29:49: 
Iteration: 31800
04/20 03:29:49: Running time: 933.65 min
04/20 03:29:49: Data Loading time: 0.00007 s
04/20 03:29:49: Loss R: 0.0128
04/20 03:29:49: Loss G: 37.9100
04/20 03:29:49: bpp: 0.3219
04/20 03:29:49: Sum Loss: 38.4887
04/20 03:29:49: Loss (s-m-l): [0.0006, 0.0379, 0.0]
04/20 03:29:49: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/20 03:32:42: 
Iteration: 31900
04/20 03:32:42: Running time: 936.54 min
04/20 03:32:42: Data Loading time: 0.00007 s
04/20 03:32:42: Loss R: 0.0131
04/20 03:32:42: Loss G: 35.7040
04/20 03:32:42: bpp: 0.3231
04/20 03:32:42: Sum Loss: 36.2892
04/20 03:32:42: Loss (s-m-l): [0.0007, 0.0387, 0.0]
04/20 03:32:42: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9846, 1.0, 0.9846], [1.0, 1.0, 1.0]]
04/20 03:35:38: 
Iteration: 32000
04/20 03:35:38: Running time: 939.47 min
04/20 03:35:38: Data Loading time: 0.00007 s
04/20 03:35:38: Loss R: 0.0126
04/20 03:35:38: Loss G: 34.5920
04/20 03:35:38: bpp: 0.3201
04/20 03:35:38: Sum Loss: 35.1634
04/20 03:35:38: Loss (s-m-l): [0.0006, 0.0371, 0.0]
04/20 03:35:38: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/20 03:35:38: 
==========Evaluation: iter 32000==========
04/20 03:35:38: save checkpoints: ckpts/tp/tp32000
04/20 03:38:33: 
Iteration: 32100
04/20 03:38:33: Running time: 942.38 min
04/20 03:38:33: Data Loading time: 0.00007 s
04/20 03:38:33: Loss R: 0.0129
04/20 03:38:33: Loss G: 33.2939
04/20 03:38:33: bpp: 0.3215
04/20 03:38:33: Sum Loss: 33.8738
04/20 03:38:33: Loss (s-m-l): [0.0006, 0.0381, 0.0]
04/20 03:38:33: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9848, 1.0, 0.9848], [1.0, 1.0, 1.0]]
04/20 03:41:28: 
Iteration: 32200
04/20 03:41:28: Running time: 945.31 min
04/20 03:41:28: Data Loading time: 0.00007 s
04/20 03:41:28: Loss R: 0.0132
04/20 03:41:28: Loss G: 33.9481
04/20 03:41:28: bpp: 0.3226
04/20 03:41:28: Sum Loss: 34.5340
04/20 03:41:28: Loss (s-m-l): [0.0007, 0.0388, 0.0]
04/20 03:41:28: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9846, 1.0, 0.9846], [1.0, 1.0, 1.0]]
04/20 03:44:25: 
Iteration: 32300
04/20 03:44:25: Running time: 948.25 min
04/20 03:44:25: Data Loading time: 0.00007 s
04/20 03:44:25: Loss R: 0.0127
04/20 03:44:25: Loss G: 32.7788
04/20 03:44:25: bpp: 0.3241
04/20 03:44:25: Sum Loss: 33.3559
04/20 03:44:25: Loss (s-m-l): [0.0006, 0.0373, 0.0]
04/20 03:44:25: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/20 03:47:21: 
Iteration: 32400
04/20 03:47:21: Running time: 951.18 min
04/20 03:47:21: Data Loading time: 0.00007 s
04/20 03:47:21: Loss R: 0.0130
04/20 03:47:21: Loss G: 35.4223
04/20 03:47:21: bpp: 0.3235
04/20 03:47:21: Sum Loss: 36.0059
04/20 03:47:21: Loss (s-m-l): [0.0006, 0.0384, 0.0]
04/20 03:47:21: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9847, 1.0, 0.9847], [1.0, 1.0, 1.0]]
04/20 03:50:19: 
Iteration: 32500
04/20 03:50:19: Running time: 954.15 min
04/20 03:50:19: Data Loading time: 0.00007 s
04/20 03:50:19: Loss R: 0.0137
04/20 03:50:19: Loss G: 38.1186
04/20 03:50:19: bpp: 0.3209
04/20 03:50:19: Sum Loss: 38.7133
04/20 03:50:19: Loss (s-m-l): [0.0007, 0.0404, 0.0]
04/20 03:50:19: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9839, 1.0, 0.9839], [1.0, 1.0, 1.0]]
04/20 03:53:17: 
Iteration: 32600
04/20 03:53:17: Running time: 957.12 min
04/20 03:53:17: Data Loading time: 0.00007 s
04/20 03:53:17: Loss R: 0.0140
04/20 03:53:17: Loss G: 39.6215
04/20 03:53:17: bpp: 0.3204
04/20 03:53:17: Sum Loss: 40.2214
04/20 03:53:17: Loss (s-m-l): [0.0007, 0.0412, 0.0]
04/20 03:53:17: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9835, 1.0, 0.9835], [1.0, 1.0, 1.0]]
04/20 03:56:13: 
Iteration: 32700
04/20 03:56:13: Running time: 960.05 min
04/20 03:56:13: Data Loading time: 0.00007 s
04/20 03:56:13: Loss R: 0.0130
04/20 03:56:13: Loss G: 39.9950
04/20 03:56:13: bpp: 0.3218
04/20 03:56:13: Sum Loss: 40.5773
04/20 03:56:13: Loss (s-m-l): [0.0006, 0.0384, 0.0]
04/20 03:56:13: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9846, 1.0, 0.9846], [1.0, 1.0, 1.0]]
04/20 03:59:08: 
Iteration: 32800
04/20 03:59:08: Running time: 962.96 min
04/20 03:59:08: Data Loading time: 0.00007 s
04/20 03:59:08: Loss R: 0.0127
04/20 03:59:08: Loss G: 38.0707
04/20 03:59:08: bpp: 0.3216
04/20 03:59:08: Sum Loss: 38.6458
04/20 03:59:08: Loss (s-m-l): [0.0007, 0.0374, 0.0]
04/20 03:59:08: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/20 04:02:06: 
Iteration: 32900
04/20 04:02:06: Running time: 965.94 min
04/20 04:02:06: Data Loading time: 0.00009 s
04/20 04:02:06: Loss R: 0.0136
04/20 04:02:06: Loss G: 33.9577
04/20 04:02:06: bpp: 0.3198
04/20 04:02:06: Sum Loss: 34.5492
04/20 04:02:06: Loss (s-m-l): [0.0006, 0.0401, 0.0]
04/20 04:02:06: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9839, 1.0, 0.9839], [1.0, 1.0, 1.0]]
04/20 04:05:02: 
Iteration: 33000
04/20 04:05:02: Running time: 968.87 min
04/20 04:05:02: Data Loading time: 0.00007 s
04/20 04:05:02: Loss R: 0.0126
04/20 04:05:02: Loss G: 34.0551
04/20 04:05:02: bpp: 0.3201
04/20 04:05:02: Sum Loss: 34.6282
04/20 04:05:02: Loss (s-m-l): [0.0006, 0.0373, 0.0]
04/20 04:05:02: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/20 04:07:59: 
Iteration: 33100
04/20 04:07:59: Running time: 971.83 min
04/20 04:07:59: Data Loading time: 0.00007 s
04/20 04:07:59: Loss R: 0.0128
04/20 04:07:59: Loss G: 35.8555
04/20 04:07:59: bpp: 0.3250
04/20 04:07:59: Sum Loss: 36.4362
04/20 04:07:59: Loss (s-m-l): [0.0006, 0.0377, 0.0]
04/20 04:07:59: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/20 04:10:56: 
Iteration: 33200
04/20 04:10:56: Running time: 974.76 min
04/20 04:10:56: Data Loading time: 0.00007 s
04/20 04:10:56: Loss R: 0.0134
04/20 04:10:56: Loss G: 38.6530
04/20 04:10:56: bpp: 0.3198
04/20 04:10:56: Sum Loss: 39.2404
04/20 04:10:56: Loss (s-m-l): [0.0007, 0.0395, 0.0]
04/20 04:10:56: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9844, 1.0, 0.9844], [1.0, 1.0, 1.0]]
04/20 04:13:50: 
Iteration: 33300
04/20 04:13:50: Running time: 977.68 min
04/20 04:13:50: Data Loading time: 0.00007 s
04/20 04:13:50: Loss R: 0.0130
04/20 04:13:50: Loss G: 38.3268
04/20 04:13:50: bpp: 0.3192
04/20 04:13:50: Sum Loss: 38.9064
04/20 04:13:50: Loss (s-m-l): [0.0007, 0.0384, 0.0]
04/20 04:13:50: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9846, 1.0, 0.9846], [1.0, 1.0, 1.0]]
04/20 04:16:46: 
Iteration: 33400
04/20 04:16:46: Running time: 980.59 min
04/20 04:16:46: Data Loading time: 0.00007 s
04/20 04:16:46: Loss R: 0.0126
04/20 04:16:46: Loss G: 34.9942
04/20 04:16:46: bpp: 0.3215
04/20 04:16:46: Sum Loss: 35.5680
04/20 04:16:46: Loss (s-m-l): [0.0006, 0.0372, 0.0]
04/20 04:16:46: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/20 04:19:41: 
Iteration: 33500
04/20 04:19:41: Running time: 983.52 min
04/20 04:19:41: Data Loading time: 0.00007 s
04/20 04:19:41: Loss R: 0.0127
04/20 04:19:41: Loss G: 32.1895
04/20 04:19:41: bpp: 0.3261
04/20 04:19:41: Sum Loss: 32.7703
04/20 04:19:41: Loss (s-m-l): [0.0006, 0.0376, 0.0]
04/20 04:19:41: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/20 04:22:38: 
Iteration: 33600
04/20 04:22:38: Running time: 986.46 min
04/20 04:22:38: Data Loading time: 0.00007 s
04/20 04:22:38: Loss R: 0.0132
04/20 04:22:38: Loss G: 32.7984
04/20 04:22:38: bpp: 0.3193
04/20 04:22:38: Sum Loss: 33.3823
04/20 04:22:38: Loss (s-m-l): [0.0006, 0.0391, 0.0]
04/20 04:22:38: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9846, 1.0, 0.9846], [1.0, 1.0, 1.0]]
04/20 04:25:31: 
Iteration: 33700
04/20 04:25:31: Running time: 989.36 min
04/20 04:25:31: Data Loading time: 0.00007 s
04/20 04:25:31: Loss R: 0.0128
04/20 04:25:31: Loss G: 35.4220
04/20 04:25:31: bpp: 0.3226
04/20 04:25:31: Sum Loss: 36.0015
04/20 04:25:31: Loss (s-m-l): [0.0006, 0.0379, 0.0]
04/20 04:25:31: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/20 04:28:25: 
Iteration: 33800
04/20 04:28:25: Running time: 992.25 min
04/20 04:28:25: Data Loading time: 0.00007 s
04/20 04:28:25: Loss R: 0.0129
04/20 04:28:25: Loss G: 37.4146
04/20 04:28:25: bpp: 0.3218
04/20 04:28:25: Sum Loss: 37.9949
04/20 04:28:25: Loss (s-m-l): [0.0006, 0.0381, 0.0]
04/20 04:28:25: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9848, 1.0, 0.9848], [1.0, 1.0, 1.0]]
04/20 04:31:15: 
Iteration: 33900
04/20 04:31:15: Running time: 995.09 min
04/20 04:31:15: Data Loading time: 0.00007 s
04/20 04:31:15: Loss R: 0.0127
04/20 04:31:15: Loss G: 36.1878
04/20 04:31:15: bpp: 0.3247
04/20 04:31:15: Sum Loss: 36.7658
04/20 04:31:15: Loss (s-m-l): [0.0006, 0.0374, 0.0]
04/20 04:31:15: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/20 04:34:10: 
Iteration: 34000
04/20 04:34:10: Running time: 998.01 min
04/20 04:34:10: Data Loading time: 0.00007 s
04/20 04:34:10: Loss R: 0.0127
04/20 04:34:10: Loss G: 32.9582
04/20 04:34:10: bpp: 0.3239
04/20 04:34:10: Sum Loss: 33.5352
04/20 04:34:10: Loss (s-m-l): [0.0006, 0.0373, 0.0]
04/20 04:34:10: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/20 04:34:11: 
==========Evaluation: iter 34000==========
04/20 04:34:11: save checkpoints: ckpts/tp/tp34000
04/20 04:37:05: 
Iteration: 34100
04/20 04:37:05: Running time: 1000.91 min
04/20 04:37:05: Data Loading time: 0.00007 s
04/20 04:37:05: Loss R: 0.0130
04/20 04:37:05: Loss G: 33.4473
04/20 04:37:05: bpp: 0.3223
04/20 04:37:05: Sum Loss: 34.0292
04/20 04:37:05: Loss (s-m-l): [0.0007, 0.0383, 0.0]
04/20 04:37:05: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9847, 1.0, 0.9847], [1.0, 1.0, 1.0]]
04/20 04:40:00: 
Iteration: 34200
04/20 04:40:00: Running time: 1003.84 min
04/20 04:40:00: Data Loading time: 0.00009 s
04/20 04:40:00: Loss R: 0.0132
04/20 04:40:00: Loss G: 35.8781
04/20 04:40:00: bpp: 0.3201
04/20 04:40:00: Sum Loss: 36.4618
04/20 04:40:00: Loss (s-m-l): [0.0006, 0.0389, 0.0]
04/20 04:40:00: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9846, 1.0, 0.9846], [1.0, 1.0, 1.0]]
04/20 04:42:56: 
Iteration: 34300
04/20 04:42:56: Running time: 1006.76 min
04/20 04:42:56: Data Loading time: 0.00007 s
04/20 04:42:56: Loss R: 0.0126
04/20 04:42:56: Loss G: 33.5459
04/20 04:42:56: bpp: 0.3233
04/20 04:42:56: Sum Loss: 34.1220
04/20 04:42:56: Loss (s-m-l): [0.0007, 0.0372, 0.0]
04/20 04:42:56: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/20 04:45:56: 
Iteration: 34400
04/20 04:45:56: Running time: 1009.78 min
04/20 04:45:56: Data Loading time: 0.00007 s
04/20 04:45:56: Loss R: 0.0132
04/20 04:45:56: Loss G: 36.3203
04/20 04:45:56: bpp: 0.3189
04/20 04:45:56: Sum Loss: 36.9031
04/20 04:45:56: Loss (s-m-l): [0.0006, 0.0389, 0.0]
04/20 04:45:56: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9844, 1.0, 0.9844], [1.0, 1.0, 1.0]]
04/20 04:48:56: 
Iteration: 34500
04/20 04:48:56: Running time: 1012.76 min
04/20 04:48:56: Data Loading time: 0.00007 s
04/20 04:48:56: Loss R: 0.0129
04/20 04:48:56: Loss G: 36.4383
04/20 04:48:56: bpp: 0.3201
04/20 04:48:56: Sum Loss: 37.0155
04/20 04:48:56: Loss (s-m-l): [0.0006, 0.0379, 0.0]
04/20 04:48:56: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/20 04:51:51: 
Iteration: 34600
04/20 04:51:51: Running time: 1015.69 min
04/20 04:51:51: Data Loading time: 0.00007 s
04/20 04:51:51: Loss R: 0.0127
04/20 04:51:51: Loss G: 34.6832
04/20 04:51:51: bpp: 0.3232
04/20 04:51:51: Sum Loss: 35.2610
04/20 04:51:51: Loss (s-m-l): [0.0006, 0.0376, 0.0]
04/20 04:51:51: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/20 04:54:45: 
Iteration: 34700
04/20 04:54:45: Running time: 1018.58 min
04/20 04:54:45: Data Loading time: 0.00007 s
04/20 04:54:45: Loss R: 0.0127
04/20 04:54:45: Loss G: 38.6318
04/20 04:54:45: bpp: 0.3247
04/20 04:54:45: Sum Loss: 39.2097
04/20 04:54:45: Loss (s-m-l): [0.0006, 0.0373, 0.0]
04/20 04:54:45: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/20 04:57:41: 
Iteration: 34800
04/20 04:57:41: Running time: 1021.52 min
04/20 04:57:41: Data Loading time: 0.00007 s
04/20 04:57:41: Loss R: 0.0126
04/20 04:57:41: Loss G: 36.7903
04/20 04:57:41: bpp: 0.3205
04/20 04:57:41: Sum Loss: 37.3630
04/20 04:57:41: Loss (s-m-l): [0.0006, 0.0372, 0.0]
04/20 04:57:41: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/20 05:00:36: 
Iteration: 34900
04/20 05:00:36: Running time: 1024.43 min
04/20 05:00:36: Data Loading time: 0.00007 s
04/20 05:00:36: Loss R: 0.0132
04/20 05:00:36: Loss G: 36.2663
04/20 05:00:36: bpp: 0.3214
04/20 05:00:36: Sum Loss: 36.8513
04/20 05:00:36: Loss (s-m-l): [0.0007, 0.0389, 0.0]
04/20 05:00:36: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9845, 1.0, 0.9845], [1.0, 1.0, 1.0]]
04/20 05:03:31: 
Iteration: 35000
04/20 05:03:31: Running time: 1027.36 min
04/20 05:03:31: Data Loading time: 0.00007 s
04/20 05:03:31: Loss R: 0.0128
04/20 05:03:31: Loss G: 33.1187
04/20 05:03:31: bpp: 0.3221
04/20 05:03:31: Sum Loss: 33.6960
04/20 05:03:31: Loss (s-m-l): [0.0007, 0.0376, 0.0]
04/20 05:03:31: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/20 05:06:21: 
Iteration: 35100
04/20 05:06:21: Running time: 1030.18 min
04/20 05:06:21: Data Loading time: 0.00007 s
04/20 05:06:21: Loss R: 0.0127
04/20 05:06:21: Loss G: 35.5852
04/20 05:06:21: bpp: 0.3222
04/20 05:06:21: Sum Loss: 36.1616
04/20 05:06:21: Loss (s-m-l): [0.0007, 0.0375, 0.0]
04/20 05:06:21: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/20 05:09:13: 
Iteration: 35200
04/20 05:09:13: Running time: 1033.06 min
04/20 05:09:13: Data Loading time: 0.00007 s
04/20 05:09:13: Loss R: 0.0129
04/20 05:09:13: Loss G: 35.0395
04/20 05:09:13: bpp: 0.3221
04/20 05:09:13: Sum Loss: 35.6202
04/20 05:09:13: Loss (s-m-l): [0.0006, 0.0382, 0.0]
04/20 05:09:13: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9848, 1.0, 0.9848], [1.0, 1.0, 1.0]]
04/20 05:12:08: 
Iteration: 35300
04/20 05:12:08: Running time: 1035.98 min
04/20 05:12:08: Data Loading time: 0.00007 s
04/20 05:12:08: Loss R: 0.0136
04/20 05:12:08: Loss G: 41.0235
04/20 05:12:08: bpp: 0.3194
04/20 05:12:08: Sum Loss: 41.6158
04/20 05:12:08: Loss (s-m-l): [0.0007, 0.0403, 0.0]
04/20 05:12:08: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.984, 1.0, 0.984], [1.0, 1.0, 1.0]]
04/20 05:15:06: 
Iteration: 35400
04/20 05:15:06: Running time: 1038.94 min
04/20 05:15:06: Data Loading time: 0.00007 s
04/20 05:15:06: Loss R: 0.0141
04/20 05:15:06: Loss G: 45.0031
04/20 05:15:06: bpp: 0.3205
04/20 05:15:06: Sum Loss: 45.6059
04/20 05:15:06: Loss (s-m-l): [0.0007, 0.0417, 0.0]
04/20 05:15:06: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9833, 1.0, 0.9833], [1.0, 1.0, 1.0]]
04/20 05:18:02: 
Iteration: 35500
04/20 05:18:02: Running time: 1041.87 min
04/20 05:18:02: Data Loading time: 0.00007 s
04/20 05:18:02: Loss R: 0.0129
04/20 05:18:02: Loss G: 42.6730
04/20 05:18:02: bpp: 0.3221
04/20 05:18:02: Sum Loss: 43.2524
04/20 05:18:02: Loss (s-m-l): [0.0006, 0.038, 0.0]
04/20 05:18:02: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9848, 1.0, 0.9848], [1.0, 1.0, 1.0]]
04/20 05:20:54: 
Iteration: 35600
04/20 05:20:54: Running time: 1044.74 min
04/20 05:20:54: Data Loading time: 0.00007 s
04/20 05:20:54: Loss R: 0.0127
04/20 05:20:54: Loss G: 39.5646
04/20 05:20:54: bpp: 0.3242
04/20 05:20:54: Sum Loss: 40.1436
04/20 05:20:54: Loss (s-m-l): [0.0007, 0.0375, 0.0]
04/20 05:20:54: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/20 05:23:47: 
Iteration: 35700
04/20 05:23:47: Running time: 1047.62 min
04/20 05:23:47: Data Loading time: 0.00007 s
04/20 05:23:47: Loss R: 0.0132
04/20 05:23:47: Loss G: 42.8716
04/20 05:23:47: bpp: 0.3218
04/20 05:23:47: Sum Loss: 43.4575
04/20 05:23:47: Loss (s-m-l): [0.0007, 0.0389, 0.0]
04/20 05:23:47: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9846, 1.0, 0.9846], [1.0, 1.0, 1.0]]
04/20 05:26:39: 
Iteration: 35800
04/20 05:26:39: Running time: 1050.48 min
04/20 05:26:39: Data Loading time: 0.00007 s
04/20 05:26:39: Loss R: 0.0128
04/20 05:26:39: Loss G: 38.0028
04/20 05:26:39: bpp: 0.3216
04/20 05:26:39: Sum Loss: 38.5800
04/20 05:26:39: Loss (s-m-l): [0.0006, 0.0377, 0.0]
04/20 05:26:39: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/20 05:29:35: 
Iteration: 35900
04/20 05:29:35: Running time: 1053.42 min
04/20 05:29:35: Data Loading time: 0.00007 s
04/20 05:29:35: Loss R: 0.0131
04/20 05:29:35: Loss G: 34.9091
04/20 05:29:35: bpp: 0.3227
04/20 05:29:35: Sum Loss: 35.4934
04/20 05:29:35: Loss (s-m-l): [0.0006, 0.0386, 0.0]
04/20 05:29:35: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9846, 1.0, 0.9846], [1.0, 1.0, 1.0]]
04/20 05:32:33: 
Iteration: 36000
04/20 05:32:33: Running time: 1056.38 min
04/20 05:32:33: Data Loading time: 0.00007 s
04/20 05:32:33: Loss R: 0.0130
04/20 05:32:33: Loss G: 35.8791
04/20 05:32:33: bpp: 0.3203
04/20 05:32:33: Sum Loss: 36.4603
04/20 05:32:33: Loss (s-m-l): [0.0007, 0.0385, 0.0]
04/20 05:32:33: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9847, 1.0, 0.9847], [1.0, 1.0, 1.0]]
04/20 05:32:33: 
==========Evaluation: iter 36000==========
04/20 05:32:33: save checkpoints: ckpts/tp/tp36000
04/20 05:32:33: LR: [6.25e-06, 6.25e-06, 6.25e-06]
04/20 05:35:28: 
Iteration: 36100
04/20 05:35:28: Running time: 1059.31 min
04/20 05:35:28: Data Loading time: 0.00007 s
04/20 05:35:28: Loss R: 0.0131
04/20 05:35:28: Loss G: 35.8120
04/20 05:35:28: bpp: 0.3203
04/20 05:35:28: Sum Loss: 36.3934
04/20 05:35:28: Loss (s-m-l): [0.0007, 0.0385, 0.0]
04/20 05:35:28: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9847, 1.0, 0.9847], [1.0, 1.0, 1.0]]
04/20 05:38:26: 
Iteration: 36200
04/20 05:38:26: Running time: 1062.27 min
04/20 05:38:26: Data Loading time: 0.00007 s
04/20 05:38:26: Loss R: 0.0133
04/20 05:38:26: Loss G: 36.4604
04/20 05:38:26: bpp: 0.3233
04/20 05:38:26: Sum Loss: 37.0505
04/20 05:38:26: Loss (s-m-l): [0.0007, 0.0394, 0.0]
04/20 05:38:26: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9842, 1.0, 0.9842], [1.0, 1.0, 1.0]]
04/20 05:41:20: 
Iteration: 36300
04/20 05:41:20: Running time: 1065.17 min
04/20 05:41:20: Data Loading time: 0.00007 s
04/20 05:41:20: Loss R: 0.0126
04/20 05:41:20: Loss G: 39.5032
04/20 05:41:20: bpp: 0.3199
04/20 05:41:20: Sum Loss: 40.0751
04/20 05:41:20: Loss (s-m-l): [0.0006, 0.0372, 0.0]
04/20 05:41:20: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/20 05:44:18: 
Iteration: 36400
04/20 05:44:18: Running time: 1068.14 min
04/20 05:44:18: Data Loading time: 0.00007 s
04/20 05:44:18: Loss R: 0.0129
04/20 05:44:18: Loss G: 36.5599
04/20 05:44:18: bpp: 0.3208
04/20 05:44:18: Sum Loss: 37.1390
04/20 05:44:18: Loss (s-m-l): [0.0006, 0.0381, 0.0]
04/20 05:44:18: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9848, 1.0, 0.9848], [1.0, 1.0, 1.0]]
04/20 05:47:16: 
Iteration: 36500
04/20 05:47:16: Running time: 1071.11 min
04/20 05:47:16: Data Loading time: 0.00007 s
04/20 05:47:16: Loss R: 0.0132
04/20 05:47:16: Loss G: 34.9338
04/20 05:47:16: bpp: 0.3196
04/20 05:47:16: Sum Loss: 35.5168
04/20 05:47:16: Loss (s-m-l): [0.0007, 0.0388, 0.0]
04/20 05:47:16: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9846, 1.0, 0.9846], [1.0, 1.0, 1.0]]
04/20 05:50:15: 
Iteration: 36600
04/20 05:50:15: Running time: 1074.09 min
04/20 05:50:15: Data Loading time: 0.00007 s
04/20 05:50:15: Loss R: 0.0126
04/20 05:50:15: Loss G: 34.5260
04/20 05:50:15: bpp: 0.3208
04/20 05:50:15: Sum Loss: 35.0980
04/20 05:50:15: Loss (s-m-l): [0.0006, 0.037, 0.0]
04/20 05:50:15: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/20 05:53:07: 
Iteration: 36700
04/20 05:53:07: Running time: 1076.95 min
04/20 05:53:07: Data Loading time: 0.00007 s
04/20 05:53:07: Loss R: 0.0126
04/20 05:53:07: Loss G: 33.1671
04/20 05:53:07: bpp: 0.3207
04/20 05:53:07: Sum Loss: 33.7394
04/20 05:53:07: Loss (s-m-l): [0.0006, 0.0371, 0.0]
04/20 05:53:07: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/20 05:55:59: 
Iteration: 36800
04/20 05:55:59: Running time: 1079.81 min
04/20 05:55:59: Data Loading time: 0.00007 s
04/20 05:55:59: Loss R: 0.0122
04/20 05:55:59: Loss G: 34.7158
04/20 05:55:59: bpp: 0.3215
04/20 05:55:59: Sum Loss: 35.2811
04/20 05:55:59: Loss (s-m-l): [0.0006, 0.036, 0.0]
04/20 05:55:59: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9857, 1.0, 0.9857], [1.0, 1.0, 1.0]]
04/20 05:58:54: 
Iteration: 36900
04/20 05:58:54: Running time: 1082.74 min
04/20 05:58:54: Data Loading time: 0.00104 s
04/20 05:58:54: Loss R: 0.0131
04/20 05:58:54: Loss G: 33.6622
04/20 05:58:54: bpp: 0.3208
04/20 05:58:54: Sum Loss: 34.2443
04/20 05:58:54: Loss (s-m-l): [0.0007, 0.0385, 0.0]
04/20 05:58:54: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9847, 1.0, 0.9847], [1.0, 1.0, 1.0]]
04/20 06:01:50: 
Iteration: 37000
04/20 06:01:50: Running time: 1085.67 min
04/20 06:01:50: Data Loading time: 0.00007 s
04/20 06:01:50: Loss R: 0.0135
04/20 06:01:50: Loss G: 37.3336
04/20 06:01:50: bpp: 0.3208
04/20 06:01:50: Sum Loss: 37.9244
04/20 06:01:50: Loss (s-m-l): [0.0007, 0.0398, 0.0]
04/20 06:01:50: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9841, 1.0, 0.9841], [1.0, 1.0, 1.0]]
04/20 06:04:41: 
Iteration: 37100
04/20 06:04:41: Running time: 1088.52 min
04/20 06:04:41: Data Loading time: 0.00007 s
04/20 06:04:41: Loss R: 0.0133
04/20 06:04:41: Loss G: 38.4092
04/20 06:04:41: bpp: 0.3198
04/20 06:04:41: Sum Loss: 38.9945
04/20 06:04:41: Loss (s-m-l): [0.0006, 0.0392, 0.0]
04/20 06:04:41: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9844, 1.0, 0.9844], [1.0, 1.0, 1.0]]
04/20 06:07:35: 
Iteration: 37200
04/20 06:07:35: Running time: 1091.41 min
04/20 06:07:35: Data Loading time: 0.00007 s
04/20 06:07:35: Loss R: 0.0130
04/20 06:07:35: Loss G: 36.6470
04/20 06:07:35: bpp: 0.3233
04/20 06:07:35: Sum Loss: 37.2306
04/20 06:07:35: Loss (s-m-l): [0.0006, 0.0384, 0.0]
04/20 06:07:35: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9846, 1.0, 0.9846], [1.0, 1.0, 1.0]]
04/20 06:10:33: 
Iteration: 37300
04/20 06:10:33: Running time: 1094.39 min
04/20 06:10:33: Data Loading time: 0.00007 s
04/20 06:10:33: Loss R: 0.0127
04/20 06:10:33: Loss G: 36.6278
04/20 06:10:33: bpp: 0.3217
04/20 06:10:33: Sum Loss: 37.2027
04/20 06:10:33: Loss (s-m-l): [0.0006, 0.0374, 0.0]
04/20 06:10:33: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/20 06:13:28: 
Iteration: 37400
04/20 06:13:28: Running time: 1097.30 min
04/20 06:13:28: Data Loading time: 0.00007 s
04/20 06:13:28: Loss R: 0.0130
04/20 06:13:28: Loss G: 37.3101
04/20 06:13:28: bpp: 0.3236
04/20 06:13:28: Sum Loss: 37.8935
04/20 06:13:28: Loss (s-m-l): [0.0006, 0.0383, 0.0]
04/20 06:13:28: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9846, 1.0, 0.9846], [1.0, 1.0, 1.0]]
04/20 06:16:23: 
Iteration: 37500
04/20 06:16:23: Running time: 1100.22 min
04/20 06:16:23: Data Loading time: 0.00007 s
04/20 06:16:23: Loss R: 0.0123
04/20 06:16:23: Loss G: 36.8531
04/20 06:16:23: bpp: 0.3215
04/20 06:16:23: Sum Loss: 37.4206
04/20 06:16:23: Loss (s-m-l): [0.0006, 0.0362, 0.0]
04/20 06:16:23: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9856, 1.0, 0.9856], [1.0, 1.0, 1.0]]
04/20 06:19:18: 
Iteration: 37600
04/20 06:19:18: Running time: 1103.14 min
04/20 06:19:18: Data Loading time: 0.00007 s
04/20 06:19:18: Loss R: 0.0122
04/20 06:19:18: Loss G: 35.4728
04/20 06:19:18: bpp: 0.3218
04/20 06:19:18: Sum Loss: 36.0384
04/20 06:19:18: Loss (s-m-l): [0.0006, 0.0359, 0.0]
04/20 06:19:18: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9857, 1.0, 0.9857], [1.0, 1.0, 1.0]]
04/20 06:22:11: 
Iteration: 37700
04/20 06:22:11: Running time: 1106.01 min
04/20 06:22:11: Data Loading time: 0.00007 s
04/20 06:22:11: Loss R: 0.0129
04/20 06:22:11: Loss G: 34.1775
04/20 06:22:11: bpp: 0.3206
04/20 06:22:11: Sum Loss: 34.7565
04/20 06:22:11: Loss (s-m-l): [0.0006, 0.0381, 0.0]
04/20 06:22:11: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9848, 1.0, 0.9848], [1.0, 1.0, 1.0]]
04/20 06:25:08: 
Iteration: 37800
04/20 06:25:08: Running time: 1108.97 min
04/20 06:25:08: Data Loading time: 0.00007 s
04/20 06:25:08: Loss R: 0.0119
04/20 06:25:08: Loss G: 34.5585
04/20 06:25:08: bpp: 0.3211
04/20 06:25:08: Sum Loss: 35.1179
04/20 06:25:08: Loss (s-m-l): [0.0006, 0.0351, 0.0]
04/20 06:25:08: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9861, 1.0, 0.9861], [1.0, 1.0, 1.0]]
04/20 06:28:03: 
Iteration: 37900
04/20 06:28:03: Running time: 1111.89 min
04/20 06:28:03: Data Loading time: 0.00007 s
04/20 06:28:03: Loss R: 0.0127
04/20 06:28:03: Loss G: 34.1738
04/20 06:28:03: bpp: 0.3193
04/20 06:28:03: Sum Loss: 34.7465
04/20 06:28:03: Loss (s-m-l): [0.0006, 0.0374, 0.0]
04/20 06:28:03: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/20 06:31:03: 
Iteration: 38000
04/20 06:31:03: Running time: 1114.89 min
04/20 06:31:03: Data Loading time: 0.00007 s
04/20 06:31:03: Loss R: 0.0138
04/20 06:31:03: Loss G: 35.6501
04/20 06:31:03: bpp: 0.3187
04/20 06:31:03: Sum Loss: 36.2449
04/20 06:31:03: Loss (s-m-l): [0.0007, 0.0407, 0.0]
04/20 06:31:03: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9838, 1.0, 0.9838], [1.0, 1.0, 1.0]]
04/20 06:31:03: 
==========Evaluation: iter 38000==========
04/20 06:31:03: save checkpoints: ckpts/tp/tp38000
04/20 06:34:03: 
Iteration: 38100
04/20 06:34:03: Running time: 1117.89 min
04/20 06:34:03: Data Loading time: 0.00007 s
04/20 06:34:03: Loss R: 0.0127
04/20 06:34:03: Loss G: 36.1955
04/20 06:34:03: bpp: 0.3216
04/20 06:34:03: Sum Loss: 36.7718
04/20 06:34:03: Loss (s-m-l): [0.0006, 0.0376, 0.0]
04/20 06:34:03: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/20 06:36:57: 
Iteration: 38200
04/20 06:36:57: Running time: 1120.78 min
04/20 06:36:57: Data Loading time: 0.00007 s
04/20 06:36:57: Loss R: 0.0126
04/20 06:36:57: Loss G: 37.6870
04/20 06:36:57: bpp: 0.3228
04/20 06:36:57: Sum Loss: 38.2608
04/20 06:36:57: Loss (s-m-l): [0.0007, 0.037, 0.0]
04/20 06:36:57: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9854, 1.0, 0.9854], [1.0, 1.0, 1.0]]
04/20 06:39:53: 
Iteration: 38300
04/20 06:39:53: Running time: 1123.71 min
04/20 06:39:53: Data Loading time: 0.00007 s
04/20 06:39:53: Loss R: 0.0131
04/20 06:39:53: Loss G: 35.3135
04/20 06:39:53: bpp: 0.3211
04/20 06:39:53: Sum Loss: 35.8966
04/20 06:39:53: Loss (s-m-l): [0.0007, 0.0386, 0.0]
04/20 06:39:53: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9845, 1.0, 0.9845], [1.0, 1.0, 1.0]]
04/20 06:42:50: 
Iteration: 38400
04/20 06:42:50: Running time: 1126.67 min
04/20 06:42:50: Data Loading time: 0.00007 s
04/20 06:42:50: Loss R: 0.0127
04/20 06:42:50: Loss G: 35.4733
04/20 06:42:50: bpp: 0.3212
04/20 06:42:50: Sum Loss: 36.0483
04/20 06:42:50: Loss (s-m-l): [0.0006, 0.0375, 0.0]
04/20 06:42:50: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/20 06:45:45: 
Iteration: 38500
04/20 06:45:45: Running time: 1129.59 min
04/20 06:45:45: Data Loading time: 0.00007 s
04/20 06:45:45: Loss R: 0.0132
04/20 06:45:45: Loss G: 35.7202
04/20 06:45:45: bpp: 0.3217
04/20 06:45:45: Sum Loss: 36.3065
04/20 06:45:45: Loss (s-m-l): [0.0007, 0.039, 0.0]
04/20 06:45:45: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9844, 1.0, 0.9844], [1.0, 1.0, 1.0]]
04/20 06:48:43: 
Iteration: 38600
04/20 06:48:43: Running time: 1132.56 min
04/20 06:48:43: Data Loading time: 0.00007 s
04/20 06:48:43: Loss R: 0.0133
04/20 06:48:43: Loss G: 35.4887
04/20 06:48:43: bpp: 0.3202
04/20 06:48:43: Sum Loss: 36.0744
04/20 06:48:43: Loss (s-m-l): [0.0006, 0.0392, 0.0]
04/20 06:48:43: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9844, 1.0, 0.9844], [1.0, 1.0, 1.0]]
04/20 06:51:37: 
Iteration: 38700
04/20 06:51:37: Running time: 1135.46 min
04/20 06:51:37: Data Loading time: 0.00007 s
04/20 06:51:37: Loss R: 0.0131
04/20 06:51:37: Loss G: 37.4077
04/20 06:51:37: bpp: 0.3184
04/20 06:51:37: Sum Loss: 37.9883
04/20 06:51:37: Loss (s-m-l): [0.0006, 0.0387, 0.0]
04/20 06:51:37: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9846, 1.0, 0.9846], [1.0, 1.0, 1.0]]
04/20 06:54:35: 
Iteration: 38800
04/20 06:54:35: Running time: 1138.41 min
04/20 06:54:35: Data Loading time: 0.00007 s
04/20 06:54:35: Loss R: 0.0124
04/20 06:54:35: Loss G: 36.9966
04/20 06:54:35: bpp: 0.3213
04/20 06:54:35: Sum Loss: 37.5668
04/20 06:54:35: Loss (s-m-l): [0.0006, 0.0367, 0.0]
04/20 06:54:35: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9854, 1.0, 0.9854], [1.0, 1.0, 1.0]]
04/20 06:57:32: 
Iteration: 38900
04/20 06:57:32: Running time: 1141.37 min
04/20 06:57:32: Data Loading time: 0.00007 s
04/20 06:57:32: Loss R: 0.0132
04/20 06:57:32: Loss G: 36.0922
04/20 06:57:32: bpp: 0.3193
04/20 06:57:32: Sum Loss: 36.6757
04/20 06:57:32: Loss (s-m-l): [0.0007, 0.0389, 0.0]
04/20 06:57:32: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9845, 1.0, 0.9845], [1.0, 1.0, 1.0]]
04/20 07:00:25: 
Iteration: 39000
04/20 07:00:25: Running time: 1144.25 min
04/20 07:00:25: Data Loading time: 0.00007 s
04/20 07:00:25: Loss R: 0.0128
04/20 07:00:25: Loss G: 37.6011
04/20 07:00:25: bpp: 0.3208
04/20 07:00:25: Sum Loss: 38.1771
04/20 07:00:25: Loss (s-m-l): [0.0006, 0.0377, 0.0]
04/20 07:00:25: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/20 07:03:17: 
Iteration: 39100
04/20 07:03:17: Running time: 1147.12 min
04/20 07:03:17: Data Loading time: 0.00007 s
04/20 07:03:17: Loss R: 0.0132
04/20 07:03:17: Loss G: 36.1861
04/20 07:03:17: bpp: 0.3238
04/20 07:03:17: Sum Loss: 36.7737
04/20 07:03:17: Loss (s-m-l): [0.0006, 0.0389, 0.0]
04/20 07:03:17: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9843, 1.0, 0.9843], [1.0, 1.0, 1.0]]
04/20 07:06:12: 
Iteration: 39200
04/20 07:06:12: Running time: 1150.03 min
04/20 07:06:12: Data Loading time: 0.00007 s
04/20 07:06:12: Loss R: 0.0126
04/20 07:06:12: Loss G: 36.5323
04/20 07:06:12: bpp: 0.3216
04/20 07:06:12: Sum Loss: 37.1055
04/20 07:06:12: Loss (s-m-l): [0.0007, 0.0371, 0.0]
04/20 07:06:12: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/20 07:09:07: 
Iteration: 39300
04/20 07:09:07: Running time: 1152.96 min
04/20 07:09:07: Data Loading time: 0.00007 s
04/20 07:09:07: Loss R: 0.0128
04/20 07:09:07: Loss G: 34.3712
04/20 07:09:07: bpp: 0.3225
04/20 07:09:07: Sum Loss: 34.9499
04/20 07:09:07: Loss (s-m-l): [0.0006, 0.0378, 0.0]
04/20 07:09:07: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9848, 1.0, 0.9848], [1.0, 1.0, 1.0]]
04/20 07:12:03: 
Iteration: 39400
04/20 07:12:03: Running time: 1155.88 min
04/20 07:12:03: Data Loading time: 0.00007 s
04/20 07:12:03: Loss R: 0.0124
04/20 07:12:03: Loss G: 33.6632
04/20 07:12:03: bpp: 0.3227
04/20 07:12:03: Sum Loss: 34.2334
04/20 07:12:03: Loss (s-m-l): [0.0006, 0.0365, 0.0]
04/20 07:12:03: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/20 07:14:56: 
Iteration: 39500
04/20 07:14:56: Running time: 1158.76 min
04/20 07:14:56: Data Loading time: 0.00007 s
04/20 07:14:56: Loss R: 0.0133
04/20 07:14:56: Loss G: 36.5737
04/20 07:14:56: bpp: 0.3192
04/20 07:14:56: Sum Loss: 37.1580
04/20 07:14:56: Loss (s-m-l): [0.0006, 0.0391, 0.0]
04/20 07:14:56: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9844, 1.0, 0.9844], [1.0, 1.0, 1.0]]
04/20 07:17:53: 
Iteration: 39600
04/20 07:17:53: Running time: 1161.72 min
04/20 07:17:53: Data Loading time: 0.00007 s
04/20 07:17:53: Loss R: 0.0118
04/20 07:17:53: Loss G: 35.4310
04/20 07:17:53: bpp: 0.3218
04/20 07:17:53: Sum Loss: 35.9895
04/20 07:17:53: Loss (s-m-l): [0.0006, 0.0349, 0.0]
04/20 07:17:53: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9862, 1.0, 0.9862], [1.0, 1.0, 1.0]]
04/20 07:20:46: 
Iteration: 39700
04/20 07:20:46: Running time: 1164.60 min
04/20 07:20:46: Data Loading time: 0.00007 s
04/20 07:20:46: Loss R: 0.0129
04/20 07:20:46: Loss G: 34.6363
04/20 07:20:46: bpp: 0.3202
04/20 07:20:46: Sum Loss: 35.2153
04/20 07:20:46: Loss (s-m-l): [0.0006, 0.0382, 0.0]
04/20 07:20:46: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9848, 1.0, 0.9848], [1.0, 1.0, 1.0]]
04/20 07:23:42: 
Iteration: 39800
04/20 07:23:42: Running time: 1167.54 min
04/20 07:23:42: Data Loading time: 0.00007 s
04/20 07:23:42: Loss R: 0.0129
04/20 07:23:42: Loss G: 34.1865
04/20 07:23:42: bpp: 0.3210
04/20 07:23:42: Sum Loss: 34.7653
04/20 07:23:42: Loss (s-m-l): [0.0006, 0.038, 0.0]
04/20 07:23:42: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/20 07:26:38: 
Iteration: 39900
04/20 07:26:38: Running time: 1170.48 min
04/20 07:26:38: Data Loading time: 0.00007 s
04/20 07:26:38: Loss R: 0.0125
04/20 07:26:38: Loss G: 35.1901
04/20 07:26:38: bpp: 0.3210
04/20 07:26:38: Sum Loss: 35.7612
04/20 07:26:38: Loss (s-m-l): [0.0006, 0.0369, 0.0]
04/20 07:26:38: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9854, 1.0, 0.9854], [1.0, 1.0, 1.0]]
04/20 07:29:34: 
Iteration: 40000
04/20 07:29:34: Running time: 1173.40 min
04/20 07:29:34: Data Loading time: 0.00007 s
04/20 07:29:34: Loss R: 0.0132
04/20 07:29:34: Loss G: 35.7615
04/20 07:29:34: bpp: 0.3193
04/20 07:29:34: Sum Loss: 36.3438
04/20 07:29:34: Loss (s-m-l): [0.0006, 0.0388, 0.0]
04/20 07:29:34: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9845, 1.0, 0.9845], [1.0, 1.0, 1.0]]
04/20 07:29:34: 
==========Evaluation: iter 40000==========
04/20 07:29:34: save checkpoints: ckpts/tp/tp40000
04/20 07:32:25: 
Iteration: 40100
04/20 07:32:25: Running time: 1176.25 min
04/20 07:32:25: Data Loading time: 0.00007 s
04/20 07:32:25: Loss R: 0.0128
04/20 07:32:25: Loss G: 36.8756
04/20 07:32:25: bpp: 0.3234
04/20 07:32:25: Sum Loss: 37.4556
04/20 07:32:25: Loss (s-m-l): [0.0007, 0.0378, 0.0]
04/20 07:32:25: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/20 07:35:19: 
Iteration: 40200
04/20 07:35:19: Running time: 1179.15 min
04/20 07:35:19: Data Loading time: 0.00007 s
04/20 07:35:19: Loss R: 0.0127
04/20 07:35:19: Loss G: 36.6401
04/20 07:35:19: bpp: 0.3209
04/20 07:35:19: Sum Loss: 37.2157
04/20 07:35:19: Loss (s-m-l): [0.0006, 0.0376, 0.0]
04/20 07:35:19: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/20 07:38:11: 
Iteration: 40300
04/20 07:38:11: Running time: 1182.03 min
04/20 07:38:11: Data Loading time: 0.00007 s
04/20 07:38:11: Loss R: 0.0124
04/20 07:38:11: Loss G: 33.9517
04/20 07:38:11: bpp: 0.3232
04/20 07:38:11: Sum Loss: 34.5219
04/20 07:38:11: Loss (s-m-l): [0.0006, 0.0364, 0.0]
04/20 07:38:11: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/20 07:41:10: 
Iteration: 40400
04/20 07:41:10: Running time: 1185.00 min
04/20 07:41:10: Data Loading time: 0.00007 s
04/20 07:41:10: Loss R: 0.0128
04/20 07:41:10: Loss G: 36.7388
04/20 07:41:10: bpp: 0.3225
04/20 07:41:10: Sum Loss: 37.3167
04/20 07:41:10: Loss (s-m-l): [0.0006, 0.0377, 0.0]
04/20 07:41:10: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/20 07:44:06: 
Iteration: 40500
04/20 07:44:06: Running time: 1187.94 min
04/20 07:44:06: Data Loading time: 0.00007 s
04/20 07:44:06: Loss R: 0.0132
04/20 07:44:06: Loss G: 37.8286
04/20 07:44:06: bpp: 0.3209
04/20 07:44:06: Sum Loss: 38.4129
04/20 07:44:06: Loss (s-m-l): [0.0007, 0.0388, 0.0]
04/20 07:44:06: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9843, 1.0, 0.9843], [1.0, 1.0, 1.0]]
04/20 07:47:02: 
Iteration: 40600
04/20 07:47:02: Running time: 1190.86 min
04/20 07:47:02: Data Loading time: 0.00007 s
04/20 07:47:02: Loss R: 0.0127
04/20 07:47:02: Loss G: 36.6638
04/20 07:47:02: bpp: 0.3196
04/20 07:47:02: Sum Loss: 37.2383
04/20 07:47:02: Loss (s-m-l): [0.0006, 0.0376, 0.0]
04/20 07:47:02: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/20 07:49:57: 
Iteration: 40700
04/20 07:49:57: Running time: 1193.78 min
04/20 07:49:57: Data Loading time: 0.00007 s
04/20 07:49:57: Loss R: 0.0131
04/20 07:49:57: Loss G: 35.4913
04/20 07:49:57: bpp: 0.3218
04/20 07:49:57: Sum Loss: 36.0746
04/20 07:49:57: Loss (s-m-l): [0.0006, 0.0386, 0.0]
04/20 07:49:57: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9846, 1.0, 0.9846], [1.0, 1.0, 1.0]]
04/20 07:52:52: 
Iteration: 40800
04/20 07:52:52: Running time: 1196.71 min
04/20 07:52:52: Data Loading time: 0.00007 s
04/20 07:52:52: Loss R: 0.0129
04/20 07:52:52: Loss G: 37.5627
04/20 07:52:52: bpp: 0.3197
04/20 07:52:52: Sum Loss: 38.1400
04/20 07:52:52: Loss (s-m-l): [0.0006, 0.038, 0.0]
04/20 07:52:52: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/20 07:55:49: 
Iteration: 40900
04/20 07:55:49: Running time: 1199.66 min
04/20 07:55:49: Data Loading time: 0.00007 s
04/20 07:55:49: Loss R: 0.0121
04/20 07:55:49: Loss G: 36.2982
04/20 07:55:49: bpp: 0.3203
04/20 07:55:49: Sum Loss: 36.8598
04/20 07:55:49: Loss (s-m-l): [0.0006, 0.0356, 0.0]
04/20 07:55:49: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9859, 1.0, 0.9859], [1.0, 1.0, 1.0]]
04/20 07:58:46: 
Iteration: 41000
04/20 07:58:46: Running time: 1202.60 min
04/20 07:58:46: Data Loading time: 0.00009 s
04/20 07:58:46: Loss R: 0.0136
04/20 07:58:46: Loss G: 36.9231
04/20 07:58:46: bpp: 0.3224
04/20 07:58:46: Sum Loss: 37.5167
04/20 07:58:46: Loss (s-m-l): [0.0007, 0.04, 0.0]
04/20 07:58:46: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9839, 1.0, 0.9839], [1.0, 1.0, 1.0]]
04/20 08:01:43: 
Iteration: 41100
04/20 08:01:43: Running time: 1205.55 min
04/20 08:01:43: Data Loading time: 0.00007 s
04/20 08:01:43: Loss R: 0.0127
04/20 08:01:43: Loss G: 35.9115
04/20 08:01:43: bpp: 0.3193
04/20 08:01:43: Sum Loss: 36.4856
04/20 08:01:43: Loss (s-m-l): [0.0006, 0.0376, 0.0]
04/20 08:01:43: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/20 08:04:40: 
Iteration: 41200
04/20 08:04:40: Running time: 1208.50 min
04/20 08:04:40: Data Loading time: 0.00007 s
04/20 08:04:40: Loss R: 0.0132
04/20 08:04:40: Loss G: 36.8736
04/20 08:04:40: bpp: 0.3185
04/20 08:04:40: Sum Loss: 37.4571
04/20 08:04:40: Loss (s-m-l): [0.0006, 0.0391, 0.0]
04/20 08:04:40: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9844, 1.0, 0.9844], [1.0, 1.0, 1.0]]
04/20 08:07:36: 
Iteration: 41300
04/20 08:07:36: Running time: 1211.44 min
04/20 08:07:36: Data Loading time: 0.00007 s
04/20 08:07:36: Loss R: 0.0122
04/20 08:07:36: Loss G: 36.5853
04/20 08:07:36: bpp: 0.3226
04/20 08:07:36: Sum Loss: 37.1522
04/20 08:07:36: Loss (s-m-l): [0.0006, 0.036, 0.0]
04/20 08:07:36: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9858, 1.0, 0.9858], [1.0, 1.0, 1.0]]
04/20 08:10:32: 
Iteration: 41400
04/20 08:10:32: Running time: 1214.37 min
04/20 08:10:32: Data Loading time: 0.00007 s
04/20 08:10:32: Loss R: 0.0123
04/20 08:10:32: Loss G: 35.2846
04/20 08:10:32: bpp: 0.3220
04/20 08:10:32: Sum Loss: 35.8526
04/20 08:10:32: Loss (s-m-l): [0.0006, 0.0363, 0.0]
04/20 08:10:32: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9856, 1.0, 0.9856], [1.0, 1.0, 1.0]]
04/20 08:13:26: 
Iteration: 41500
04/20 08:13:26: Running time: 1217.28 min
04/20 08:13:26: Data Loading time: 0.00007 s
04/20 08:13:26: Loss R: 0.0133
04/20 08:13:26: Loss G: 37.6066
04/20 08:13:26: bpp: 0.3235
04/20 08:13:26: Sum Loss: 38.1971
04/20 08:13:26: Loss (s-m-l): [0.0006, 0.0394, 0.0]
04/20 08:13:26: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9842, 1.0, 0.9842], [1.0, 1.0, 1.0]]
04/20 08:16:23: 
Iteration: 41600
04/20 08:16:23: Running time: 1220.22 min
04/20 08:16:23: Data Loading time: 0.00007 s
04/20 08:16:23: Loss R: 0.0127
04/20 08:16:23: Loss G: 38.1321
04/20 08:16:23: bpp: 0.3190
04/20 08:16:23: Sum Loss: 38.7060
04/20 08:16:23: Loss (s-m-l): [0.0007, 0.0376, 0.0]
04/20 08:16:23: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/20 08:19:19: 
Iteration: 41700
04/20 08:19:19: Running time: 1223.15 min
04/20 08:19:19: Data Loading time: 0.00007 s
04/20 08:19:19: Loss R: 0.0125
04/20 08:19:19: Loss G: 37.3035
04/20 08:19:19: bpp: 0.3220
04/20 08:19:19: Sum Loss: 37.8747
04/20 08:19:19: Loss (s-m-l): [0.0006, 0.0367, 0.0]
04/20 08:19:19: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9854, 1.0, 0.9854], [1.0, 1.0, 1.0]]
04/20 08:22:18: 
Iteration: 41800
04/20 08:22:18: Running time: 1226.13 min
04/20 08:22:18: Data Loading time: 0.00010 s
04/20 08:22:18: Loss R: 0.0124
04/20 08:22:18: Loss G: 35.4603
04/20 08:22:18: bpp: 0.3206
04/20 08:22:18: Sum Loss: 36.0297
04/20 08:22:18: Loss (s-m-l): [0.0006, 0.0367, 0.0]
04/20 08:22:18: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/20 08:25:16: 
Iteration: 41900
04/20 08:25:16: Running time: 1229.10 min
04/20 08:25:16: Data Loading time: 0.00007 s
04/20 08:25:16: Loss R: 0.0126
04/20 08:25:16: Loss G: 33.8475
04/20 08:25:16: bpp: 0.3222
04/20 08:25:16: Sum Loss: 34.4217
04/20 08:25:16: Loss (s-m-l): [0.0007, 0.0372, 0.0]
04/20 08:25:16: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/20 08:28:09: 
Iteration: 42000
04/20 08:28:09: Running time: 1231.98 min
04/20 08:28:09: Data Loading time: 0.00007 s
04/20 08:28:09: Loss R: 0.0123
04/20 08:28:09: Loss G: 34.0935
04/20 08:28:09: bpp: 0.3211
04/20 08:28:09: Sum Loss: 34.6611
04/20 08:28:09: Loss (s-m-l): [0.0006, 0.0364, 0.0]
04/20 08:28:09: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9856, 1.0, 0.9856], [1.0, 1.0, 1.0]]
04/20 08:28:09: 
==========Evaluation: iter 42000==========
04/20 08:28:09: save checkpoints: ckpts/tp/tp42000
04/20 08:28:09: LR: [3.125e-06, 3.125e-06, 3.125e-06]
04/20 08:31:09: 
Iteration: 42100
04/20 08:31:09: Running time: 1234.98 min
04/20 08:31:09: Data Loading time: 0.00007 s
04/20 08:31:09: Loss R: 0.0129
04/20 08:31:09: Loss G: 32.9367
04/20 08:31:09: bpp: 0.3214
04/20 08:31:09: Sum Loss: 33.5167
04/20 08:31:09: Loss (s-m-l): [0.0006, 0.0382, 0.0]
04/20 08:31:09: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9848, 1.0, 0.9848], [1.0, 1.0, 1.0]]
04/20 08:34:03: 
Iteration: 42200
04/20 08:34:03: Running time: 1237.89 min
04/20 08:34:03: Data Loading time: 0.00007 s
04/20 08:34:03: Loss R: 0.0124
04/20 08:34:03: Loss G: 33.0541
04/20 08:34:03: bpp: 0.3192
04/20 08:34:03: Sum Loss: 33.6221
04/20 08:34:03: Loss (s-m-l): [0.0007, 0.0367, 0.0]
04/20 08:34:03: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/20 08:36:59: 
Iteration: 42300
04/20 08:36:59: Running time: 1240.83 min
04/20 08:36:59: Data Loading time: 0.00007 s
04/20 08:36:59: Loss R: 0.0127
04/20 08:36:59: Loss G: 32.4972
04/20 08:36:59: bpp: 0.3203
04/20 08:36:59: Sum Loss: 33.0718
04/20 08:36:59: Loss (s-m-l): [0.0006, 0.0375, 0.0]
04/20 08:36:59: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/20 08:39:54: 
Iteration: 42400
04/20 08:39:54: Running time: 1243.73 min
04/20 08:39:54: Data Loading time: 0.00007 s
04/20 08:39:54: Loss R: 0.0128
04/20 08:39:54: Loss G: 33.7213
04/20 08:39:54: bpp: 0.3209
04/20 08:39:54: Sum Loss: 34.2975
04/20 08:39:54: Loss (s-m-l): [0.0006, 0.0377, 0.0]
04/20 08:39:54: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/20 08:42:47: 
Iteration: 42500
04/20 08:42:47: Running time: 1246.61 min
04/20 08:42:47: Data Loading time: 0.00007 s
04/20 08:42:47: Loss R: 0.0127
04/20 08:42:47: Loss G: 34.3499
04/20 08:42:47: bpp: 0.3226
04/20 08:42:47: Sum Loss: 34.9261
04/20 08:42:47: Loss (s-m-l): [0.0007, 0.0374, 0.0]
04/20 08:42:47: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/20 08:45:39: 
Iteration: 42600
04/20 08:45:39: Running time: 1249.48 min
04/20 08:45:39: Data Loading time: 0.00007 s
04/20 08:45:39: Loss R: 0.0130
04/20 08:45:39: Loss G: 35.7731
04/20 08:45:39: bpp: 0.3218
04/20 08:45:39: Sum Loss: 36.3555
04/20 08:45:39: Loss (s-m-l): [0.0006, 0.0385, 0.0]
04/20 08:45:39: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9846, 1.0, 0.9846], [1.0, 1.0, 1.0]]
04/20 08:48:36: 
Iteration: 42700
04/20 08:48:36: Running time: 1252.43 min
04/20 08:48:36: Data Loading time: 0.00007 s
04/20 08:48:36: Loss R: 0.0131
04/20 08:48:36: Loss G: 37.5223
04/20 08:48:36: bpp: 0.3190
04/20 08:48:36: Sum Loss: 38.1035
04/20 08:48:36: Loss (s-m-l): [0.0006, 0.0387, 0.0]
04/20 08:48:36: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9846, 1.0, 0.9846], [1.0, 1.0, 1.0]]
04/20 08:51:30: 
Iteration: 42800
04/20 08:51:30: Running time: 1255.34 min
04/20 08:51:30: Data Loading time: 0.00007 s
04/20 08:51:30: Loss R: 0.0131
04/20 08:51:30: Loss G: 37.7896
04/20 08:51:30: bpp: 0.3210
04/20 08:51:30: Sum Loss: 38.3733
04/20 08:51:30: Loss (s-m-l): [0.0006, 0.0388, 0.0]
04/20 08:51:30: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9846, 1.0, 0.9846], [1.0, 1.0, 1.0]]
04/20 08:54:23: 
Iteration: 42900
04/20 08:54:23: Running time: 1258.22 min
04/20 08:54:23: Data Loading time: 0.00007 s
04/20 08:54:23: Loss R: 0.0128
04/20 08:54:23: Loss G: 37.7952
04/20 08:54:23: bpp: 0.3209
04/20 08:54:23: Sum Loss: 38.3712
04/20 08:54:23: Loss (s-m-l): [0.0006, 0.0377, 0.0]
04/20 08:54:23: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/20 08:57:19: 
Iteration: 43000
04/20 08:57:19: Running time: 1261.14 min
04/20 08:57:19: Data Loading time: 0.00007 s
04/20 08:57:19: Loss R: 0.0130
04/20 08:57:19: Loss G: 38.7004
04/20 08:57:19: bpp: 0.3241
04/20 08:57:19: Sum Loss: 39.2845
04/20 08:57:19: Loss (s-m-l): [0.0007, 0.0383, 0.0]
04/20 08:57:19: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9846, 1.0, 0.9846], [1.0, 1.0, 1.0]]
04/20 09:00:13: 
Iteration: 43100
04/20 09:00:13: Running time: 1264.06 min
04/20 09:00:13: Data Loading time: 0.00007 s
04/20 09:00:13: Loss R: 0.0129
04/20 09:00:13: Loss G: 39.6343
04/20 09:00:13: bpp: 0.3189
04/20 09:00:13: Sum Loss: 40.2108
04/20 09:00:13: Loss (s-m-l): [0.0006, 0.038, 0.0]
04/20 09:00:13: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/20 09:03:08: 
Iteration: 43200
04/20 09:03:08: Running time: 1266.97 min
04/20 09:03:08: Data Loading time: 0.00007 s
04/20 09:03:08: Loss R: 0.0127
04/20 09:03:08: Loss G: 37.5134
04/20 09:03:08: bpp: 0.3200
04/20 09:03:08: Sum Loss: 38.0876
04/20 09:03:08: Loss (s-m-l): [0.0006, 0.0375, 0.0]
04/20 09:03:08: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/20 09:06:06: 
Iteration: 43300
04/20 09:06:06: Running time: 1269.94 min
04/20 09:06:06: Data Loading time: 0.00007 s
04/20 09:06:06: Loss R: 0.0126
04/20 09:06:06: Loss G: 36.3047
04/20 09:06:06: bpp: 0.3196
04/20 09:06:06: Sum Loss: 36.8761
04/20 09:06:06: Loss (s-m-l): [0.0006, 0.0371, 0.0]
04/20 09:06:06: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/20 09:09:02: 
Iteration: 43400
04/20 09:09:02: Running time: 1272.87 min
04/20 09:09:02: Data Loading time: 0.00009 s
04/20 09:09:02: Loss R: 0.0126
04/20 09:09:02: Loss G: 36.3658
04/20 09:09:02: bpp: 0.3218
04/20 09:09:02: Sum Loss: 36.9387
04/20 09:09:02: Loss (s-m-l): [0.0006, 0.037, 0.0]
04/20 09:09:02: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/20 09:11:59: 
Iteration: 43500
04/20 09:11:59: Running time: 1275.82 min
04/20 09:11:59: Data Loading time: 0.00007 s
04/20 09:11:59: Loss R: 0.0129
04/20 09:11:59: Loss G: 37.5599
04/20 09:11:59: bpp: 0.3208
04/20 09:11:59: Sum Loss: 38.1379
04/20 09:11:59: Loss (s-m-l): [0.0006, 0.0379, 0.0]
04/20 09:11:59: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/20 09:14:59: 
Iteration: 43600
04/20 09:14:59: Running time: 1278.81 min
04/20 09:14:59: Data Loading time: 0.00007 s
04/20 09:14:59: Loss R: 0.0128
04/20 09:14:59: Loss G: 37.0458
04/20 09:14:59: bpp: 0.3200
04/20 09:14:59: Sum Loss: 37.6208
04/20 09:14:59: Loss (s-m-l): [0.0006, 0.0376, 0.0]
04/20 09:14:59: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/20 09:17:56: 
Iteration: 43700
04/20 09:17:56: Running time: 1281.77 min
04/20 09:17:56: Data Loading time: 0.00007 s
04/20 09:17:56: Loss R: 0.0130
04/20 09:17:56: Loss G: 36.8758
04/20 09:17:56: bpp: 0.3225
04/20 09:17:56: Sum Loss: 37.4576
04/20 09:17:56: Loss (s-m-l): [0.0006, 0.0383, 0.0]
04/20 09:17:56: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9847, 1.0, 0.9847], [1.0, 1.0, 1.0]]
04/20 09:20:52: 
Iteration: 43800
04/20 09:20:52: Running time: 1284.71 min
04/20 09:20:52: Data Loading time: 0.00007 s
04/20 09:20:52: Loss R: 0.0128
04/20 09:20:52: Loss G: 35.5211
04/20 09:20:52: bpp: 0.3203
04/20 09:20:52: Sum Loss: 36.0967
04/20 09:20:52: Loss (s-m-l): [0.0006, 0.0377, 0.0]
04/20 09:20:52: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/20 09:23:47: 
Iteration: 43900
04/20 09:23:47: Running time: 1287.62 min
04/20 09:23:47: Data Loading time: 0.00010 s
04/20 09:23:47: Loss R: 0.0121
04/20 09:23:47: Loss G: 36.3290
04/20 09:23:47: bpp: 0.3214
04/20 09:23:47: Sum Loss: 36.8931
04/20 09:23:47: Loss (s-m-l): [0.0006, 0.0358, 0.0]
04/20 09:23:47: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9859, 1.0, 0.9859], [1.0, 1.0, 1.0]]
04/20 09:26:42: 
Iteration: 44000
04/20 09:26:42: Running time: 1290.53 min
04/20 09:26:42: Data Loading time: 0.00007 s
04/20 09:26:42: Loss R: 0.0123
04/20 09:26:42: Loss G: 34.7374
04/20 09:26:42: bpp: 0.3225
04/20 09:26:42: Sum Loss: 35.3060
04/20 09:26:42: Loss (s-m-l): [0.0006, 0.0363, 0.0]
04/20 09:26:42: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/20 09:26:42: 
==========Evaluation: iter 44000==========
04/20 09:26:42: save checkpoints: ckpts/tp/tp44000
04/20 09:29:37: 
Iteration: 44100
04/20 09:29:37: Running time: 1293.46 min
04/20 09:29:37: Data Loading time: 0.00007 s
04/20 09:29:37: Loss R: 0.0132
04/20 09:29:37: Loss G: 35.0957
04/20 09:29:37: bpp: 0.3209
04/20 09:29:37: Sum Loss: 35.6800
04/20 09:29:37: Loss (s-m-l): [0.0007, 0.0388, 0.0]
04/20 09:29:37: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9846, 1.0, 0.9846], [1.0, 1.0, 1.0]]
04/20 09:32:36: 
Iteration: 44200
04/20 09:32:36: Running time: 1296.44 min
04/20 09:32:36: Data Loading time: 0.00007 s
04/20 09:32:36: Loss R: 0.0125
04/20 09:32:36: Loss G: 36.6862
04/20 09:32:36: bpp: 0.3209
04/20 09:32:36: Sum Loss: 37.2563
04/20 09:32:36: Loss (s-m-l): [0.0006, 0.0368, 0.0]
04/20 09:32:36: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/20 09:35:34: 
Iteration: 44300
04/20 09:35:34: Running time: 1299.40 min
04/20 09:35:34: Data Loading time: 0.00007 s
04/20 09:35:34: Loss R: 0.0129
04/20 09:35:34: Loss G: 35.1162
04/20 09:35:34: bpp: 0.3191
04/20 09:35:34: Sum Loss: 35.6934
04/20 09:35:34: Loss (s-m-l): [0.0007, 0.0381, 0.0]
04/20 09:35:34: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/20 09:38:30: 
Iteration: 44400
04/20 09:38:30: Running time: 1302.34 min
04/20 09:38:30: Data Loading time: 0.00007 s
04/20 09:38:30: Loss R: 0.0118
04/20 09:38:30: Loss G: 33.9368
04/20 09:38:30: bpp: 0.3211
04/20 09:38:30: Sum Loss: 34.4935
04/20 09:38:30: Loss (s-m-l): [0.0006, 0.0347, 0.0]
04/20 09:38:30: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9863, 1.0, 0.9863], [1.0, 1.0, 1.0]]
04/20 09:41:29: 
Iteration: 44500
04/20 09:41:29: Running time: 1305.32 min
04/20 09:41:29: Data Loading time: 0.00007 s
04/20 09:41:29: Loss R: 0.0130
04/20 09:41:29: Loss G: 34.9558
04/20 09:41:29: bpp: 0.3204
04/20 09:41:29: Sum Loss: 35.5370
04/20 09:41:29: Loss (s-m-l): [0.0007, 0.0384, 0.0]
04/20 09:41:29: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9846, 1.0, 0.9846], [1.0, 1.0, 1.0]]
04/20 09:44:27: 
Iteration: 44600
04/20 09:44:27: Running time: 1308.28 min
04/20 09:44:27: Data Loading time: 0.00007 s
04/20 09:44:27: Loss R: 0.0127
04/20 09:44:27: Loss G: 36.0973
04/20 09:44:27: bpp: 0.3200
04/20 09:44:27: Sum Loss: 36.6708
04/20 09:44:27: Loss (s-m-l): [0.0006, 0.0374, 0.0]
04/20 09:44:27: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/20 09:47:24: 
Iteration: 44700
04/20 09:47:24: Running time: 1311.24 min
04/20 09:47:24: Data Loading time: 0.00007 s
04/20 09:47:24: Loss R: 0.0126
04/20 09:47:24: Loss G: 35.2701
04/20 09:47:24: bpp: 0.3216
04/20 09:47:24: Sum Loss: 35.8432
04/20 09:47:24: Loss (s-m-l): [0.0006, 0.0371, 0.0]
04/20 09:47:24: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/20 09:50:17: 
Iteration: 44800
04/20 09:50:17: Running time: 1314.13 min
04/20 09:50:17: Data Loading time: 0.00007 s
04/20 09:50:17: Loss R: 0.0130
04/20 09:50:17: Loss G: 35.9787
04/20 09:50:17: bpp: 0.3192
04/20 09:50:17: Sum Loss: 36.5587
04/20 09:50:17: Loss (s-m-l): [0.0006, 0.0385, 0.0]
04/20 09:50:17: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9848, 1.0, 0.9848], [1.0, 1.0, 1.0]]
04/20 09:53:16: 
Iteration: 44900
04/20 09:53:16: Running time: 1317.10 min
04/20 09:53:16: Data Loading time: 0.00007 s
04/20 09:53:16: Loss R: 0.0133
04/20 09:53:16: Loss G: 37.0360
04/20 09:53:16: bpp: 0.3196
04/20 09:53:16: Sum Loss: 37.6210
04/20 09:53:16: Loss (s-m-l): [0.0006, 0.0392, 0.0]
04/20 09:53:16: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9843, 1.0, 0.9843], [1.0, 1.0, 1.0]]
04/20 09:56:08: 
Iteration: 45000
04/20 09:56:08: Running time: 1319.96 min
04/20 09:56:08: Data Loading time: 0.00007 s
04/20 09:56:08: Loss R: 0.0122
04/20 09:56:08: Loss G: 38.0492
04/20 09:56:08: bpp: 0.3225
04/20 09:56:08: Sum Loss: 38.6163
04/20 09:56:08: Loss (s-m-l): [0.0006, 0.0361, 0.0]
04/20 09:56:08: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9857, 1.0, 0.9857], [1.0, 1.0, 1.0]]
04/20 09:59:02: 
Iteration: 45100
04/20 09:59:02: Running time: 1322.87 min
04/20 09:59:02: Data Loading time: 0.00007 s
04/20 09:59:02: Loss R: 0.0128
04/20 09:59:02: Loss G: 37.8529
04/20 09:59:02: bpp: 0.3235
04/20 09:59:02: Sum Loss: 38.4331
04/20 09:59:02: Loss (s-m-l): [0.0007, 0.0378, 0.0]
04/20 09:59:02: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9848, 1.0, 0.9848], [1.0, 1.0, 1.0]]
04/20 10:01:57: 
Iteration: 45200
04/20 10:01:57: Running time: 1325.79 min
04/20 10:01:57: Data Loading time: 0.00007 s
04/20 10:01:57: Loss R: 0.0125
04/20 10:01:57: Loss G: 37.3089
04/20 10:01:57: bpp: 0.3224
04/20 10:01:57: Sum Loss: 37.8810
04/20 10:01:57: Loss (s-m-l): [0.0006, 0.0368, 0.0]
04/20 10:01:57: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/20 10:04:52: 
Iteration: 45300
04/20 10:04:52: Running time: 1328.71 min
04/20 10:04:52: Data Loading time: 0.00007 s
04/20 10:04:52: Loss R: 0.0128
04/20 10:04:52: Loss G: 35.6608
04/20 10:04:52: bpp: 0.3236
04/20 10:04:52: Sum Loss: 36.2395
04/20 10:04:52: Loss (s-m-l): [0.0007, 0.0376, 0.0]
04/20 10:04:52: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/20 10:07:45: 
Iteration: 45400
04/20 10:07:45: Running time: 1331.59 min
04/20 10:07:45: Data Loading time: 0.00007 s
04/20 10:07:45: Loss R: 0.0122
04/20 10:07:45: Loss G: 36.3236
04/20 10:07:45: bpp: 0.3194
04/20 10:07:45: Sum Loss: 36.8866
04/20 10:07:45: Loss (s-m-l): [0.0006, 0.0359, 0.0]
04/20 10:07:45: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9857, 1.0, 0.9857], [1.0, 1.0, 1.0]]
04/20 10:10:41: 
Iteration: 45500
04/20 10:10:41: Running time: 1334.52 min
04/20 10:10:41: Data Loading time: 0.00007 s
04/20 10:10:41: Loss R: 0.0128
04/20 10:10:41: Loss G: 36.5278
04/20 10:10:41: bpp: 0.3201
04/20 10:10:41: Sum Loss: 37.1033
04/20 10:10:41: Loss (s-m-l): [0.0006, 0.0377, 0.0]
04/20 10:10:41: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/20 10:13:39: 
Iteration: 45600
04/20 10:13:39: Running time: 1337.49 min
04/20 10:13:39: Data Loading time: 0.00007 s
04/20 10:13:39: Loss R: 0.0131
04/20 10:13:39: Loss G: 35.8534
04/20 10:13:39: bpp: 0.3224
04/20 10:13:39: Sum Loss: 36.4376
04/20 10:13:39: Loss (s-m-l): [0.0006, 0.0386, 0.0]
04/20 10:13:39: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9846, 1.0, 0.9846], [1.0, 1.0, 1.0]]
04/20 10:16:37: 
Iteration: 45700
04/20 10:16:37: Running time: 1340.45 min
04/20 10:16:37: Data Loading time: 0.00007 s
04/20 10:16:37: Loss R: 0.0129
04/20 10:16:37: Loss G: 36.4478
04/20 10:16:37: bpp: 0.3184
04/20 10:16:37: Sum Loss: 37.0235
04/20 10:16:37: Loss (s-m-l): [0.0006, 0.0379, 0.0]
04/20 10:16:37: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/20 10:19:33: 
Iteration: 45800
04/20 10:19:33: Running time: 1343.39 min
04/20 10:19:33: Data Loading time: 0.00007 s
04/20 10:19:33: Loss R: 0.0132
04/20 10:19:33: Loss G: 35.7250
04/20 10:19:33: bpp: 0.3199
04/20 10:19:33: Sum Loss: 36.3083
04/20 10:19:33: Loss (s-m-l): [0.0007, 0.0388, 0.0]
04/20 10:19:33: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9844, 1.0, 0.9844], [1.0, 1.0, 1.0]]
04/20 10:22:29: 
Iteration: 45900
04/20 10:22:29: Running time: 1346.32 min
04/20 10:22:29: Data Loading time: 0.00007 s
04/20 10:22:29: Loss R: 0.0124
04/20 10:22:29: Loss G: 36.6639
04/20 10:22:29: bpp: 0.3222
04/20 10:22:29: Sum Loss: 37.2339
04/20 10:22:29: Loss (s-m-l): [0.0007, 0.0365, 0.0]
04/20 10:22:29: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9856, 1.0, 0.9856], [1.0, 1.0, 1.0]]
04/20 10:25:27: 
Iteration: 46000
04/20 10:25:27: Running time: 1349.29 min
04/20 10:25:27: Data Loading time: 0.00007 s
04/20 10:25:27: Loss R: 0.0125
04/20 10:25:27: Loss G: 35.8898
04/20 10:25:27: bpp: 0.3218
04/20 10:25:27: Sum Loss: 36.4615
04/20 10:25:27: Loss (s-m-l): [0.0006, 0.0368, 0.0]
04/20 10:25:27: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/20 10:25:27: 
==========Evaluation: iter 46000==========
04/20 10:25:27: save checkpoints: ckpts/tp/tp46000
04/20 10:28:22: 
Iteration: 46100
04/20 10:28:22: Running time: 1352.20 min
04/20 10:28:22: Data Loading time: 0.00007 s
04/20 10:28:22: Loss R: 0.0123
04/20 10:28:22: Loss G: 36.9638
04/20 10:28:22: bpp: 0.3203
04/20 10:28:22: Sum Loss: 37.5303
04/20 10:28:22: Loss (s-m-l): [0.0006, 0.0363, 0.0]
04/20 10:28:22: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9856, 1.0, 0.9856], [1.0, 1.0, 1.0]]
04/20 10:31:17: 
Iteration: 46200
04/20 10:31:17: Running time: 1355.11 min
04/20 10:31:17: Data Loading time: 0.00007 s
04/20 10:31:17: Loss R: 0.0127
04/20 10:31:17: Loss G: 36.5402
04/20 10:31:17: bpp: 0.3232
04/20 10:31:17: Sum Loss: 37.1183
04/20 10:31:17: Loss (s-m-l): [0.0007, 0.0376, 0.0]
04/20 10:31:17: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/20 10:34:13: 
Iteration: 46300
04/20 10:34:13: Running time: 1358.06 min
04/20 10:34:13: Data Loading time: 0.00007 s
04/20 10:34:13: Loss R: 0.0134
04/20 10:34:13: Loss G: 36.3765
04/20 10:34:13: bpp: 0.3193
04/20 10:34:13: Sum Loss: 36.9628
04/20 10:34:13: Loss (s-m-l): [0.0006, 0.0394, 0.0]
04/20 10:34:13: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9843, 1.0, 0.9843], [1.0, 1.0, 1.0]]
04/20 10:37:08: 
Iteration: 46400
04/20 10:37:08: Running time: 1360.97 min
04/20 10:37:08: Data Loading time: 0.00007 s
04/20 10:37:08: Loss R: 0.0128
04/20 10:37:08: Loss G: 35.0805
04/20 10:37:08: bpp: 0.3207
04/20 10:37:08: Sum Loss: 35.6569
04/20 10:37:08: Loss (s-m-l): [0.0006, 0.0378, 0.0]
04/20 10:37:08: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/20 10:40:06: 
Iteration: 46500
04/20 10:40:06: Running time: 1363.93 min
04/20 10:40:06: Data Loading time: 0.00007 s
04/20 10:40:06: Loss R: 0.0130
04/20 10:40:06: Loss G: 36.3624
04/20 10:40:06: bpp: 0.3196
04/20 10:40:06: Sum Loss: 36.9410
04/20 10:40:06: Loss (s-m-l): [0.0007, 0.0382, 0.0]
04/20 10:40:06: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9848, 1.0, 0.9848], [1.0, 1.0, 1.0]]
04/20 10:43:00: 
Iteration: 46600
04/20 10:43:00: Running time: 1366.84 min
04/20 10:43:00: Data Loading time: 0.00007 s
04/20 10:43:00: Loss R: 0.0127
04/20 10:43:00: Loss G: 36.0844
04/20 10:43:00: bpp: 0.3214
04/20 10:43:00: Sum Loss: 36.6600
04/20 10:43:00: Loss (s-m-l): [0.0006, 0.0375, 0.0]
04/20 10:43:00: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/20 10:45:56: 
Iteration: 46700
04/20 10:45:56: Running time: 1369.78 min
04/20 10:45:56: Data Loading time: 0.00007 s
04/20 10:45:56: Loss R: 0.0124
04/20 10:45:56: Loss G: 36.1618
04/20 10:45:56: bpp: 0.3194
04/20 10:45:56: Sum Loss: 36.7298
04/20 10:45:56: Loss (s-m-l): [0.0006, 0.0366, 0.0]
04/20 10:45:56: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9856, 1.0, 0.9856], [1.0, 1.0, 1.0]]
04/20 10:48:51: 
Iteration: 46800
04/20 10:48:51: Running time: 1372.69 min
04/20 10:48:51: Data Loading time: 0.00007 s
04/20 10:48:51: Loss R: 0.0125
04/20 10:48:51: Loss G: 35.6154
04/20 10:48:51: bpp: 0.3214
04/20 10:48:51: Sum Loss: 36.1876
04/20 10:48:51: Loss (s-m-l): [0.0006, 0.037, 0.0]
04/20 10:48:51: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/20 10:51:52: 
Iteration: 46900
04/20 10:51:52: Running time: 1375.70 min
04/20 10:51:52: Data Loading time: 0.00007 s
04/20 10:51:52: Loss R: 0.0128
04/20 10:51:52: Loss G: 36.6803
04/20 10:51:52: bpp: 0.3187
04/20 10:51:52: Sum Loss: 37.2554
04/20 10:51:52: Loss (s-m-l): [0.0007, 0.0378, 0.0]
04/20 10:51:52: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/20 10:54:49: 
Iteration: 47000
04/20 10:54:49: Running time: 1378.65 min
04/20 10:54:49: Data Loading time: 0.00007 s
04/20 10:54:49: Loss R: 0.0126
04/20 10:54:49: Loss G: 36.3605
04/20 10:54:49: bpp: 0.3200
04/20 10:54:49: Sum Loss: 36.9335
04/20 10:54:49: Loss (s-m-l): [0.0006, 0.0373, 0.0]
04/20 10:54:49: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/20 10:57:46: 
Iteration: 47100
04/20 10:57:46: Running time: 1381.60 min
04/20 10:57:46: Data Loading time: 0.00007 s
04/20 10:57:46: Loss R: 0.0123
04/20 10:57:46: Loss G: 35.6565
04/20 10:57:46: bpp: 0.3209
04/20 10:57:46: Sum Loss: 36.2235
04/20 10:57:46: Loss (s-m-l): [0.0006, 0.0363, 0.0]
04/20 10:57:46: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9856, 1.0, 0.9856], [1.0, 1.0, 1.0]]
04/20 11:00:43: 
Iteration: 47200
04/20 11:00:43: Running time: 1384.56 min
04/20 11:00:43: Data Loading time: 0.00007 s
04/20 11:00:43: Loss R: 0.0129
04/20 11:00:43: Loss G: 37.6372
04/20 11:00:43: bpp: 0.3220
04/20 11:00:43: Sum Loss: 38.2173
04/20 11:00:43: Loss (s-m-l): [0.0007, 0.038, 0.0]
04/20 11:00:43: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/20 11:03:41: 
Iteration: 47300
04/20 11:03:41: Running time: 1387.52 min
04/20 11:03:41: Data Loading time: 0.00007 s
04/20 11:03:41: Loss R: 0.0129
04/20 11:03:41: Loss G: 37.0729
04/20 11:03:41: bpp: 0.3217
04/20 11:03:41: Sum Loss: 37.6526
04/20 11:03:41: Loss (s-m-l): [0.0006, 0.0381, 0.0]
04/20 11:03:41: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9847, 1.0, 0.9847], [1.0, 1.0, 1.0]]
04/20 11:06:40: 
Iteration: 47400
04/20 11:06:40: Running time: 1390.51 min
04/20 11:06:40: Data Loading time: 0.00007 s
04/20 11:06:40: Loss R: 0.0123
04/20 11:06:40: Loss G: 35.3211
04/20 11:06:40: bpp: 0.3228
04/20 11:06:40: Sum Loss: 35.8909
04/20 11:06:40: Loss (s-m-l): [0.0006, 0.0364, 0.0]
04/20 11:06:40: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/20 11:09:37: 
Iteration: 47500
04/20 11:09:37: Running time: 1393.45 min
04/20 11:09:37: Data Loading time: 0.00007 s
04/20 11:09:37: Loss R: 0.0132
04/20 11:09:37: Loss G: 36.2465
04/20 11:09:37: bpp: 0.3180
04/20 11:09:37: Sum Loss: 36.8289
04/20 11:09:37: Loss (s-m-l): [0.0007, 0.039, 0.0]
04/20 11:09:37: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9845, 1.0, 0.9845], [1.0, 1.0, 1.0]]
04/20 11:12:36: 
Iteration: 47600
04/20 11:12:36: Running time: 1396.43 min
04/20 11:12:36: Data Loading time: 0.00008 s
04/20 11:12:36: Loss R: 0.0127
04/20 11:12:36: Loss G: 35.4996
04/20 11:12:36: bpp: 0.3172
04/20 11:12:36: Sum Loss: 36.0708
04/20 11:12:36: Loss (s-m-l): [0.0006, 0.0375, 0.0]
04/20 11:12:36: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/20 11:15:31: 
Iteration: 47700
04/20 11:15:31: Running time: 1399.36 min
04/20 11:15:31: Data Loading time: 0.00007 s
04/20 11:15:31: Loss R: 0.0128
04/20 11:15:31: Loss G: 35.2954
04/20 11:15:31: bpp: 0.3211
04/20 11:15:31: Sum Loss: 35.8727
04/20 11:15:31: Loss (s-m-l): [0.0006, 0.0378, 0.0]
04/20 11:15:31: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9848, 1.0, 0.9848], [1.0, 1.0, 1.0]]
04/20 11:18:28: 
Iteration: 47800
04/20 11:18:28: Running time: 1402.30 min
04/20 11:18:28: Data Loading time: 0.00007 s
04/20 11:18:28: Loss R: 0.0122
04/20 11:18:28: Loss G: 35.1847
04/20 11:18:28: bpp: 0.3221
04/20 11:18:28: Sum Loss: 35.7505
04/20 11:18:28: Loss (s-m-l): [0.0006, 0.036, 0.0]
04/20 11:18:28: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9857, 1.0, 0.9857], [1.0, 1.0, 1.0]]
04/20 11:21:26: 
Iteration: 47900
04/20 11:21:26: Running time: 1405.26 min
04/20 11:21:26: Data Loading time: 0.00007 s
04/20 11:21:26: Loss R: 0.0128
04/20 11:21:26: Loss G: 35.6877
04/20 11:21:26: bpp: 0.3206
04/20 11:21:26: Sum Loss: 36.2633
04/20 11:21:26: Loss (s-m-l): [0.0007, 0.0376, 0.0]
04/20 11:21:26: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/20 11:24:22: 
Iteration: 48000
04/20 11:24:22: Running time: 1408.20 min
04/20 11:24:22: Data Loading time: 0.00007 s
04/20 11:24:22: Loss R: 0.0126
04/20 11:24:22: Loss G: 35.1695
04/20 11:24:22: bpp: 0.3226
04/20 11:24:22: Sum Loss: 35.7448
04/20 11:24:22: Loss (s-m-l): [0.0006, 0.0373, 0.0]
04/20 11:24:22: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/20 11:24:22: 
==========Evaluation: iter 48000==========
04/20 11:24:22: save checkpoints: ckpts/tp/tp48000
04/20 11:24:22: LR: [1.5625e-06, 1.5625e-06, 1.5625e-06]
04/20 11:27:19: 
Iteration: 48100
04/20 11:27:19: Running time: 1411.15 min
04/20 11:27:19: Data Loading time: 0.00007 s
04/20 11:27:19: Loss R: 0.0130
04/20 11:27:19: Loss G: 36.3269
04/20 11:27:19: bpp: 0.3187
04/20 11:27:19: Sum Loss: 36.9062
04/20 11:27:19: Loss (s-m-l): [0.0006, 0.0385, 0.0]
04/20 11:27:19: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9847, 1.0, 0.9847], [1.0, 1.0, 1.0]]
04/20 11:30:13: 
Iteration: 48200
04/20 11:30:13: Running time: 1414.05 min
04/20 11:30:13: Data Loading time: 0.00007 s
04/20 11:30:13: Loss R: 0.0121
04/20 11:30:13: Loss G: 35.3827
04/20 11:30:13: bpp: 0.3235
04/20 11:30:13: Sum Loss: 35.9479
04/20 11:30:13: Loss (s-m-l): [0.0006, 0.0357, 0.0]
04/20 11:30:13: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9859, 1.0, 0.9859], [1.0, 1.0, 1.0]]
04/20 11:33:16: 
Iteration: 48300
04/20 11:33:16: Running time: 1417.10 min
04/20 11:33:16: Data Loading time: 0.00007 s
04/20 11:33:16: Loss R: 0.0134
04/20 11:33:16: Loss G: 36.4388
04/20 11:33:16: bpp: 0.3191
04/20 11:33:16: Sum Loss: 37.0250
04/20 11:33:16: Loss (s-m-l): [0.0007, 0.0394, 0.0]
04/20 11:33:16: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9844, 1.0, 0.9844], [1.0, 1.0, 1.0]]
04/20 11:36:08: 
Iteration: 48400
04/20 11:36:08: Running time: 1419.97 min
04/20 11:36:08: Data Loading time: 0.00007 s
04/20 11:36:08: Loss R: 0.0128
04/20 11:36:08: Loss G: 36.8591
04/20 11:36:08: bpp: 0.3215
04/20 11:36:08: Sum Loss: 37.4364
04/20 11:36:08: Loss (s-m-l): [0.0006, 0.0377, 0.0]
04/20 11:36:08: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/20 11:39:03: 
Iteration: 48500
04/20 11:39:03: Running time: 1422.89 min
04/20 11:39:03: Data Loading time: 0.00007 s
04/20 11:39:03: Loss R: 0.0121
04/20 11:39:03: Loss G: 37.8993
04/20 11:39:03: bpp: 0.3208
04/20 11:39:03: Sum Loss: 38.4625
04/20 11:39:03: Loss (s-m-l): [0.0006, 0.0358, 0.0]
04/20 11:39:03: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9858, 1.0, 0.9858], [1.0, 1.0, 1.0]]
04/20 11:41:59: 
Iteration: 48600
04/20 11:41:59: Running time: 1425.83 min
04/20 11:41:59: Data Loading time: 0.00007 s
04/20 11:41:59: Loss R: 0.0132
04/20 11:41:59: Loss G: 35.6619
04/20 11:41:59: bpp: 0.3212
04/20 11:41:59: Sum Loss: 36.2466
04/20 11:41:59: Loss (s-m-l): [0.0006, 0.0389, 0.0]
04/20 11:41:59: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9845, 1.0, 0.9845], [1.0, 1.0, 1.0]]
04/20 11:44:55: 
Iteration: 48700
04/20 11:44:55: Running time: 1428.75 min
04/20 11:44:55: Data Loading time: 0.00007 s
04/20 11:44:55: Loss R: 0.0127
04/20 11:44:55: Loss G: 35.8960
04/20 11:44:55: bpp: 0.3236
04/20 11:44:55: Sum Loss: 36.4727
04/20 11:44:55: Loss (s-m-l): [0.0006, 0.0374, 0.0]
04/20 11:44:55: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/20 11:47:51: 
Iteration: 48800
04/20 11:47:51: Running time: 1431.68 min
04/20 11:47:51: Data Loading time: 0.00007 s
04/20 11:47:51: Loss R: 0.0123
04/20 11:47:51: Loss G: 36.1645
04/20 11:47:51: bpp: 0.3200
04/20 11:47:51: Sum Loss: 36.7304
04/20 11:47:51: Loss (s-m-l): [0.0006, 0.0363, 0.0]
04/20 11:47:51: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9856, 1.0, 0.9856], [1.0, 1.0, 1.0]]
04/20 11:50:45: 
Iteration: 48900
04/20 11:50:45: Running time: 1434.59 min
04/20 11:50:45: Data Loading time: 0.00007 s
04/20 11:50:45: Loss R: 0.0128
04/20 11:50:45: Loss G: 37.0611
04/20 11:50:45: bpp: 0.3211
04/20 11:50:45: Sum Loss: 37.6380
04/20 11:50:45: Loss (s-m-l): [0.0006, 0.0377, 0.0]
04/20 11:50:45: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9848, 1.0, 0.9848], [1.0, 1.0, 1.0]]
04/20 11:53:40: 
Iteration: 49000
04/20 11:53:40: Running time: 1437.50 min
04/20 11:53:40: Data Loading time: 0.00007 s
04/20 11:53:40: Loss R: 0.0126
04/20 11:53:40: Loss G: 36.7555
04/20 11:53:40: bpp: 0.3188
04/20 11:53:40: Sum Loss: 37.3261
04/20 11:53:40: Loss (s-m-l): [0.0006, 0.0371, 0.0]
04/20 11:53:40: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/20 11:56:34: 
Iteration: 49100
04/20 11:56:34: Running time: 1440.40 min
04/20 11:56:34: Data Loading time: 0.00007 s
04/20 11:56:34: Loss R: 0.0127
04/20 11:56:34: Loss G: 35.1037
04/20 11:56:34: bpp: 0.3208
04/20 11:56:34: Sum Loss: 35.6787
04/20 11:56:34: Loss (s-m-l): [0.0006, 0.0375, 0.0]
04/20 11:56:34: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/20 11:59:32: 
Iteration: 49200
04/20 11:59:32: Running time: 1443.37 min
04/20 11:59:32: Data Loading time: 0.00007 s
04/20 11:59:32: Loss R: 0.0124
04/20 11:59:32: Loss G: 34.8729
04/20 11:59:32: bpp: 0.3202
04/20 11:59:32: Sum Loss: 35.4410
04/20 11:59:32: Loss (s-m-l): [0.0006, 0.0365, 0.0]
04/20 11:59:32: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9856, 1.0, 0.9856], [1.0, 1.0, 1.0]]
04/20 12:02:31: 
Iteration: 49300
04/20 12:02:31: Running time: 1446.35 min
04/20 12:02:31: Data Loading time: 0.00007 s
04/20 12:02:31: Loss R: 0.0128
04/20 12:02:31: Loss G: 34.9828
04/20 12:02:31: bpp: 0.3213
04/20 12:02:31: Sum Loss: 35.5606
04/20 12:02:31: Loss (s-m-l): [0.0006, 0.0378, 0.0]
04/20 12:02:31: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9848, 1.0, 0.9848], [1.0, 1.0, 1.0]]
04/20 12:05:29: 
Iteration: 49400
04/20 12:05:29: Running time: 1449.32 min
04/20 12:05:29: Data Loading time: 0.00007 s
04/20 12:05:29: Loss R: 0.0128
04/20 12:05:29: Loss G: 35.1310
04/20 12:05:29: bpp: 0.3201
04/20 12:05:29: Sum Loss: 35.7067
04/20 12:05:29: Loss (s-m-l): [0.0006, 0.0377, 0.0]
04/20 12:05:29: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/20 12:08:24: 
Iteration: 49500
04/20 12:08:24: Running time: 1452.24 min
04/20 12:08:24: Data Loading time: 0.00007 s
04/20 12:08:24: Loss R: 0.0124
04/20 12:08:24: Loss G: 36.2040
04/20 12:08:24: bpp: 0.3214
04/20 12:08:24: Sum Loss: 36.7743
04/20 12:08:24: Loss (s-m-l): [0.0006, 0.0367, 0.0]
04/20 12:08:24: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9854, 1.0, 0.9854], [1.0, 1.0, 1.0]]
04/20 12:11:22: 
Iteration: 49600
04/20 12:11:22: Running time: 1455.21 min
04/20 12:11:22: Data Loading time: 0.00007 s
04/20 12:11:22: Loss R: 0.0128
04/20 12:11:22: Loss G: 35.8880
04/20 12:11:22: bpp: 0.3203
04/20 12:11:22: Sum Loss: 36.4651
04/20 12:11:22: Loss (s-m-l): [0.0007, 0.0379, 0.0]
04/20 12:11:22: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/20 12:14:18: 
Iteration: 49700
04/20 12:14:18: Running time: 1458.14 min
04/20 12:14:18: Data Loading time: 0.00007 s
04/20 12:14:18: Loss R: 0.0126
04/20 12:14:18: Loss G: 36.1493
04/20 12:14:18: bpp: 0.3213
04/20 12:14:18: Sum Loss: 36.7228
04/20 12:14:18: Loss (s-m-l): [0.0006, 0.0372, 0.0]
04/20 12:14:18: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/20 12:17:15: 
Iteration: 49800
04/20 12:17:15: Running time: 1461.09 min
04/20 12:17:15: Data Loading time: 0.00007 s
04/20 12:17:15: Loss R: 0.0122
04/20 12:17:15: Loss G: 34.9619
04/20 12:17:15: bpp: 0.3238
04/20 12:17:15: Sum Loss: 35.5294
04/20 12:17:15: Loss (s-m-l): [0.0006, 0.0359, 0.0]
04/20 12:17:15: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9856, 1.0, 0.9856], [1.0, 1.0, 1.0]]
04/20 12:20:12: 
Iteration: 49900
04/20 12:20:12: Running time: 1464.03 min
04/20 12:20:12: Data Loading time: 0.00007 s
04/20 12:20:12: Loss R: 0.0129
04/20 12:20:12: Loss G: 37.3867
04/20 12:20:12: bpp: 0.3198
04/20 12:20:12: Sum Loss: 37.9644
04/20 12:20:12: Loss (s-m-l): [0.0006, 0.038, 0.0]
04/20 12:20:12: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/20 12:23:10: 
Iteration: 50000
04/20 12:23:10: Running time: 1467.00 min
04/20 12:23:10: Data Loading time: 0.00007 s
04/20 12:23:10: Loss R: 0.0129
04/20 12:23:10: Loss G: 35.7973
04/20 12:23:10: bpp: 0.3218
04/20 12:23:10: Sum Loss: 36.3768
04/20 12:23:10: Loss (s-m-l): [0.0006, 0.0381, 0.0]
04/20 12:23:10: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9846, 1.0, 0.9846], [1.0, 1.0, 1.0]]
04/20 12:23:10: 
==========Evaluation: iter 50000==========
04/20 12:23:10: save checkpoints: ckpts/tp/tp50000
04/20 12:26:07: 
Iteration: 50100
04/20 12:26:07: Running time: 1469.96 min
04/20 12:26:07: Data Loading time: 0.00007 s
04/20 12:26:07: Loss R: 0.0128
04/20 12:26:07: Loss G: 36.6063
04/20 12:26:07: bpp: 0.3230
04/20 12:26:07: Sum Loss: 37.1844
04/20 12:26:07: Loss (s-m-l): [0.0007, 0.0376, 0.0]
04/20 12:26:07: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/20 12:29:03: 
Iteration: 50200
04/20 12:29:03: Running time: 1472.88 min
04/20 12:29:03: Data Loading time: 0.00007 s
04/20 12:29:03: Loss R: 0.0128
04/20 12:29:03: Loss G: 37.1409
04/20 12:29:03: bpp: 0.3193
04/20 12:29:03: Sum Loss: 37.7152
04/20 12:29:03: Loss (s-m-l): [0.0007, 0.0376, 0.0]
04/20 12:29:03: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/20 12:32:00: 
Iteration: 50300
04/20 12:32:00: Running time: 1475.83 min
04/20 12:32:00: Data Loading time: 0.00007 s
04/20 12:32:00: Loss R: 0.0124
04/20 12:32:00: Loss G: 36.2242
04/20 12:32:00: bpp: 0.3219
04/20 12:32:00: Sum Loss: 36.7934
04/20 12:32:00: Loss (s-m-l): [0.0006, 0.0365, 0.0]
04/20 12:32:00: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9854, 1.0, 0.9854], [1.0, 1.0, 1.0]]
04/20 12:34:56: 
Iteration: 50400
04/20 12:34:56: Running time: 1478.77 min
04/20 12:34:56: Data Loading time: 0.00007 s
04/20 12:34:56: Loss R: 0.0128
04/20 12:34:56: Loss G: 35.9375
04/20 12:34:56: bpp: 0.3221
04/20 12:34:56: Sum Loss: 36.5153
04/20 12:34:56: Loss (s-m-l): [0.0006, 0.0377, 0.0]
04/20 12:34:56: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9848, 1.0, 0.9848], [1.0, 1.0, 1.0]]
04/20 12:37:54: 
Iteration: 50500
04/20 12:37:54: Running time: 1481.73 min
04/20 12:37:54: Data Loading time: 0.00007 s
04/20 12:37:54: Loss R: 0.0126
04/20 12:37:54: Loss G: 37.2791
04/20 12:37:54: bpp: 0.3224
04/20 12:37:54: Sum Loss: 37.8531
04/20 12:37:54: Loss (s-m-l): [0.0007, 0.0371, 0.0]
04/20 12:37:54: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9854, 1.0, 0.9854], [1.0, 1.0, 1.0]]
04/20 12:40:51: 
Iteration: 50600
04/20 12:40:51: Running time: 1484.68 min
04/20 12:40:51: Data Loading time: 0.00007 s
04/20 12:40:51: Loss R: 0.0128
04/20 12:40:51: Loss G: 36.0148
04/20 12:40:51: bpp: 0.3191
04/20 12:40:51: Sum Loss: 36.5901
04/20 12:40:51: Loss (s-m-l): [0.0006, 0.0378, 0.0]
04/20 12:40:51: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/20 12:43:47: 
Iteration: 50700
04/20 12:43:47: Running time: 1487.62 min
04/20 12:43:47: Data Loading time: 0.00007 s
04/20 12:43:47: Loss R: 0.0128
04/20 12:43:47: Loss G: 36.8535
04/20 12:43:47: bpp: 0.3219
04/20 12:43:47: Sum Loss: 37.4318
04/20 12:43:47: Loss (s-m-l): [0.0006, 0.0378, 0.0]
04/20 12:43:47: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/20 12:46:41: 
Iteration: 50800
04/20 12:46:41: Running time: 1490.51 min
04/20 12:46:41: Data Loading time: 0.00007 s
04/20 12:46:41: Loss R: 0.0126
04/20 12:46:41: Loss G: 36.2081
04/20 12:46:41: bpp: 0.3193
04/20 12:46:41: Sum Loss: 36.7790
04/20 12:46:41: Loss (s-m-l): [0.0006, 0.0371, 0.0]
04/20 12:46:41: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/20 12:49:39: 
Iteration: 50900
04/20 12:49:39: Running time: 1493.49 min
04/20 12:49:39: Data Loading time: 0.00012 s
04/20 12:49:39: Loss R: 0.0120
04/20 12:49:39: Loss G: 35.6564
04/20 12:49:39: bpp: 0.3213
04/20 12:49:39: Sum Loss: 36.2176
04/20 12:49:39: Loss (s-m-l): [0.0006, 0.0353, 0.0]
04/20 12:49:39: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9859, 1.0, 0.9859], [1.0, 1.0, 1.0]]
04/20 12:52:36: 
Iteration: 51000
04/20 12:52:36: Running time: 1496.44 min
04/20 12:52:36: Data Loading time: 0.00007 s
04/20 12:52:36: Loss R: 0.0126
04/20 12:52:36: Loss G: 35.2877
04/20 12:52:36: bpp: 0.3216
04/20 12:52:36: Sum Loss: 35.8618
04/20 12:52:36: Loss (s-m-l): [0.0007, 0.0372, 0.0]
04/20 12:52:36: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/20 12:55:37: 
Iteration: 51100
04/20 12:55:37: Running time: 1499.45 min
04/20 12:55:37: Data Loading time: 0.00007 s
04/20 12:55:37: Loss R: 0.0131
04/20 12:55:37: Loss G: 35.6323
04/20 12:55:37: bpp: 0.3184
04/20 12:55:37: Sum Loss: 36.2117
04/20 12:55:37: Loss (s-m-l): [0.0006, 0.0385, 0.0]
04/20 12:55:37: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9847, 1.0, 0.9847], [1.0, 1.0, 1.0]]
04/20 12:58:31: 
Iteration: 51200
04/20 12:58:31: Running time: 1502.36 min
04/20 12:58:31: Data Loading time: 0.00007 s
04/20 12:58:31: Loss R: 0.0127
04/20 12:58:31: Loss G: 34.5175
04/20 12:58:31: bpp: 0.3207
04/20 12:58:31: Sum Loss: 35.0923
04/20 12:58:31: Loss (s-m-l): [0.0006, 0.0375, 0.0]
04/20 12:58:31: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/20 13:01:28: 
Iteration: 51300
04/20 13:01:28: Running time: 1505.31 min
04/20 13:01:28: Data Loading time: 0.00007 s
04/20 13:01:28: Loss R: 0.0125
04/20 13:01:28: Loss G: 36.7927
04/20 13:01:28: bpp: 0.3223
04/20 13:01:28: Sum Loss: 37.3656
04/20 13:01:28: Loss (s-m-l): [0.0006, 0.037, 0.0]
04/20 13:01:28: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/20 13:04:30: 
Iteration: 51400
04/20 13:04:30: Running time: 1508.34 min
04/20 13:04:30: Data Loading time: 0.00007 s
04/20 13:04:30: Loss R: 0.0130
04/20 13:04:30: Loss G: 36.8884
04/20 13:04:30: bpp: 0.3179
04/20 13:04:30: Sum Loss: 37.4663
04/20 13:04:30: Loss (s-m-l): [0.0006, 0.0384, 0.0]
04/20 13:04:30: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/20 13:07:26: 
Iteration: 51500
04/20 13:07:26: Running time: 1511.27 min
04/20 13:07:26: Data Loading time: 0.00007 s
04/20 13:07:26: Loss R: 0.0127
04/20 13:07:26: Loss G: 35.6307
04/20 13:07:26: bpp: 0.3248
04/20 13:07:26: Sum Loss: 36.2085
04/20 13:07:26: Loss (s-m-l): [0.0006, 0.0373, 0.0]
04/20 13:07:26: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/20 13:10:23: 
Iteration: 51600
04/20 13:10:23: Running time: 1514.21 min
04/20 13:10:23: Data Loading time: 0.00007 s
04/20 13:10:23: Loss R: 0.0125
04/20 13:10:23: Loss G: 37.8695
04/20 13:10:23: bpp: 0.3193
04/20 13:10:23: Sum Loss: 38.4397
04/20 13:10:23: Loss (s-m-l): [0.0006, 0.037, 0.0]
04/20 13:10:23: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/20 13:13:22: 
Iteration: 51700
04/20 13:13:22: Running time: 1517.20 min
04/20 13:13:22: Data Loading time: 0.00007 s
04/20 13:13:22: Loss R: 0.0129
04/20 13:13:22: Loss G: 37.2392
04/20 13:13:22: bpp: 0.3196
04/20 13:13:22: Sum Loss: 37.8162
04/20 13:13:22: Loss (s-m-l): [0.0006, 0.038, 0.0]
04/20 13:13:22: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9848, 1.0, 0.9848], [1.0, 1.0, 1.0]]
04/20 13:16:18: 
Iteration: 51800
04/20 13:16:18: Running time: 1520.13 min
04/20 13:16:18: Data Loading time: 0.00007 s
04/20 13:16:18: Loss R: 0.0122
04/20 13:16:18: Loss G: 36.5166
04/20 13:16:18: bpp: 0.3189
04/20 13:16:18: Sum Loss: 37.0786
04/20 13:16:18: Loss (s-m-l): [0.0006, 0.0359, 0.0]
04/20 13:16:18: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9858, 1.0, 0.9858], [1.0, 1.0, 1.0]]
04/20 13:19:14: 
Iteration: 51900
04/20 13:19:14: Running time: 1523.07 min
04/20 13:19:14: Data Loading time: 0.00007 s
04/20 13:19:14: Loss R: 0.0130
04/20 13:19:14: Loss G: 36.1329
04/20 13:19:14: bpp: 0.3204
04/20 13:19:14: Sum Loss: 36.7140
04/20 13:19:14: Loss (s-m-l): [0.0007, 0.0384, 0.0]
04/20 13:19:14: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9847, 1.0, 0.9847], [1.0, 1.0, 1.0]]
04/20 13:22:10: 
Iteration: 52000
04/20 13:22:10: Running time: 1526.00 min
04/20 13:22:10: Data Loading time: 0.00007 s
04/20 13:22:10: Loss R: 0.0123
04/20 13:22:10: Loss G: 35.3969
04/20 13:22:10: bpp: 0.3218
04/20 13:22:10: Sum Loss: 35.9654
04/20 13:22:10: Loss (s-m-l): [0.0006, 0.0364, 0.0]
04/20 13:22:10: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9854, 1.0, 0.9854], [1.0, 1.0, 1.0]]
04/20 13:22:10: 
==========Evaluation: iter 52000==========
04/20 13:22:10: save checkpoints: ckpts/tp/tp52000
04/20 13:25:13: 
Iteration: 52100
04/20 13:25:13: Running time: 1529.06 min
04/20 13:25:13: Data Loading time: 0.00007 s
04/20 13:25:13: Loss R: 0.0129
04/20 13:25:13: Loss G: 36.0447
04/20 13:25:13: bpp: 0.3185
04/20 13:25:13: Sum Loss: 36.6206
04/20 13:25:13: Loss (s-m-l): [0.0007, 0.038, 0.0]
04/20 13:25:13: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/20 13:28:08: 
Iteration: 52200
04/20 13:28:08: Running time: 1531.97 min
04/20 13:28:08: Data Loading time: 0.00007 s
04/20 13:28:08: Loss R: 0.0125
04/20 13:28:08: Loss G: 36.2764
04/20 13:28:08: bpp: 0.3216
04/20 13:28:08: Sum Loss: 36.8475
04/20 13:28:08: Loss (s-m-l): [0.0006, 0.0368, 0.0]
04/20 13:28:08: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9854, 1.0, 0.9854], [1.0, 1.0, 1.0]]
04/20 13:31:06: 
Iteration: 52300
04/20 13:31:06: Running time: 1534.94 min
04/20 13:31:06: Data Loading time: 0.00007 s
04/20 13:31:06: Loss R: 0.0125
04/20 13:31:06: Loss G: 36.6459
04/20 13:31:06: bpp: 0.3198
04/20 13:31:06: Sum Loss: 37.2162
04/20 13:31:06: Loss (s-m-l): [0.0006, 0.037, 0.0]
04/20 13:31:06: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/20 13:34:01: 
Iteration: 52400
04/20 13:34:01: Running time: 1537.85 min
04/20 13:34:01: Data Loading time: 0.00007 s
04/20 13:34:01: Loss R: 0.0125
04/20 13:34:01: Loss G: 36.0054
04/20 13:34:01: bpp: 0.3238
04/20 13:34:01: Sum Loss: 36.5796
04/20 13:34:01: Loss (s-m-l): [0.0006, 0.0369, 0.0]
04/20 13:34:01: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/20 13:36:58: 
Iteration: 52500
04/20 13:36:58: Running time: 1540.81 min
04/20 13:36:58: Data Loading time: 0.00007 s
04/20 13:36:58: Loss R: 0.0128
04/20 13:36:58: Loss G: 35.8509
04/20 13:36:58: bpp: 0.3201
04/20 13:36:58: Sum Loss: 36.4270
04/20 13:36:58: Loss (s-m-l): [0.0006, 0.0378, 0.0]
04/20 13:36:58: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/20 13:39:55: 
Iteration: 52600
04/20 13:39:55: Running time: 1543.76 min
04/20 13:39:55: Data Loading time: 0.00007 s
04/20 13:39:55: Loss R: 0.0130
04/20 13:39:55: Loss G: 35.0491
04/20 13:39:55: bpp: 0.3208
04/20 13:39:55: Sum Loss: 35.6291
04/20 13:39:55: Loss (s-m-l): [0.0007, 0.0382, 0.0]
04/20 13:39:55: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9848, 1.0, 0.9848], [1.0, 1.0, 1.0]]
04/20 13:42:52: 
Iteration: 52700
04/20 13:42:52: Running time: 1546.70 min
04/20 13:42:52: Data Loading time: 0.00007 s
04/20 13:42:52: Loss R: 0.0127
04/20 13:42:52: Loss G: 35.5674
04/20 13:42:52: bpp: 0.3214
04/20 13:42:52: Sum Loss: 36.1435
04/20 13:42:52: Loss (s-m-l): [0.0006, 0.0376, 0.0]
04/20 13:42:52: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/20 13:45:46: 
Iteration: 52800
04/20 13:45:46: Running time: 1549.61 min
04/20 13:45:46: Data Loading time: 0.00007 s
04/20 13:45:46: Loss R: 0.0127
04/20 13:45:46: Loss G: 35.9763
04/20 13:45:46: bpp: 0.3201
04/20 13:45:46: Sum Loss: 36.5502
04/20 13:45:46: Loss (s-m-l): [0.0006, 0.0374, 0.0]
04/20 13:45:46: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/20 13:48:41: 
Iteration: 52900
04/20 13:48:41: Running time: 1552.53 min
04/20 13:48:41: Data Loading time: 0.00007 s
04/20 13:48:41: Loss R: 0.0124
04/20 13:48:41: Loss G: 35.9342
04/20 13:48:41: bpp: 0.3215
04/20 13:48:41: Sum Loss: 36.5030
04/20 13:48:41: Loss (s-m-l): [0.0006, 0.0365, 0.0]
04/20 13:48:41: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/20 13:51:39: 
Iteration: 53000
04/20 13:51:39: Running time: 1555.49 min
04/20 13:51:39: Data Loading time: 0.00007 s
04/20 13:51:39: Loss R: 0.0127
04/20 13:51:39: Loss G: 35.7939
04/20 13:51:39: bpp: 0.3202
04/20 13:51:39: Sum Loss: 36.3681
04/20 13:51:39: Loss (s-m-l): [0.0006, 0.0375, 0.0]
04/20 13:51:39: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/20 13:54:41: 
Iteration: 53100
04/20 13:54:41: Running time: 1558.51 min
04/20 13:54:41: Data Loading time: 0.00007 s
04/20 13:54:41: Loss R: 0.0131
04/20 13:54:41: Loss G: 35.9166
04/20 13:54:41: bpp: 0.3236
04/20 13:54:41: Sum Loss: 36.5012
04/20 13:54:41: Loss (s-m-l): [0.0006, 0.0385, 0.0]
04/20 13:54:41: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9845, 1.0, 0.9845], [1.0, 1.0, 1.0]]
04/20 13:57:41: 
Iteration: 53200
04/20 13:57:41: Running time: 1561.52 min
04/20 13:57:41: Data Loading time: 0.00007 s
04/20 13:57:41: Loss R: 0.0125
04/20 13:57:41: Loss G: 37.2093
04/20 13:57:41: bpp: 0.3203
04/20 13:57:41: Sum Loss: 37.7798
04/20 13:57:41: Loss (s-m-l): [0.0006, 0.0369, 0.0]
04/20 13:57:41: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9854, 1.0, 0.9854], [1.0, 1.0, 1.0]]
04/20 14:00:37: 
Iteration: 53300
04/20 14:00:37: Running time: 1564.45 min
04/20 14:00:37: Data Loading time: 0.00010 s
04/20 14:00:37: Loss R: 0.0126
04/20 14:00:37: Loss G: 37.4245
04/20 14:00:37: bpp: 0.3212
04/20 14:00:37: Sum Loss: 37.9970
04/20 14:00:37: Loss (s-m-l): [0.0006, 0.0371, 0.0]
04/20 14:00:37: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/20 14:03:35: 
Iteration: 53400
04/20 14:03:35: Running time: 1567.41 min
04/20 14:03:35: Data Loading time: 0.00007 s
04/20 14:03:35: Loss R: 0.0130
04/20 14:03:35: Loss G: 37.2934
04/20 14:03:35: bpp: 0.3184
04/20 14:03:35: Sum Loss: 37.8709
04/20 14:03:35: Loss (s-m-l): [0.0006, 0.0382, 0.0]
04/20 14:03:35: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9847, 1.0, 0.9847], [1.0, 1.0, 1.0]]
04/20 14:06:29: 
Iteration: 53500
04/20 14:06:29: Running time: 1570.32 min
04/20 14:06:29: Data Loading time: 0.00007 s
04/20 14:06:29: Loss R: 0.0124
04/20 14:06:29: Loss G: 37.5913
04/20 14:06:29: bpp: 0.3219
04/20 14:06:29: Sum Loss: 38.1604
04/20 14:06:29: Loss (s-m-l): [0.0006, 0.0365, 0.0]
04/20 14:06:29: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/20 14:09:28: 
Iteration: 53600
04/20 14:09:28: Running time: 1573.29 min
04/20 14:09:28: Data Loading time: 0.00007 s
04/20 14:09:28: Loss R: 0.0123
04/20 14:09:28: Loss G: 36.2832
04/20 14:09:28: bpp: 0.3212
04/20 14:09:28: Sum Loss: 36.8494
04/20 14:09:28: Loss (s-m-l): [0.0006, 0.0362, 0.0]
04/20 14:09:28: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9856, 1.0, 0.9856], [1.0, 1.0, 1.0]]
04/20 14:12:28: 
Iteration: 53700
04/20 14:12:28: Running time: 1576.31 min
04/20 14:12:28: Data Loading time: 0.00007 s
04/20 14:12:28: Loss R: 0.0130
04/20 14:12:28: Loss G: 37.2792
04/20 14:12:28: bpp: 0.3185
04/20 14:12:28: Sum Loss: 37.8575
04/20 14:12:28: Loss (s-m-l): [0.0006, 0.0383, 0.0]
04/20 14:12:28: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/20 14:15:22: 
Iteration: 53800
04/20 14:15:22: Running time: 1579.21 min
04/20 14:15:22: Data Loading time: 0.00007 s
04/20 14:15:22: Loss R: 0.0125
04/20 14:15:22: Loss G: 36.3956
04/20 14:15:22: bpp: 0.3223
04/20 14:15:22: Sum Loss: 36.9682
04/20 14:15:22: Loss (s-m-l): [0.0006, 0.0369, 0.0]
04/20 14:15:22: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/20 14:18:18: 
Iteration: 53900
04/20 14:18:18: Running time: 1582.13 min
04/20 14:18:18: Data Loading time: 0.00009 s
04/20 14:18:18: Loss R: 0.0126
04/20 14:18:18: Loss G: 37.1043
04/20 14:18:18: bpp: 0.3224
04/20 14:18:18: Sum Loss: 37.6784
04/20 14:18:18: Loss (s-m-l): [0.0006, 0.0371, 0.0]
04/20 14:18:18: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/20 14:21:13: 
Iteration: 54000
04/20 14:21:13: Running time: 1585.06 min
04/20 14:21:13: Data Loading time: 0.00007 s
04/20 14:21:13: Loss R: 0.0125
04/20 14:21:13: Loss G: 37.5424
04/20 14:21:13: bpp: 0.3202
04/20 14:21:13: Sum Loss: 38.1125
04/20 14:21:13: Loss (s-m-l): [0.0006, 0.0369, 0.0]
04/20 14:21:13: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9854, 1.0, 0.9854], [1.0, 1.0, 1.0]]
04/20 14:21:13: 
==========Evaluation: iter 54000==========
04/20 14:21:13: save checkpoints: ckpts/tp/tp54000
04/20 14:21:13: LR: [7.8125e-07, 7.8125e-07, 7.8125e-07]
04/20 14:24:07: 
Iteration: 54100
04/20 14:24:07: Running time: 1587.96 min
04/20 14:24:07: Data Loading time: 0.00007 s
04/20 14:24:07: Loss R: 0.0126
04/20 14:24:07: Loss G: 38.3890
04/20 14:24:07: bpp: 0.3169
04/20 14:24:07: Sum Loss: 38.9581
04/20 14:24:07: Loss (s-m-l): [0.0007, 0.0371, 0.0]
04/20 14:24:07: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/20 14:27:04: 
Iteration: 54200
04/20 14:27:04: Running time: 1590.90 min
04/20 14:27:04: Data Loading time: 0.00007 s
04/20 14:27:04: Loss R: 0.0126
04/20 14:27:04: Loss G: 36.1607
04/20 14:27:04: bpp: 0.3246
04/20 14:27:04: Sum Loss: 36.7370
04/20 14:27:04: Loss (s-m-l): [0.0006, 0.0371, 0.0]
04/20 14:27:04: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/20 14:30:03: 
Iteration: 54300
04/20 14:30:03: Running time: 1593.88 min
04/20 14:30:03: Data Loading time: 0.00007 s
04/20 14:30:03: Loss R: 0.0130
04/20 14:30:03: Loss G: 36.4179
04/20 14:30:03: bpp: 0.3181
04/20 14:30:03: Sum Loss: 36.9953
04/20 14:30:03: Loss (s-m-l): [0.0007, 0.0382, 0.0]
04/20 14:30:03: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/20 14:33:00: 
Iteration: 54400
04/20 14:33:00: Running time: 1596.84 min
04/20 14:33:00: Data Loading time: 0.00007 s
04/20 14:33:00: Loss R: 0.0126
04/20 14:33:00: Loss G: 35.3842
04/20 14:33:00: bpp: 0.3226
04/20 14:33:00: Sum Loss: 35.9589
04/20 14:33:00: Loss (s-m-l): [0.0007, 0.0372, 0.0]
04/20 14:33:00: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/20 14:35:53: 
Iteration: 54500
04/20 14:35:53: Running time: 1599.72 min
04/20 14:35:53: Data Loading time: 0.00007 s
04/20 14:35:53: Loss R: 0.0128
04/20 14:35:53: Loss G: 35.8598
04/20 14:35:53: bpp: 0.3230
04/20 14:35:53: Sum Loss: 36.4379
04/20 14:35:53: Loss (s-m-l): [0.0006, 0.0376, 0.0]
04/20 14:35:53: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/20 14:38:51: 
Iteration: 54600
04/20 14:38:51: Running time: 1602.68 min
04/20 14:38:51: Data Loading time: 0.00007 s
04/20 14:38:51: Loss R: 0.0129
04/20 14:38:51: Loss G: 36.1182
04/20 14:38:51: bpp: 0.3204
04/20 14:38:51: Sum Loss: 36.6965
04/20 14:38:51: Loss (s-m-l): [0.0007, 0.038, 0.0]
04/20 14:38:51: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/20 14:41:51: 
Iteration: 54700
04/20 14:41:51: Running time: 1605.68 min
04/20 14:41:51: Data Loading time: 0.00007 s
04/20 14:41:51: Loss R: 0.0130
04/20 14:41:51: Loss G: 37.1696
04/20 14:41:51: bpp: 0.3168
04/20 14:41:51: Sum Loss: 37.7461
04/20 14:41:51: Loss (s-m-l): [0.0006, 0.0383, 0.0]
04/20 14:41:51: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9848, 1.0, 0.9848], [1.0, 1.0, 1.0]]
04/20 14:44:44: 
Iteration: 54800
04/20 14:44:44: Running time: 1608.57 min
04/20 14:44:44: Data Loading time: 0.00007 s
04/20 14:44:44: Loss R: 0.0126
04/20 14:44:44: Loss G: 36.2177
04/20 14:44:44: bpp: 0.3220
04/20 14:44:44: Sum Loss: 36.7912
04/20 14:44:44: Loss (s-m-l): [0.0006, 0.0371, 0.0]
04/20 14:44:44: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/20 14:47:40: 
Iteration: 54900
04/20 14:47:40: Running time: 1611.50 min
04/20 14:47:40: Data Loading time: 0.00007 s
04/20 14:47:40: Loss R: 0.0127
04/20 14:47:40: Loss G: 35.8909
04/20 14:47:40: bpp: 0.3212
04/20 14:47:40: Sum Loss: 36.4659
04/20 14:47:40: Loss (s-m-l): [0.0006, 0.0375, 0.0]
04/20 14:47:40: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/20 14:50:34: 
Iteration: 55000
04/20 14:50:34: Running time: 1614.41 min
04/20 14:50:34: Data Loading time: 0.00007 s
04/20 14:50:34: Loss R: 0.0122
04/20 14:50:34: Loss G: 37.2375
04/20 14:50:34: bpp: 0.3202
04/20 14:50:34: Sum Loss: 37.8020
04/20 14:50:34: Loss (s-m-l): [0.0006, 0.036, 0.0]
04/20 14:50:34: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9857, 1.0, 0.9857], [1.0, 1.0, 1.0]]
04/20 14:53:28: 
Iteration: 55100
04/20 14:53:28: Running time: 1617.31 min
04/20 14:53:28: Data Loading time: 0.00007 s
04/20 14:53:28: Loss R: 0.0128
04/20 14:53:28: Loss G: 37.3650
04/20 14:53:28: bpp: 0.3198
04/20 14:53:28: Sum Loss: 37.9405
04/20 14:53:28: Loss (s-m-l): [0.0006, 0.0377, 0.0]
04/20 14:53:28: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/20 14:56:24: 
Iteration: 55200
04/20 14:56:24: Running time: 1620.23 min
04/20 14:56:24: Data Loading time: 0.00007 s
04/20 14:56:24: Loss R: 0.0129
04/20 14:56:24: Loss G: 37.0861
04/20 14:56:24: bpp: 0.3197
04/20 14:56:24: Sum Loss: 37.6628
04/20 14:56:24: Loss (s-m-l): [0.0007, 0.0379, 0.0]
04/20 14:56:24: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/20 14:59:12: 
Iteration: 55300
04/20 14:59:12: Running time: 1623.04 min
04/20 14:59:12: Data Loading time: 0.00007 s
04/20 14:59:12: Loss R: 0.0123
04/20 14:59:12: Loss G: 37.0218
04/20 14:59:12: bpp: 0.3220
04/20 14:59:12: Sum Loss: 37.5902
04/20 14:59:12: Loss (s-m-l): [0.0006, 0.0363, 0.0]
04/20 14:59:12: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9856, 1.0, 0.9856], [1.0, 1.0, 1.0]]
04/20 15:02:02: 
Iteration: 55400
04/20 15:02:02: Running time: 1625.86 min
04/20 15:02:02: Data Loading time: 0.00007 s
04/20 15:02:02: Loss R: 0.0125
04/20 15:02:02: Loss G: 36.6794
04/20 15:02:02: bpp: 0.3218
04/20 15:02:02: Sum Loss: 37.2509
04/20 15:02:02: Loss (s-m-l): [0.0006, 0.0368, 0.0]
04/20 15:02:02: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9854, 1.0, 0.9854], [1.0, 1.0, 1.0]]
04/20 15:04:52: 
Iteration: 55500
04/20 15:04:52: Running time: 1628.70 min
04/20 15:04:52: Data Loading time: 0.00007 s
04/20 15:04:52: Loss R: 0.0127
04/20 15:04:52: Loss G: 35.7151
04/20 15:04:52: bpp: 0.3229
04/20 15:04:52: Sum Loss: 36.2915
04/20 15:04:52: Loss (s-m-l): [0.0006, 0.0374, 0.0]
04/20 15:04:52: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/20 15:07:46: 
Iteration: 55600
04/20 15:07:46: Running time: 1631.61 min
04/20 15:07:46: Data Loading time: 0.00008 s
04/20 15:07:46: Loss R: 0.0127
04/20 15:07:46: Loss G: 36.1453
04/20 15:07:46: bpp: 0.3195
04/20 15:07:46: Sum Loss: 36.7182
04/20 15:07:46: Loss (s-m-l): [0.0006, 0.0374, 0.0]
04/20 15:07:46: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/20 15:10:44: 
Iteration: 55700
04/20 15:10:44: Running time: 1634.57 min
04/20 15:10:44: Data Loading time: 0.00008 s
04/20 15:10:44: Loss R: 0.0127
04/20 15:10:44: Loss G: 36.3026
04/20 15:10:44: bpp: 0.3212
04/20 15:10:44: Sum Loss: 36.8773
04/20 15:10:44: Loss (s-m-l): [0.0007, 0.0374, 0.0]
04/20 15:10:44: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/20 15:13:45: 
Iteration: 55800
04/20 15:13:45: Running time: 1637.58 min
04/20 15:13:45: Data Loading time: 0.00015 s
04/20 15:13:45: Loss R: 0.0126
04/20 15:13:45: Loss G: 36.0930
04/20 15:13:45: bpp: 0.3235
04/20 15:13:45: Sum Loss: 36.6689
04/20 15:13:45: Loss (s-m-l): [0.0007, 0.0372, 0.0]
04/20 15:13:45: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/20 15:16:42: 
Iteration: 55900
04/20 15:16:42: Running time: 1640.54 min
04/20 15:16:42: Data Loading time: 0.00007 s
04/20 15:16:42: Loss R: 0.0123
04/20 15:16:42: Loss G: 36.7440
04/20 15:16:42: bpp: 0.3192
04/20 15:16:42: Sum Loss: 37.3097
04/20 15:16:42: Loss (s-m-l): [0.0006, 0.0364, 0.0]
04/20 15:16:42: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9857, 1.0, 0.9857], [1.0, 1.0, 1.0]]
04/20 15:19:33: 
Iteration: 56000
04/20 15:19:33: Running time: 1643.38 min
04/20 15:19:33: Data Loading time: 0.00007 s
04/20 15:19:33: Loss R: 0.0127
04/20 15:19:33: Loss G: 35.7540
04/20 15:19:33: bpp: 0.3205
04/20 15:19:33: Sum Loss: 36.3292
04/20 15:19:33: Loss (s-m-l): [0.0007, 0.0375, 0.0]
04/20 15:19:33: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/20 15:19:33: 
==========Evaluation: iter 56000==========
04/20 15:19:33: save checkpoints: ckpts/tp/tp56000
04/20 15:22:30: 
Iteration: 56100
04/20 15:22:30: Running time: 1646.34 min
04/20 15:22:30: Data Loading time: 0.00007 s
04/20 15:22:30: Loss R: 0.0132
04/20 15:22:30: Loss G: 36.7839
04/20 15:22:30: bpp: 0.3196
04/20 15:22:30: Sum Loss: 37.3672
04/20 15:22:30: Loss (s-m-l): [0.0006, 0.0389, 0.0]
04/20 15:22:30: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9843, 1.0, 0.9843], [1.0, 1.0, 1.0]]
04/20 15:25:22: 
Iteration: 56200
04/20 15:25:22: Running time: 1649.20 min
04/20 15:25:22: Data Loading time: 0.00007 s
04/20 15:25:22: Loss R: 0.0125
04/20 15:25:22: Loss G: 36.4962
04/20 15:25:22: bpp: 0.3210
04/20 15:25:22: Sum Loss: 37.0664
04/20 15:25:22: Loss (s-m-l): [0.0006, 0.0368, 0.0]
04/20 15:25:22: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/20 15:28:16: 
Iteration: 56300
04/20 15:28:16: Running time: 1652.09 min
04/20 15:28:16: Data Loading time: 0.00007 s
04/20 15:28:16: Loss R: 0.0123
04/20 15:28:16: Loss G: 35.1456
04/20 15:28:16: bpp: 0.3238
04/20 15:28:16: Sum Loss: 35.7164
04/20 15:28:16: Loss (s-m-l): [0.0006, 0.0364, 0.0]
04/20 15:28:16: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/20 21:27:44: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=200000, init_ckpt='', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/20 21:27:44: Device:cuda
04/20 21:27:44: Files length: 24641
04/20 21:27:44: Files length: 4
04/20 21:27:48: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/20 21:27:48: Random initialization.
04/20 21:27:48: LR: [0.0008, 0.0008, 0.0008]
04/20 21:31:40: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=200000, init_ckpt='', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/20 21:31:40: Device:cuda
04/20 21:31:40: Files length: 24641
04/20 21:31:40: Files length: 4
04/20 21:31:43: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/20 21:31:43: Random initialization.
04/20 21:31:43: LR: [0.0008, 0.0008, 0.0008]
04/20 21:33:57: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=200000, init_ckpt='', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/20 21:33:57: Device:cuda
04/20 21:33:57: Files length: 24641
04/20 21:33:57: Files length: 4
04/20 21:34:00: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/20 21:34:00: Random initialization.
04/20 21:34:00: LR: [0.0008, 0.0008, 0.0008]
04/20 21:37:23: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=200000, init_ckpt='', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/20 21:37:23: Device:cuda
04/20 21:37:23: Files length: 24641
04/20 21:37:23: Files length: 4
04/20 21:37:26: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/20 21:37:26: Random initialization.
04/20 21:37:26: LR: [0.0008, 0.0008, 0.0008]
04/20 21:40:35: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=200000, init_ckpt='', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/20 21:40:35: Device:cuda
04/20 21:40:35: Files length: 24641
04/20 21:40:35: Files length: 4
04/20 21:40:38: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/20 21:40:38: Random initialization.
04/20 21:40:38: LR: [0.0008, 0.0008, 0.0008]
04/20 21:41:44: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=200000, init_ckpt='', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/20 21:41:44: Device:cuda
04/20 21:41:45: Files length: 24641
04/20 21:41:45: Files length: 4
04/20 21:41:47: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/20 21:41:47: Random initialization.
04/20 21:41:47: LR: [0.0008, 0.0008, 0.0008]
04/20 21:55:29: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=200000, init_ckpt='', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/20 21:55:29: Device:cuda
04/20 21:55:29: Files length: 24641
04/20 21:55:29: Files length: 4
04/20 21:55:32: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/20 21:55:32: Random initialization.
04/20 21:55:32: LR: [0.0008, 0.0008, 0.0008]
04/20 21:55:51: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=200000, init_ckpt='', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/20 21:55:51: Device:cuda
04/20 21:55:51: Files length: 24641
04/20 21:55:51: Files length: 4
04/20 21:55:53: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/20 21:55:53: Random initialization.
04/20 21:55:53: LR: [0.0008, 0.0008, 0.0008]
04/20 21:58:33: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=200000, init_ckpt='', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/20 21:58:33: Device:cuda
04/20 21:58:33: Files length: 24641
04/20 21:58:33: Files length: 4
04/20 21:58:36: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/20 21:58:36: Random initialization.
04/20 21:58:36: LR: [0.0008, 0.0008, 0.0008]
04/20 22:02:21: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=200000, init_ckpt='', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/20 22:02:21: Device:cuda
04/20 22:02:21: Files length: 24641
04/20 22:02:21: Files length: 4
04/20 22:02:24: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/20 22:02:24: Random initialization.
04/20 22:02:24: LR: [0.0008, 0.0008, 0.0008]
04/20 22:04:50: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=200000, init_ckpt='', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/20 22:04:50: Device:cuda
04/20 22:04:50: Files length: 24641
04/20 22:04:50: Files length: 4
04/20 22:04:53: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/20 22:04:53: Random initialization.
04/20 22:04:53: LR: [0.0008, 0.0008, 0.0008]
04/20 22:34:13: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=164600, init_ckpt='', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/20 22:34:13: Device:cuda
04/20 22:34:13: Files length: 24641
04/20 22:34:13: Files length: 4
04/20 22:34:15: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/20 22:34:15: Random initialization.
04/20 22:34:15: LR: [0.0008, 0.0008, 0.0008]
04/20 22:34:53: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=164600, init_ckpt='', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/20 22:34:53: Device:cuda
04/20 22:34:53: Files length: 24641
04/20 22:34:53: Files length: 4
04/20 22:34:56: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/20 22:34:56: Random initialization.
04/20 22:34:56: LR: [0.0008, 0.0008, 0.0008]
04/20 22:49:04: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=164600, init_ckpt='', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/20 22:49:04: Device:cuda
04/20 22:49:05: Files length: 24641
04/20 22:49:05: Files length: 4
04/20 22:49:07: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/20 22:49:07: Random initialization.
04/20 22:49:07: LR: [0.0008, 0.0008, 0.0008]
