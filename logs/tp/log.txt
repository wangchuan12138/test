04/20 22:53:04: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=164600, init_ckpt='', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/20 22:53:04: Device:cuda
04/20 22:53:04: Files length: 24641
04/20 22:53:04: Files length: 4
04/20 22:53:07: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/20 22:53:07: Random initialization.
04/20 22:53:07: LR: [0.0008, 0.0008, 0.0008]
04/20 22:55:55: 
Iteration: 100
04/20 22:55:55: Running time: 2.80 min
04/20 22:55:55: Data Loading time: 0.00007 s
04/20 22:55:55: Loss R: 0.2182
04/20 22:55:55: Loss G: 518.1327
04/20 22:55:55: bpp: 0.9650
04/20 22:55:55: Sum Loss: 523.4620
04/20 22:55:55: Loss (s-m-l): [0.1747, 0.4291, 0.0508]
04/20 22:55:55: Metrics (s-m-l): [[0.9356, 1.0, 0.9356], [0.8285, 1.0, 0.8285], [1.0, 1.0, 1.0]]
04/20 22:58:49: 
Iteration: 200
04/20 22:58:49: Running time: 5.69 min
04/20 22:58:49: Data Loading time: 0.00007 s
04/20 22:58:49: Loss R: 0.1064
04/20 22:58:49: Loss G: 817.3932
04/20 22:58:49: bpp: 0.8013
04/20 22:58:49: Sum Loss: 820.3237
04/20 22:58:49: Loss (s-m-l): [0.0392, 0.2801, 0.0]
04/20 22:58:49: Metrics (s-m-l): [[0.9862, 1.0, 0.9862], [0.8834, 1.0, 0.8834], [1.0, 1.0, 1.0]]
04/20 23:01:47: 
Iteration: 300
04/20 23:01:47: Running time: 8.66 min
04/20 23:01:47: Data Loading time: 0.00007 s
04/20 23:01:47: Loss R: 0.0866
04/20 23:01:47: Loss G: 785.4342
04/20 23:01:47: bpp: 0.6816
04/20 23:01:47: Sum Loss: 787.8467
04/20 23:01:47: Loss (s-m-l): [0.0242, 0.2354, 0.0001]
04/20 23:01:47: Metrics (s-m-l): [[0.9917, 1.0, 0.9917], [0.902, 1.0, 0.902], [1.0, 1.0, 1.0]]
04/20 23:04:44: 
Iteration: 400
04/20 23:04:44: Running time: 11.61 min
04/20 23:04:44: Data Loading time: 0.00007 s
04/20 23:04:44: Loss R: 0.0715
04/20 23:04:44: Loss G: 744.4315
04/20 23:04:44: bpp: 0.6091
04/20 23:04:44: Sum Loss: 746.4711
04/20 23:04:44: Loss (s-m-l): [0.0158, 0.1987, 0.0]
04/20 23:04:44: Metrics (s-m-l): [[0.9946, 1.0, 0.9946], [0.918, 1.0, 0.918], [1.0, 1.0, 1.0]]
04/20 23:07:40: 
Iteration: 500
04/20 23:07:40: Running time: 14.55 min
04/20 23:07:40: Data Loading time: 0.00009 s
04/20 23:07:40: Loss R: 0.0642
04/20 23:07:40: Loss G: 708.5542
04/20 23:07:40: bpp: 0.5591
04/20 23:07:40: Sum Loss: 710.3965
04/20 23:07:40: Loss (s-m-l): [0.0116, 0.1809, 0.0]
04/20 23:07:40: Metrics (s-m-l): [[0.9961, 1.0, 0.9961], [0.9259, 1.0, 0.9259], [1.0, 1.0, 1.0]]
04/20 23:10:43: 
Iteration: 600
04/20 23:10:43: Running time: 17.61 min
04/20 23:10:43: Data Loading time: 0.00007 s
04/20 23:10:43: Loss R: 0.0592
04/20 23:10:43: Loss G: 716.2426
04/20 23:10:43: bpp: 0.5276
04/20 23:10:43: Sum Loss: 717.9542
04/20 23:10:43: Loss (s-m-l): [0.0095, 0.1681, 0.0]
04/20 23:10:43: Metrics (s-m-l): [[0.9968, 1.0, 0.9968], [0.9314, 1.0, 0.9314], [1.0, 1.0, 1.0]]
04/20 23:13:42: 
Iteration: 700
04/20 23:13:42: Running time: 20.58 min
04/20 23:13:42: Data Loading time: 0.00007 s
04/20 23:13:42: Loss R: 0.0569
04/20 23:13:42: Loss G: 668.7799
04/20 23:13:42: bpp: 0.4987
04/20 23:13:42: Sum Loss: 670.4168
04/20 23:13:42: Loss (s-m-l): [0.0084, 0.1624, 0.0]
04/20 23:13:42: Metrics (s-m-l): [[0.9973, 1.0, 0.9973], [0.9339, 1.0, 0.9339], [1.0, 1.0, 1.0]]
04/20 23:16:37: 
Iteration: 800
04/20 23:16:37: Running time: 23.50 min
04/20 23:16:37: Data Loading time: 0.00007 s
04/20 23:16:37: Loss R: 0.0526
04/20 23:16:37: Loss G: 648.3107
04/20 23:16:37: bpp: 0.4789
04/20 23:16:37: Sum Loss: 649.8416
04/20 23:16:37: Loss (s-m-l): [0.0068, 0.151, 0.0]
04/20 23:16:37: Metrics (s-m-l): [[0.9978, 1.0, 0.9978], [0.9383, 1.0, 0.9383], [1.0, 1.0, 1.0]]
04/20 23:19:34: 
Iteration: 900
04/20 23:19:34: Running time: 26.45 min
04/20 23:19:34: Data Loading time: 0.00007 s
04/20 23:19:34: Loss R: 0.0495
04/20 23:19:34: Loss G: 710.3494
04/20 23:19:34: bpp: 0.4619
04/20 23:19:34: Sum Loss: 711.8005
04/20 23:19:34: Loss (s-m-l): [0.0063, 0.1421, 0.0]
04/20 23:19:34: Metrics (s-m-l): [[0.9979, 1.0, 0.9979], [0.9426, 1.0, 0.9426], [1.0, 1.0, 1.0]]
04/20 23:22:34: 
Iteration: 1000
04/20 23:22:34: Running time: 29.45 min
04/20 23:22:34: Data Loading time: 0.00008 s
04/20 23:22:34: Loss R: 0.0525
04/20 23:22:34: Loss G: 683.9680
04/20 23:22:34: bpp: 0.4446
04/20 23:22:34: Sum Loss: 685.4627
04/20 23:22:34: Loss (s-m-l): [0.0069, 0.1506, 0.0]
04/20 23:22:34: Metrics (s-m-l): [[0.9978, 1.0, 0.9978], [0.939, 1.0, 0.939], [1.0, 1.0, 1.0]]
04/20 23:25:32: 
Iteration: 1100
04/20 23:25:32: Running time: 32.41 min
04/20 23:25:32: Data Loading time: 0.00007 s
04/20 23:25:32: Loss R: 0.0475
04/20 23:25:32: Loss G: 660.1109
04/20 23:25:32: bpp: 0.4308
04/20 23:25:32: Sum Loss: 661.4926
04/20 23:25:32: Loss (s-m-l): [0.0051, 0.1375, 0.0]
04/20 23:25:32: Metrics (s-m-l): [[0.9984, 1.0, 0.9984], [0.9447, 1.0, 0.9447], [1.0, 1.0, 1.0]]
04/20 23:28:31: 
Iteration: 1200
04/20 23:28:31: Running time: 35.39 min
04/20 23:28:31: Data Loading time: 0.00007 s
04/20 23:28:31: Loss R: 0.0460
04/20 23:28:31: Loss G: 649.8844
04/20 23:28:31: bpp: 0.4263
04/20 23:28:31: Sum Loss: 651.2311
04/20 23:28:31: Loss (s-m-l): [0.005, 0.1331, 0.0]
04/20 23:28:31: Metrics (s-m-l): [[0.9985, 1.0, 0.9985], [0.9464, 1.0, 0.9464], [1.0, 1.0, 1.0]]
04/20 23:31:29: 
Iteration: 1300
04/20 23:31:29: Running time: 38.37 min
04/20 23:31:29: Data Loading time: 0.00007 s
04/20 23:31:29: Loss R: 0.0449
04/20 23:31:29: Loss G: 720.7074
04/20 23:31:29: bpp: 0.4130
04/20 23:31:29: Sum Loss: 722.0185
04/20 23:31:29: Loss (s-m-l): [0.0044, 0.1303, 0.0]
04/20 23:31:29: Metrics (s-m-l): [[0.9986, 1.0, 0.9986], [0.9477, 1.0, 0.9477], [1.0, 1.0, 1.0]]
04/20 23:34:27: 
Iteration: 1400
04/20 23:34:27: Running time: 41.34 min
04/20 23:34:27: Data Loading time: 0.00008 s
04/20 23:34:27: Loss R: 0.0449
04/20 23:34:27: Loss G: 1405.4541
04/20 23:34:27: bpp: 0.4009
04/20 23:34:27: Sum Loss: 1406.7534
04/20 23:34:27: Loss (s-m-l): [0.0044, 0.1304, 0.0]
04/20 23:34:27: Metrics (s-m-l): [[0.9987, 1.0, 0.9987], [0.9477, 1.0, 0.9477], [1.0, 1.0, 1.0]]
04/20 23:37:21: 
Iteration: 1500
04/20 23:37:21: Running time: 44.23 min
04/20 23:37:21: Data Loading time: 0.00007 s
04/20 23:37:21: Loss R: 0.0434
04/20 23:37:21: Loss G: 1103.8840
04/20 23:37:21: bpp: 0.3907
04/20 23:37:21: Sum Loss: 1105.1422
04/20 23:37:21: Loss (s-m-l): [0.004, 0.126, 0.0]
04/20 23:37:21: Metrics (s-m-l): [[0.9987, 1.0, 0.9987], [0.9492, 1.0, 0.9492], [1.0, 1.0, 1.0]]
04/20 23:40:19: 
Iteration: 1600
04/20 23:40:19: Running time: 47.19 min
04/20 23:40:19: Data Loading time: 0.00007 s
04/20 23:40:19: Loss R: 0.0436
04/20 23:40:19: Loss G: 910.3221
04/20 23:40:19: bpp: 0.3855
04/20 23:40:19: Sum Loss: 911.5794
04/20 23:40:19: Loss (s-m-l): [0.004, 0.1267, 0.0]
04/20 23:40:19: Metrics (s-m-l): [[0.9987, 1.0, 0.9987], [0.949, 1.0, 0.949], [1.0, 1.0, 1.0]]
04/20 23:43:14: 
Iteration: 1700
04/20 23:43:14: Running time: 50.11 min
04/20 23:43:14: Data Loading time: 0.00007 s
04/20 23:43:14: Loss R: 0.0412
04/20 23:43:14: Loss G: 794.6626
04/20 23:43:14: bpp: 0.3766
04/20 23:43:14: Sum Loss: 795.8631
04/20 23:43:14: Loss (s-m-l): [0.0035, 0.12, 0.0]
04/20 23:43:14: Metrics (s-m-l): [[0.9989, 1.0, 0.9989], [0.9517, 1.0, 0.9517], [1.0, 1.0, 1.0]]
04/20 23:46:06: 
Iteration: 1800
04/20 23:46:06: Running time: 52.99 min
04/20 23:46:06: Data Loading time: 0.00007 s
04/20 23:46:06: Loss R: 0.0401
04/20 23:46:06: Loss G: 743.9130
04/20 23:46:06: bpp: 0.3729
04/20 23:46:06: Sum Loss: 745.0883
04/20 23:46:06: Loss (s-m-l): [0.0034, 0.117, 0.0]
04/20 23:46:06: Metrics (s-m-l): [[0.9989, 1.0, 0.9989], [0.9531, 1.0, 0.9531], [1.0, 1.0, 1.0]]
04/20 23:49:02: 
Iteration: 1900
04/20 23:49:02: Running time: 55.91 min
04/20 23:49:02: Data Loading time: 0.00007 s
04/20 23:49:02: Loss R: 0.0394
04/20 23:49:02: Loss G: 668.1627
04/20 23:49:02: bpp: 0.3667
04/20 23:49:02: Sum Loss: 669.3173
04/20 23:49:02: Loss (s-m-l): [0.0034, 0.1148, 0.0]
04/20 23:49:02: Metrics (s-m-l): [[0.9989, 1.0, 0.9989], [0.9538, 1.0, 0.9538], [1.0, 1.0, 1.0]]
04/20 23:51:58: 
Iteration: 2000
04/20 23:51:58: Running time: 58.84 min
04/20 23:51:58: Data Loading time: 0.00007 s
04/20 23:51:58: Loss R: 0.0379
04/20 23:51:58: Loss G: 625.0079
04/20 23:51:58: bpp: 0.3606
04/20 23:51:58: Sum Loss: 626.1255
04/20 23:51:58: Loss (s-m-l): [0.0031, 0.1105, 0.0]
04/20 23:51:58: Metrics (s-m-l): [[0.999, 1.0, 0.999], [0.9555, 1.0, 0.9555], [1.0, 1.0, 1.0]]
04/20 23:51:58: 
==========Evaluation: iter 2000==========
04/20 23:51:58: save checkpoints: ckpts/tp/tp2000
04/20 23:54:53: 
Iteration: 2100
04/20 23:54:53: Running time: 61.77 min
04/20 23:54:53: Data Loading time: 0.00007 s
04/20 23:54:53: Loss R: 0.0381
04/20 23:54:53: Loss G: 2238.8396
04/20 23:54:53: bpp: 0.3587
04/20 23:54:53: Sum Loss: 2239.9604
04/20 23:54:53: Loss (s-m-l): [0.0032, 0.1111, 0.0]
04/20 23:54:53: Metrics (s-m-l): [[0.999, 1.0, 0.999], [0.9551, 1.0, 0.9551], [1.0, 1.0, 1.0]]
04/20 23:57:44: 
Iteration: 2200
04/20 23:57:44: Running time: 64.62 min
04/20 23:57:44: Data Loading time: 0.00007 s
04/20 23:57:44: Loss R: 0.0366
04/20 23:57:44: Loss G: 4586.0309
04/20 23:57:44: bpp: 0.3570
04/20 23:57:44: Sum Loss: 4587.1196
04/20 23:57:44: Loss (s-m-l): [0.003, 0.1069, 0.0]
04/20 23:57:44: Metrics (s-m-l): [[0.999, 1.0, 0.999], [0.9572, 1.0, 0.9572], [1.0, 1.0, 1.0]]
04/21 00:00:37: 
Iteration: 2300
04/21 00:00:37: Running time: 67.51 min
04/21 00:00:37: Data Loading time: 0.00010 s
04/21 00:00:37: Loss R: 0.0353
04/21 00:00:37: Loss G: 4357.1146
04/21 00:00:37: bpp: 0.3516
04/21 00:00:37: Sum Loss: 4358.1719
04/21 00:00:37: Loss (s-m-l): [0.0028, 0.103, 0.0]
04/21 00:00:37: Metrics (s-m-l): [[0.999, 1.0, 0.999], [0.9584, 1.0, 0.9584], [1.0, 1.0, 1.0]]
04/21 00:03:35: 
Iteration: 2400
04/21 00:03:35: Running time: 70.47 min
04/21 00:03:35: Data Loading time: 0.00007 s
04/21 00:03:35: Loss R: 0.0355
04/21 00:03:35: Loss G: 3950.7972
04/21 00:03:35: bpp: 0.3487
04/21 00:03:35: Sum Loss: 3951.8567
04/21 00:03:35: Loss (s-m-l): [0.0028, 0.1037, 0.0]
04/21 00:03:35: Metrics (s-m-l): [[0.9991, 1.0, 0.9991], [0.9585, 1.0, 0.9585], [1.0, 1.0, 1.0]]
04/21 00:06:29: 
Iteration: 2500
04/21 00:06:29: Running time: 73.36 min
04/21 00:06:29: Data Loading time: 0.00007 s
04/21 00:06:29: Loss R: 0.0356
04/21 00:06:29: Loss G: 3379.8692
04/21 00:06:29: bpp: 0.3496
04/21 00:06:29: Sum Loss: 3380.9309
04/21 00:06:29: Loss (s-m-l): [0.0028, 0.1039, 0.0]
04/21 00:06:29: Metrics (s-m-l): [[0.9991, 1.0, 0.9991], [0.9581, 1.0, 0.9581], [1.0, 1.0, 1.0]]
04/21 00:09:22: 
Iteration: 2600
04/21 00:09:22: Running time: 76.24 min
04/21 00:09:22: Data Loading time: 0.00007 s
04/21 00:09:22: Loss R: 0.0336
04/21 00:09:22: Loss G: 3045.2728
04/21 00:09:22: bpp: 0.3450
04/21 00:09:22: Sum Loss: 3046.2896
04/21 00:09:22: Loss (s-m-l): [0.0025, 0.0983, 0.0]
04/21 00:09:22: Metrics (s-m-l): [[0.9991, 1.0, 0.9991], [0.9606, 1.0, 0.9606], [1.0, 1.0, 1.0]]
04/21 00:12:21: 
Iteration: 2700
04/21 00:12:21: Running time: 79.23 min
04/21 00:12:21: Data Loading time: 0.00007 s
04/21 00:12:21: Loss R: 0.0332
04/21 00:12:21: Loss G: 2904.1381
04/21 00:12:21: bpp: 0.3428
04/21 00:12:21: Sum Loss: 2905.1450
04/21 00:12:21: Loss (s-m-l): [0.0025, 0.0971, 0.0]
04/21 00:12:21: Metrics (s-m-l): [[0.9991, 1.0, 0.9991], [0.9609, 1.0, 0.9609], [1.0, 1.0, 1.0]]
04/21 00:15:16: 
Iteration: 2800
04/21 00:15:16: Running time: 82.16 min
04/21 00:15:16: Data Loading time: 0.00007 s
04/21 00:15:16: Loss R: 0.0323
04/21 00:15:16: Loss G: 2769.5920
04/21 00:15:16: bpp: 0.3397
04/21 00:15:16: Sum Loss: 2770.5764
04/21 00:15:16: Loss (s-m-l): [0.0023, 0.0944, 0.0]
04/21 00:15:16: Metrics (s-m-l): [[0.9992, 1.0, 0.9992], [0.962, 1.0, 0.962], [1.0, 1.0, 1.0]]
04/21 00:18:14: 
Iteration: 2900
04/21 00:18:14: Running time: 85.12 min
04/21 00:18:14: Data Loading time: 0.00007 s
04/21 00:18:14: Loss R: 0.0322
04/21 00:18:14: Loss G: 2819.5331
04/21 00:18:14: bpp: 0.3408
04/21 00:18:14: Sum Loss: 2820.5183
04/21 00:18:14: Loss (s-m-l): [0.0023, 0.0943, 0.0]
04/21 00:18:14: Metrics (s-m-l): [[0.9992, 1.0, 0.9992], [0.962, 1.0, 0.962], [1.0, 1.0, 1.0]]
04/21 00:21:09: 
Iteration: 3000
04/21 00:21:09: Running time: 88.03 min
04/21 00:21:09: Data Loading time: 0.00007 s
04/21 00:21:09: Loss R: 0.0310
04/21 00:21:09: Loss G: 3045.0500
04/21 00:21:09: bpp: 0.3413
04/21 00:21:09: Sum Loss: 3046.0100
04/21 00:21:09: Loss (s-m-l): [0.0023, 0.0906, 0.0]
04/21 00:21:09: Metrics (s-m-l): [[0.9992, 1.0, 0.9992], [0.9635, 1.0, 0.9635], [1.0, 1.0, 1.0]]
04/21 00:24:03: 
Iteration: 3100
04/21 00:24:03: Running time: 90.94 min
04/21 00:24:03: Data Loading time: 0.00007 s
04/21 00:24:03: Loss R: 0.0290
04/21 00:24:03: Loss G: 2508.0986
04/21 00:24:03: bpp: 0.3384
04/21 00:24:03: Sum Loss: 2509.0168
04/21 00:24:03: Loss (s-m-l): [0.002, 0.0849, 0.0]
04/21 00:24:03: Metrics (s-m-l): [[0.9993, 1.0, 0.9993], [0.9661, 1.0, 0.9661], [1.0, 1.0, 1.0]]
04/21 00:26:56: 
Iteration: 3200
04/21 00:26:56: Running time: 93.82 min
04/21 00:26:56: Data Loading time: 0.00007 s
04/21 00:26:56: Loss R: 0.0333
04/21 00:26:56: Loss G: 2214.7066
04/21 00:26:56: bpp: 0.3374
04/21 00:26:56: Sum Loss: 2215.7107
04/21 00:26:56: Loss (s-m-l): [0.0027, 0.0973, 0.0]
04/21 00:26:56: Metrics (s-m-l): [[0.9991, 1.0, 0.9991], [0.9608, 1.0, 0.9608], [1.0, 1.0, 1.0]]
04/21 00:29:50: 
Iteration: 3300
04/21 00:29:50: Running time: 96.71 min
04/21 00:29:50: Data Loading time: 0.00007 s
04/21 00:29:50: Loss R: 0.0317
04/21 00:29:50: Loss G: 1813.7731
04/21 00:29:50: bpp: 0.3375
04/21 00:29:50: Sum Loss: 1814.7441
04/21 00:29:50: Loss (s-m-l): [0.0024, 0.0926, 0.0]
04/21 00:29:50: Metrics (s-m-l): [[0.9992, 1.0, 0.9992], [0.9627, 1.0, 0.9627], [1.0, 1.0, 1.0]]
04/21 00:32:47: 
Iteration: 3400
04/21 00:32:47: Running time: 99.67 min
04/21 00:32:47: Data Loading time: 0.00007 s
04/21 00:32:47: Loss R: 0.0284
04/21 00:32:47: Loss G: 1507.2649
04/21 00:32:47: bpp: 0.3374
04/21 00:32:47: Sum Loss: 1508.1704
04/21 00:32:47: Loss (s-m-l): [0.0018, 0.0834, 0.0]
04/21 00:32:47: Metrics (s-m-l): [[0.9994, 1.0, 0.9994], [0.9666, 1.0, 0.9666], [1.0, 1.0, 1.0]]
04/21 00:35:40: 
Iteration: 3500
04/21 00:35:40: Running time: 102.56 min
04/21 00:35:40: Data Loading time: 0.00007 s
04/21 00:35:40: Loss R: 0.0286
04/21 00:35:40: Loss G: 1280.4163
04/21 00:35:40: bpp: 0.3354
04/21 00:35:40: Sum Loss: 1281.3228
04/21 00:35:40: Loss (s-m-l): [0.0019, 0.0838, 0.0]
04/21 00:35:40: Metrics (s-m-l): [[0.9993, 1.0, 0.9993], [0.9665, 1.0, 0.9665], [1.0, 1.0, 1.0]]
04/21 00:38:37: 
Iteration: 3600
04/21 00:38:37: Running time: 105.50 min
04/21 00:38:37: Data Loading time: 0.00007 s
04/21 00:38:37: Loss R: 0.0292
04/21 00:38:37: Loss G: 1009.3919
04/21 00:38:37: bpp: 0.3360
04/21 00:38:37: Sum Loss: 1010.3118
04/21 00:38:37: Loss (s-m-l): [0.002, 0.0856, 0.0]
04/21 00:38:37: Metrics (s-m-l): [[0.9993, 1.0, 0.9993], [0.9653, 1.0, 0.9653], [1.0, 1.0, 1.0]]
04/21 00:41:35: 
Iteration: 3700
04/21 00:41:35: Running time: 108.47 min
04/21 00:41:35: Data Loading time: 0.00007 s
04/21 00:41:35: Loss R: 0.0309
04/21 00:41:35: Loss G: 893.0817
04/21 00:41:35: bpp: 0.3348
04/21 00:41:35: Sum Loss: 894.0352
04/21 00:41:35: Loss (s-m-l): [0.0023, 0.0905, 0.0]
04/21 00:41:35: Metrics (s-m-l): [[0.9992, 1.0, 0.9992], [0.9635, 1.0, 0.9635], [1.0, 1.0, 1.0]]
04/21 00:44:29: 
Iteration: 3800
04/21 00:44:29: Running time: 111.36 min
04/21 00:44:29: Data Loading time: 0.00007 s
04/21 00:44:29: Loss R: 0.0279
04/21 00:44:29: Loss G: 819.4404
04/21 00:44:29: bpp: 0.3379
04/21 00:44:29: Sum Loss: 820.3358
04/21 00:44:29: Loss (s-m-l): [0.0019, 0.0818, 0.0]
04/21 00:44:29: Metrics (s-m-l): [[0.9994, 1.0, 0.9994], [0.9673, 1.0, 0.9673], [1.0, 1.0, 1.0]]
04/21 00:47:23: 
Iteration: 3900
04/21 00:47:23: Running time: 114.26 min
04/21 00:47:23: Data Loading time: 0.00007 s
04/21 00:47:23: Loss R: 0.0269
04/21 00:47:23: Loss G: 589.6269
04/21 00:47:23: bpp: 0.3351
04/21 00:47:23: Sum Loss: 590.4999
04/21 00:47:23: Loss (s-m-l): [0.0018, 0.0789, 0.0]
04/21 00:47:23: Metrics (s-m-l): [[0.9994, 1.0, 0.9994], [0.9684, 1.0, 0.9684], [1.0, 1.0, 1.0]]
04/21 00:50:19: 
Iteration: 4000
04/21 00:50:19: Running time: 117.19 min
04/21 00:50:19: Data Loading time: 0.00010 s
04/21 00:50:19: Loss R: 0.0305
04/21 00:50:19: Loss G: 638.4336
04/21 00:50:19: bpp: 0.3305
04/21 00:50:19: Sum Loss: 639.3732
04/21 00:50:19: Loss (s-m-l): [0.0021, 0.0893, 0.0]
04/21 00:50:19: Metrics (s-m-l): [[0.9993, 1.0, 0.9993], [0.9639, 1.0, 0.9639], [1.0, 1.0, 1.0]]
04/21 00:50:19: 
==========Evaluation: iter 4000==========
04/21 00:50:19: save checkpoints: ckpts/tp/tp4000
04/21 00:53:13: 
Iteration: 4100
04/21 00:53:13: Running time: 120.11 min
04/21 00:53:13: Data Loading time: 0.00007 s
04/21 00:53:13: Loss R: 0.0268
04/21 00:53:13: Loss G: 794.5792
04/21 00:53:13: bpp: 0.3346
04/21 00:53:13: Sum Loss: 795.4500
04/21 00:53:13: Loss (s-m-l): [0.0018, 0.0786, 0.0]
04/21 00:53:13: Metrics (s-m-l): [[0.9994, 1.0, 0.9994], [0.9683, 1.0, 0.9683], [1.0, 1.0, 1.0]]
04/21 00:56:08: 
Iteration: 4200
04/21 00:56:08: Running time: 123.02 min
04/21 00:56:08: Data Loading time: 0.00010 s
04/21 00:56:08: Loss R: 0.0265
04/21 00:56:08: Loss G: 584.5880
04/21 00:56:08: bpp: 0.3305
04/21 00:56:08: Sum Loss: 585.4494
04/21 00:56:08: Loss (s-m-l): [0.0017, 0.0779, 0.0]
04/21 00:56:08: Metrics (s-m-l): [[0.9994, 1.0, 0.9994], [0.969, 1.0, 0.969], [1.0, 1.0, 1.0]]
04/21 00:58:59: 
Iteration: 4300
04/21 00:58:59: Running time: 125.88 min
04/21 00:58:59: Data Loading time: 0.00007 s
04/21 00:58:59: Loss R: 0.0295
04/21 00:58:59: Loss G: 331.2114
04/21 00:58:59: bpp: 0.3353
04/21 00:58:59: Sum Loss: 332.1364
04/21 00:58:59: Loss (s-m-l): [0.0023, 0.0861, 0.0]
04/21 00:58:59: Metrics (s-m-l): [[0.9992, 1.0, 0.9992], [0.9651, 1.0, 0.9651], [1.0, 1.0, 1.0]]
04/21 01:01:56: 
Iteration: 4400
04/21 01:01:56: Running time: 128.82 min
04/21 01:01:56: Data Loading time: 0.00007 s
04/21 01:01:56: Loss R: 0.0264
04/21 01:01:56: Loss G: 219.7644
04/21 01:01:56: bpp: 0.3315
04/21 01:01:56: Sum Loss: 220.6246
04/21 01:01:56: Loss (s-m-l): [0.0017, 0.0776, 0.0]
04/21 01:01:56: Metrics (s-m-l): [[0.9994, 1.0, 0.9994], [0.9688, 1.0, 0.9688], [1.0, 1.0, 1.0]]
04/21 01:04:50: 
Iteration: 4500
04/21 01:04:50: Running time: 131.72 min
04/21 01:04:50: Data Loading time: 0.00007 s
04/21 01:04:50: Loss R: 0.0268
04/21 01:04:50: Loss G: 190.5674
04/21 01:04:50: bpp: 0.3303
04/21 01:04:50: Sum Loss: 191.4329
04/21 01:04:50: Loss (s-m-l): [0.0017, 0.0786, 0.0]
04/21 01:04:50: Metrics (s-m-l): [[0.9994, 1.0, 0.9994], [0.9684, 1.0, 0.9684], [1.0, 1.0, 1.0]]
04/21 01:07:48: 
Iteration: 4600
04/21 01:07:48: Running time: 134.68 min
04/21 01:07:48: Data Loading time: 0.00007 s
04/21 01:07:48: Loss R: 0.0259
04/21 01:07:48: Loss G: 136.4871
04/21 01:07:48: bpp: 0.3286
04/21 01:07:48: Sum Loss: 137.3336
04/21 01:07:48: Loss (s-m-l): [0.0017, 0.076, 0.0]
04/21 01:07:48: Metrics (s-m-l): [[0.9994, 1.0, 0.9994], [0.9695, 1.0, 0.9695], [1.0, 1.0, 1.0]]
04/21 01:10:41: 
Iteration: 4700
04/21 01:10:41: Running time: 137.58 min
04/21 01:10:41: Data Loading time: 0.00007 s
04/21 01:10:41: Loss R: 0.0255
04/21 01:10:41: Loss G: 120.1277
04/21 01:10:41: bpp: 0.3264
04/21 01:10:41: Sum Loss: 120.9646
04/21 01:10:41: Loss (s-m-l): [0.0016, 0.075, 0.0]
04/21 01:10:41: Metrics (s-m-l): [[0.9995, 1.0, 0.9995], [0.9698, 1.0, 0.9698], [1.0, 1.0, 1.0]]
04/21 01:13:38: 
Iteration: 4800
04/21 01:13:38: Running time: 140.52 min
04/21 01:13:38: Data Loading time: 0.00007 s
04/21 01:13:38: Loss R: 0.0258
04/21 01:13:38: Loss G: 133.9865
04/21 01:13:38: bpp: 0.3241
04/21 01:13:38: Sum Loss: 134.8259
04/21 01:13:38: Loss (s-m-l): [0.0017, 0.0755, 0.0]
04/21 01:13:38: Metrics (s-m-l): [[0.9994, 1.0, 0.9994], [0.9699, 1.0, 0.9699], [1.0, 1.0, 1.0]]
04/21 01:16:34: 
Iteration: 4900
04/21 01:16:34: Running time: 143.45 min
04/21 01:16:34: Data Loading time: 0.00007 s
04/21 01:16:34: Loss R: 0.0252
04/21 01:16:34: Loss G: 1380.4459
04/21 01:16:34: bpp: 0.3260
04/21 01:16:34: Sum Loss: 1381.2758
04/21 01:16:34: Loss (s-m-l): [0.0014, 0.074, 0.0002]
04/21 01:16:34: Metrics (s-m-l): [[0.9995, 1.0, 0.9995], [0.9702, 1.0, 0.9702], [1.0, 1.0, 1.0]]
04/21 01:19:28: 
Iteration: 5000
04/21 01:19:28: Running time: 146.35 min
04/21 01:19:28: Data Loading time: 0.00007 s
04/21 01:19:28: Loss R: 0.0265
04/21 01:19:28: Loss G: 11535.5858
04/21 01:19:28: bpp: 0.3263
04/21 01:19:28: Sum Loss: 11536.4395
04/21 01:19:28: Loss (s-m-l): [0.0016, 0.0778, 0.0]
04/21 01:19:28: Metrics (s-m-l): [[0.9995, 1.0, 0.9995], [0.9688, 1.0, 0.9688], [1.0, 1.0, 1.0]]
04/21 01:22:16: 
Iteration: 5100
04/21 01:22:16: Running time: 149.16 min
04/21 01:22:16: Data Loading time: 0.00008 s
04/21 01:22:16: Loss R: 0.0270
04/21 01:22:16: Loss G: 12595.4826
04/21 01:22:16: bpp: 0.3302
04/21 01:22:16: Sum Loss: 12596.3506
04/21 01:22:16: Loss (s-m-l): [0.0018, 0.0792, 0.0]
04/21 01:22:16: Metrics (s-m-l): [[0.9994, 1.0, 0.9994], [0.9681, 1.0, 0.9681], [1.0, 1.0, 1.0]]
04/21 01:25:09: 
Iteration: 5200
04/21 01:25:09: Running time: 152.03 min
04/21 01:25:09: Data Loading time: 0.00007 s
04/21 01:25:09: Loss R: 0.0244
04/21 01:25:09: Loss G: 12608.2824
04/21 01:25:09: bpp: 0.3291
04/21 01:25:09: Sum Loss: 12609.1006
04/21 01:25:09: Loss (s-m-l): [0.0013, 0.072, 0.0]
04/21 01:25:09: Metrics (s-m-l): [[0.9995, 1.0, 0.9995], [0.9712, 1.0, 0.9712], [1.0, 1.0, 1.0]]
04/21 01:28:05: 
Iteration: 5300
04/21 01:28:05: Running time: 154.97 min
04/21 01:28:05: Data Loading time: 0.00007 s
04/21 01:28:05: Loss R: 0.0245
04/21 01:28:05: Loss G: 12550.1352
04/21 01:28:05: bpp: 0.3232
04/21 01:28:05: Sum Loss: 12550.9463
04/21 01:28:05: Loss (s-m-l): [0.0014, 0.0721, 0.0]
04/21 01:28:05: Metrics (s-m-l): [[0.9995, 1.0, 0.9995], [0.9711, 1.0, 0.9711], [1.0, 1.0, 1.0]]
04/21 01:31:01: 
Iteration: 5400
04/21 01:31:01: Running time: 157.90 min
04/21 01:31:01: Data Loading time: 0.00007 s
04/21 01:31:01: Loss R: 0.0239
04/21 01:31:01: Loss G: 11839.8263
04/21 01:31:01: bpp: 0.3264
04/21 01:31:01: Sum Loss: 11840.6289
04/21 01:31:01: Loss (s-m-l): [0.0013, 0.0703, 0.0]
04/21 01:31:01: Metrics (s-m-l): [[0.9996, 1.0, 0.9996], [0.9716, 1.0, 0.9716], [1.0, 1.0, 1.0]]
04/21 01:33:58: 
Iteration: 5500
04/21 01:33:58: Running time: 160.86 min
04/21 01:33:58: Data Loading time: 0.00007 s
04/21 01:33:58: Loss R: 0.0230
04/21 01:33:58: Loss G: 10836.2309
04/21 01:33:58: bpp: 0.3256
04/21 01:33:58: Sum Loss: 10837.0127
04/21 01:33:58: Loss (s-m-l): [0.0013, 0.0677, 0.0]
04/21 01:33:58: Metrics (s-m-l): [[0.9995, 1.0, 0.9995], [0.9728, 1.0, 0.9728], [1.0, 1.0, 1.0]]
04/21 01:36:49: 
Iteration: 5600
04/21 01:36:49: Running time: 163.71 min
04/21 01:36:49: Data Loading time: 0.00007 s
04/21 01:36:49: Loss R: 0.0225
04/21 01:36:49: Loss G: 8983.2030
04/21 01:36:49: bpp: 0.3254
04/21 01:36:49: Sum Loss: 8983.9756
04/21 01:36:49: Loss (s-m-l): [0.0012, 0.0662, 0.0]
04/21 01:36:49: Metrics (s-m-l): [[0.9996, 1.0, 0.9996], [0.9737, 1.0, 0.9737], [1.0, 1.0, 1.0]]
04/21 01:39:42: 
Iteration: 5700
04/21 01:39:42: Running time: 166.59 min
04/21 01:39:42: Data Loading time: 0.00007 s
04/21 01:39:42: Loss R: 0.0250
04/21 01:39:42: Loss G: 7393.5273
04/21 01:39:42: bpp: 0.3284
04/21 01:39:42: Sum Loss: 7394.3535
04/21 01:39:42: Loss (s-m-l): [0.0015, 0.0734, 0.0]
04/21 01:39:42: Metrics (s-m-l): [[0.9995, 1.0, 0.9995], [0.9704, 1.0, 0.9704], [1.0, 1.0, 1.0]]
04/21 01:42:40: 
Iteration: 5800
04/21 01:42:40: Running time: 169.55 min
04/21 01:42:40: Data Loading time: 0.00007 s
04/21 01:42:40: Loss R: 0.0230
04/21 01:42:40: Loss G: 6421.7807
04/21 01:42:40: bpp: 0.3302
04/21 01:42:40: Sum Loss: 6422.5718
04/21 01:42:40: Loss (s-m-l): [0.0013, 0.0676, 0.0]
04/21 01:42:40: Metrics (s-m-l): [[0.9996, 1.0, 0.9996], [0.9729, 1.0, 0.9729], [1.0, 1.0, 1.0]]
04/21 01:45:39: 
Iteration: 5900
04/21 01:45:39: Running time: 172.53 min
04/21 01:45:39: Data Loading time: 0.00007 s
04/21 01:45:39: Loss R: 0.0241
04/21 01:45:39: Loss G: 7720.3204
04/21 01:45:39: bpp: 0.3233
04/21 01:45:39: Sum Loss: 7721.1255
04/21 01:45:39: Loss (s-m-l): [0.0014, 0.0709, 0.0]
04/21 01:45:39: Metrics (s-m-l): [[0.9995, 1.0, 0.9995], [0.9715, 1.0, 0.9715], [1.0, 1.0, 1.0]]
04/21 01:48:32: 
Iteration: 6000
04/21 01:48:32: Running time: 175.41 min
04/21 01:48:32: Data Loading time: 0.00007 s
04/21 01:48:32: Loss R: 0.0231
04/21 01:48:32: Loss G: 7439.5911
04/21 01:48:32: bpp: 0.3284
04/21 01:48:32: Sum Loss: 7440.3784
04/21 01:48:32: Loss (s-m-l): [0.0013, 0.0679, 0.0]
04/21 01:48:32: Metrics (s-m-l): [[0.9996, 1.0, 0.9996], [0.9729, 1.0, 0.9729], [1.0, 1.0, 1.0]]
04/21 01:48:32: 
==========Evaluation: iter 6000==========
04/21 01:48:32: save checkpoints: ckpts/tp/tp6000
04/21 01:48:32: LR: [0.0002, 0.0002, 0.0002]
04/21 01:51:29: 
Iteration: 6100
04/21 01:51:29: Running time: 178.37 min
04/21 01:51:29: Data Loading time: 0.00007 s
04/21 01:51:29: Loss R: 0.0208
04/21 01:51:29: Loss G: 6310.4626
04/21 01:51:29: bpp: 0.3227
04/21 01:51:29: Sum Loss: 6311.1992
04/21 01:51:29: Loss (s-m-l): [0.001, 0.0614, 0.0]
04/21 01:51:29: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9755, 1.0, 0.9755], [1.0, 1.0, 1.0]]
04/21 01:54:20: 
Iteration: 6200
04/21 01:54:20: Running time: 181.22 min
04/21 01:54:20: Data Loading time: 0.00007 s
04/21 01:54:20: Loss R: 0.0206
04/21 01:54:20: Loss G: 5501.2019
04/21 01:54:20: bpp: 0.3268
04/21 01:54:20: Sum Loss: 5501.9399
04/21 01:54:20: Loss (s-m-l): [0.001, 0.061, 0.0]
04/21 01:54:20: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9755, 1.0, 0.9755], [1.0, 1.0, 1.0]]
04/21 01:57:13: 
Iteration: 6300
04/21 01:57:13: Running time: 184.11 min
04/21 01:57:13: Data Loading time: 0.00007 s
04/21 01:57:13: Loss R: 0.0202
04/21 01:57:13: Loss G: 4953.8569
04/21 01:57:13: bpp: 0.3229
04/21 01:57:13: Sum Loss: 4954.5825
04/21 01:57:13: Loss (s-m-l): [0.001, 0.0596, 0.0]
04/21 01:57:13: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9762, 1.0, 0.9762], [1.0, 1.0, 1.0]]
04/21 02:00:08: 
Iteration: 6400
04/21 02:00:08: Running time: 187.02 min
04/21 02:00:08: Data Loading time: 0.00007 s
04/21 02:00:08: Loss R: 0.0204
04/21 02:00:08: Loss G: 4427.1966
04/21 02:00:08: bpp: 0.3242
04/21 02:00:08: Sum Loss: 4427.9292
04/21 02:00:08: Loss (s-m-l): [0.001, 0.0603, 0.0]
04/21 02:00:08: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9757, 1.0, 0.9757], [1.0, 1.0, 1.0]]
04/21 02:02:59: 
Iteration: 6500
04/21 02:02:59: Running time: 189.87 min
04/21 02:02:59: Data Loading time: 0.00007 s
04/21 02:02:59: Loss R: 0.0199
04/21 02:02:59: Loss G: 3748.0674
04/21 02:02:59: bpp: 0.3273
04/21 02:02:59: Sum Loss: 3748.7920
04/21 02:02:59: Loss (s-m-l): [0.001, 0.0587, 0.0]
04/21 02:02:59: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9762, 1.0, 0.9762], [1.0, 1.0, 1.0]]
04/21 02:05:52: 
Iteration: 6600
04/21 02:05:52: Running time: 192.75 min
04/21 02:05:52: Data Loading time: 0.00007 s
04/21 02:05:52: Loss R: 0.0198
04/21 02:05:52: Loss G: 3435.3235
04/21 02:05:52: bpp: 0.3256
04/21 02:05:52: Sum Loss: 3436.0469
04/21 02:05:52: Loss (s-m-l): [0.001, 0.0585, 0.0]
04/21 02:05:52: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9765, 1.0, 0.9765], [1.0, 1.0, 1.0]]
04/21 02:08:51: 
Iteration: 6700
04/21 02:08:51: Running time: 195.74 min
04/21 02:08:51: Data Loading time: 0.00007 s
04/21 02:08:51: Loss R: 0.0201
04/21 02:08:51: Loss G: 3334.9449
04/21 02:08:51: bpp: 0.3238
04/21 02:08:51: Sum Loss: 3335.6697
04/21 02:08:51: Loss (s-m-l): [0.001, 0.0592, 0.0]
04/21 02:08:51: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9764, 1.0, 0.9764], [1.0, 1.0, 1.0]]
04/21 02:11:45: 
Iteration: 6800
04/21 02:11:45: Running time: 198.64 min
04/21 02:11:45: Data Loading time: 0.00007 s
04/21 02:11:45: Loss R: 0.0204
04/21 02:11:45: Loss G: 3540.3634
04/21 02:11:45: bpp: 0.3232
04/21 02:11:45: Sum Loss: 3541.0947
04/21 02:11:45: Loss (s-m-l): [0.001, 0.0601, 0.0]
04/21 02:11:45: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9759, 1.0, 0.9759], [1.0, 1.0, 1.0]]
04/21 02:14:43: 
Iteration: 6900
04/21 02:14:43: Running time: 201.60 min
04/21 02:14:43: Data Loading time: 0.00007 s
04/21 02:14:43: Loss R: 0.0204
04/21 02:14:43: Loss G: 3141.0493
04/21 02:14:43: bpp: 0.3282
04/21 02:14:43: Sum Loss: 3141.7849
04/21 02:14:43: Loss (s-m-l): [0.001, 0.0601, 0.0]
04/21 02:14:43: Metrics (s-m-l): [[0.9996, 1.0, 0.9996], [0.9758, 1.0, 0.9758], [1.0, 1.0, 1.0]]
04/21 02:17:38: 
Iteration: 7000
04/21 02:17:38: Running time: 204.51 min
04/21 02:17:38: Data Loading time: 0.00007 s
04/21 02:17:38: Loss R: 0.0190
04/21 02:17:38: Loss G: 2834.3976
04/21 02:17:38: bpp: 0.3258
04/21 02:17:38: Sum Loss: 2835.1038
04/21 02:17:38: Loss (s-m-l): [0.001, 0.0561, 0.0]
04/21 02:17:38: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9775, 1.0, 0.9775], [1.0, 1.0, 1.0]]
04/21 02:20:33: 
Iteration: 7100
04/21 02:20:33: Running time: 207.44 min
04/21 02:20:33: Data Loading time: 0.00007 s
04/21 02:20:33: Loss R: 0.0209
04/21 02:20:33: Loss G: 2619.3222
04/21 02:20:33: bpp: 0.3258
04/21 02:20:33: Sum Loss: 2620.0671
04/21 02:20:33: Loss (s-m-l): [0.0011, 0.0618, 0.0]
04/21 02:20:33: Metrics (s-m-l): [[0.9996, 1.0, 0.9996], [0.9751, 1.0, 0.9751], [1.0, 1.0, 1.0]]
04/21 02:23:24: 
Iteration: 7200
04/21 02:23:24: Running time: 210.29 min
04/21 02:23:24: Data Loading time: 0.00007 s
04/21 02:23:24: Loss R: 0.0192
04/21 02:23:24: Loss G: 2690.9698
04/21 02:23:24: bpp: 0.3288
04/21 02:23:24: Sum Loss: 2691.6841
04/21 02:23:24: Loss (s-m-l): [0.001, 0.0568, 0.0]
04/21 02:23:24: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9772, 1.0, 0.9772], [1.0, 1.0, 1.0]]
04/21 02:26:23: 
Iteration: 7300
04/21 02:26:23: Running time: 213.27 min
04/21 02:26:23: Data Loading time: 0.00007 s
04/21 02:26:23: Loss R: 0.0209
04/21 02:26:23: Loss G: 2824.5432
04/21 02:26:23: bpp: 0.3245
04/21 02:26:23: Sum Loss: 2825.2869
04/21 02:26:23: Loss (s-m-l): [0.001, 0.0618, 0.0]
04/21 02:26:23: Metrics (s-m-l): [[0.9996, 1.0, 0.9996], [0.9751, 1.0, 0.9751], [1.0, 1.0, 1.0]]
04/21 02:29:16: 
Iteration: 7400
04/21 02:29:16: Running time: 216.16 min
04/21 02:29:16: Data Loading time: 0.00007 s
04/21 02:29:16: Loss R: 0.0193
04/21 02:29:16: Loss G: 2056.8531
04/21 02:29:16: bpp: 0.3285
04/21 02:29:16: Sum Loss: 2057.5674
04/21 02:29:16: Loss (s-m-l): [0.001, 0.0568, 0.0]
04/21 02:29:16: Metrics (s-m-l): [[0.9996, 1.0, 0.9996], [0.9772, 1.0, 0.9772], [1.0, 1.0, 1.0]]
04/21 02:32:11: 
Iteration: 7500
04/21 02:32:11: Running time: 219.07 min
04/21 02:32:11: Data Loading time: 0.00007 s
04/21 02:32:11: Loss R: 0.0197
04/21 02:32:11: Loss G: 2093.6014
04/21 02:32:11: bpp: 0.3258
04/21 02:32:11: Sum Loss: 2094.3218
04/21 02:32:11: Loss (s-m-l): [0.001, 0.0582, 0.0]
04/21 02:32:11: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9766, 1.0, 0.9766], [1.0, 1.0, 1.0]]
04/21 02:35:07: 
Iteration: 7600
04/21 02:35:07: Running time: 222.00 min
04/21 02:35:07: Data Loading time: 0.00007 s
04/21 02:35:07: Loss R: 0.0199
04/21 02:35:07: Loss G: 1778.6628
04/21 02:35:07: bpp: 0.3263
04/21 02:35:07: Sum Loss: 1779.3865
04/21 02:35:07: Loss (s-m-l): [0.001, 0.0586, 0.0]
04/21 02:35:07: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9764, 1.0, 0.9764], [1.0, 1.0, 1.0]]
04/21 02:38:01: 
Iteration: 7700
04/21 02:38:01: Running time: 224.90 min
04/21 02:38:01: Data Loading time: 0.00007 s
04/21 02:38:01: Loss R: 0.0200
04/21 02:38:01: Loss G: 1426.0929
04/21 02:38:01: bpp: 0.3238
04/21 02:38:01: Sum Loss: 1426.8177
04/21 02:38:01: Loss (s-m-l): [0.001, 0.0591, 0.0]
04/21 02:38:01: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9762, 1.0, 0.9762], [1.0, 1.0, 1.0]]
04/21 02:40:52: 
Iteration: 7800
04/21 02:40:52: Running time: 227.75 min
04/21 02:40:52: Data Loading time: 0.00007 s
04/21 02:40:52: Loss R: 0.0190
04/21 02:40:52: Loss G: 1457.2673
04/21 02:40:52: bpp: 0.3289
04/21 02:40:52: Sum Loss: 1457.9771
04/21 02:40:52: Loss (s-m-l): [0.0012, 0.0559, 0.0]
04/21 02:40:52: Metrics (s-m-l): [[0.9996, 1.0, 0.9996], [0.9776, 1.0, 0.9776], [1.0, 1.0, 1.0]]
04/21 02:43:47: 
Iteration: 7900
04/21 02:43:47: Running time: 230.68 min
04/21 02:43:47: Data Loading time: 0.00007 s
04/21 02:43:47: Loss R: 0.0201
04/21 02:43:47: Loss G: 1258.8057
04/21 02:43:47: bpp: 0.3279
04/21 02:43:47: Sum Loss: 1259.5352
04/21 02:43:47: Loss (s-m-l): [0.001, 0.0592, 0.0]
04/21 02:43:47: Metrics (s-m-l): [[0.9996, 1.0, 0.9996], [0.9761, 1.0, 0.9761], [1.0, 1.0, 1.0]]
04/21 02:46:43: 
Iteration: 8000
04/21 02:46:43: Running time: 233.59 min
04/21 02:46:43: Data Loading time: 0.00007 s
04/21 02:46:43: Loss R: 0.0200
04/21 02:46:43: Loss G: 1218.6503
04/21 02:46:43: bpp: 0.3253
04/21 02:46:43: Sum Loss: 1219.3756
04/21 02:46:43: Loss (s-m-l): [0.001, 0.0591, 0.0]
04/21 02:46:43: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9764, 1.0, 0.9764], [1.0, 1.0, 1.0]]
04/21 02:46:43: 
==========Evaluation: iter 8000==========
04/21 02:46:43: save checkpoints: ckpts/tp/tp8000
04/21 02:49:38: 
Iteration: 8100
04/21 02:49:38: Running time: 236.52 min
04/21 02:49:38: Data Loading time: 0.00007 s
04/21 02:49:38: Loss R: 0.0186
04/21 02:49:38: Loss G: 1212.6163
04/21 02:49:38: bpp: 0.3270
04/21 02:49:38: Sum Loss: 1213.3153
04/21 02:49:38: Loss (s-m-l): [0.001, 0.0548, 0.0]
04/21 02:49:38: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9781, 1.0, 0.9781], [1.0, 1.0, 1.0]]
04/21 02:52:31: 
Iteration: 8200
04/21 02:52:31: Running time: 239.40 min
04/21 02:52:31: Data Loading time: 0.00007 s
04/21 02:52:31: Loss R: 0.0188
04/21 02:52:31: Loss G: 908.1727
04/21 02:52:31: bpp: 0.3277
04/21 02:52:31: Sum Loss: 908.8763
04/21 02:52:31: Loss (s-m-l): [0.0009, 0.0554, 0.0]
04/21 02:52:31: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9778, 1.0, 0.9778], [1.0, 1.0, 1.0]]
04/21 02:55:21: 
Iteration: 8300
04/21 02:55:21: Running time: 242.24 min
04/21 02:55:21: Data Loading time: 0.00007 s
04/21 02:55:21: Loss R: 0.0194
04/21 02:55:21: Loss G: 942.6158
04/21 02:55:21: bpp: 0.3296
04/21 02:55:21: Sum Loss: 943.3329
04/21 02:55:21: Loss (s-m-l): [0.001, 0.0571, 0.0]
04/21 02:55:21: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.977, 1.0, 0.977], [1.0, 1.0, 1.0]]
04/21 02:58:17: 
Iteration: 8400
04/21 02:58:17: Running time: 245.16 min
04/21 02:58:17: Data Loading time: 0.00007 s
04/21 02:58:17: Loss R: 0.0194
04/21 02:58:17: Loss G: 775.5447
04/21 02:58:17: bpp: 0.3263
04/21 02:58:17: Sum Loss: 776.2598
04/21 02:58:17: Loss (s-m-l): [0.001, 0.0573, 0.0]
04/21 02:58:17: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.977, 1.0, 0.977], [1.0, 1.0, 1.0]]
04/21 03:01:14: 
Iteration: 8500
04/21 03:01:14: Running time: 248.11 min
04/21 03:01:14: Data Loading time: 0.00007 s
04/21 03:01:14: Loss R: 0.0194
04/21 03:01:14: Loss G: 672.0777
04/21 03:01:14: bpp: 0.3245
04/21 03:01:14: Sum Loss: 672.7893
04/21 03:01:14: Loss (s-m-l): [0.001, 0.057, 0.0]
04/21 03:01:14: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9772, 1.0, 0.9772], [1.0, 1.0, 1.0]]
04/21 03:04:11: 
Iteration: 8600
04/21 03:04:11: Running time: 251.06 min
04/21 03:04:11: Data Loading time: 0.00007 s
04/21 03:04:11: Loss R: 0.0196
04/21 03:04:11: Loss G: 539.8734
04/21 03:04:11: bpp: 0.3271
04/21 03:04:11: Sum Loss: 540.5917
04/21 03:04:11: Loss (s-m-l): [0.001, 0.0577, 0.0]
04/21 03:04:11: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9767, 1.0, 0.9767], [1.0, 1.0, 1.0]]
04/21 03:07:07: 
Iteration: 8700
04/21 03:07:07: Running time: 254.00 min
04/21 03:07:07: Data Loading time: 0.00007 s
04/21 03:07:07: Loss R: 0.0191
04/21 03:07:07: Loss G: 548.0736
04/21 03:07:07: bpp: 0.3264
04/21 03:07:07: Sum Loss: 548.7823
04/21 03:07:07: Loss (s-m-l): [0.001, 0.0563, 0.0]
04/21 03:07:07: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9774, 1.0, 0.9774], [1.0, 1.0, 1.0]]
04/21 03:10:03: 
Iteration: 8800
04/21 03:10:03: Running time: 256.93 min
04/21 03:10:03: Data Loading time: 0.00007 s
04/21 03:10:03: Loss R: 0.0184
04/21 03:10:03: Loss G: 441.0161
04/21 03:10:03: bpp: 0.3268
04/21 03:10:03: Sum Loss: 441.7101
04/21 03:10:03: Loss (s-m-l): [0.001, 0.0541, 0.0]
04/21 03:10:03: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9784, 1.0, 0.9784], [1.0, 1.0, 1.0]]
04/21 03:12:59: 
Iteration: 8900
04/21 03:12:59: Running time: 259.87 min
04/21 03:12:59: Data Loading time: 0.00007 s
04/21 03:12:59: Loss R: 0.0184
04/21 03:12:59: Loss G: 412.1694
04/21 03:12:59: bpp: 0.3262
04/21 03:12:59: Sum Loss: 412.8646
04/21 03:12:59: Loss (s-m-l): [0.001, 0.0544, 0.0]
04/21 03:12:59: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9783, 1.0, 0.9783], [1.0, 1.0, 1.0]]
04/21 03:15:57: 
Iteration: 9000
04/21 03:15:57: Running time: 262.84 min
04/21 03:15:57: Data Loading time: 0.00007 s
04/21 03:15:57: Loss R: 0.0191
04/21 03:15:57: Loss G: 429.6047
04/21 03:15:57: bpp: 0.3223
04/21 03:15:57: Sum Loss: 430.3086
04/21 03:15:57: Loss (s-m-l): [0.001, 0.0563, 0.0]
04/21 03:15:57: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9774, 1.0, 0.9774], [1.0, 1.0, 1.0]]
04/21 03:18:49: 
Iteration: 9100
04/21 03:18:49: Running time: 265.70 min
04/21 03:18:49: Data Loading time: 0.00007 s
04/21 03:18:49: Loss R: 0.0183
04/21 03:18:49: Loss G: 361.7497
04/21 03:18:49: bpp: 0.3293
04/21 03:18:49: Sum Loss: 362.4450
04/21 03:18:49: Loss (s-m-l): [0.001, 0.0539, 0.0]
04/21 03:18:49: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9783, 1.0, 0.9783], [1.0, 1.0, 1.0]]
04/21 03:21:42: 
Iteration: 9200
04/21 03:21:42: Running time: 268.59 min
04/21 03:21:42: Data Loading time: 0.00007 s
04/21 03:21:42: Loss R: 0.0183
04/21 03:21:42: Loss G: 355.3904
04/21 03:21:42: bpp: 0.3270
04/21 03:21:42: Sum Loss: 356.0834
04/21 03:21:42: Loss (s-m-l): [0.0009, 0.054, 0.0]
04/21 03:21:42: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9784, 1.0, 0.9784], [1.0, 1.0, 1.0]]
04/21 03:24:35: 
Iteration: 9300
04/21 03:24:35: Running time: 271.47 min
04/21 03:24:35: Data Loading time: 0.00007 s
04/21 03:24:35: Loss R: 0.0188
04/21 03:24:35: Loss G: 298.1587
04/21 03:24:35: bpp: 0.3277
04/21 03:24:35: Sum Loss: 298.8617
04/21 03:24:35: Loss (s-m-l): [0.001, 0.0553, 0.0]
04/21 03:24:35: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9778, 1.0, 0.9778], [1.0, 1.0, 1.0]]
04/21 03:27:30: 
Iteration: 9400
04/21 03:27:30: Running time: 274.39 min
04/21 03:27:30: Data Loading time: 0.00007 s
04/21 03:27:30: Loss R: 0.0185
04/21 03:27:30: Loss G: 218.8503
04/21 03:27:30: bpp: 0.3270
04/21 03:27:30: Sum Loss: 219.5471
04/21 03:27:30: Loss (s-m-l): [0.001, 0.0545, 0.0]
04/21 03:27:30: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9782, 1.0, 0.9782], [1.0, 1.0, 1.0]]
04/21 03:30:22: 
Iteration: 9500
04/21 03:30:22: Running time: 277.26 min
04/21 03:30:22: Data Loading time: 0.00007 s
04/21 03:30:22: Loss R: 0.0189
04/21 03:30:22: Loss G: 193.8720
04/21 03:30:22: bpp: 0.3276
04/21 03:30:22: Sum Loss: 194.5771
04/21 03:30:22: Loss (s-m-l): [0.001, 0.0556, 0.0]
04/21 03:30:22: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9776, 1.0, 0.9776], [1.0, 1.0, 1.0]]
04/21 03:33:18: 
Iteration: 9600
04/21 03:33:18: Running time: 280.19 min
04/21 03:33:18: Data Loading time: 0.00007 s
04/21 03:33:18: Loss R: 0.0183
04/21 03:33:18: Loss G: 152.7533
04/21 03:33:18: bpp: 0.3283
04/21 03:33:18: Sum Loss: 153.4484
04/21 03:33:18: Loss (s-m-l): [0.0009, 0.0541, 0.0]
04/21 03:33:18: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9786, 1.0, 0.9786], [1.0, 1.0, 1.0]]
04/21 03:36:14: 
Iteration: 9700
04/21 03:36:14: Running time: 283.12 min
04/21 03:36:14: Data Loading time: 0.00007 s
04/21 03:36:14: Loss R: 0.0189
04/21 03:36:14: Loss G: 139.7685
04/21 03:36:14: bpp: 0.3283
04/21 03:36:14: Sum Loss: 140.4757
04/21 03:36:14: Loss (s-m-l): [0.001, 0.0559, 0.0]
04/21 03:36:14: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9774, 1.0, 0.9774], [1.0, 1.0, 1.0]]
04/21 03:39:10: 
Iteration: 9800
04/21 03:39:10: Running time: 286.05 min
04/21 03:39:10: Data Loading time: 0.00007 s
04/21 03:39:10: Loss R: 0.0182
04/21 03:39:10: Loss G: 113.9045
04/21 03:39:10: bpp: 0.3296
04/21 03:39:10: Sum Loss: 114.5978
04/21 03:39:10: Loss (s-m-l): [0.001, 0.0536, 0.0]
04/21 03:39:10: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9785, 1.0, 0.9785], [1.0, 1.0, 1.0]]
04/21 03:42:07: 
Iteration: 9900
04/21 03:42:07: Running time: 289.00 min
04/21 03:42:07: Data Loading time: 0.00007 s
04/21 03:42:07: Loss R: 0.0179
04/21 03:42:07: Loss G: 109.4862
04/21 03:42:07: bpp: 0.3268
04/21 03:42:07: Sum Loss: 110.1717
04/21 03:42:07: Loss (s-m-l): [0.001, 0.0528, 0.0]
04/21 03:42:07: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9788, 1.0, 0.9788], [1.0, 1.0, 1.0]]
04/21 03:45:01: 
Iteration: 10000
04/21 03:45:01: Running time: 291.90 min
04/21 03:45:01: Data Loading time: 0.00007 s
04/21 03:45:01: Loss R: 0.0191
04/21 03:45:01: Loss G: 116.9053
04/21 03:45:01: bpp: 0.3263
04/21 03:45:01: Sum Loss: 117.6146
04/21 03:45:01: Loss (s-m-l): [0.0012, 0.0562, 0.0]
04/21 03:45:01: Metrics (s-m-l): [[0.9996, 1.0, 0.9996], [0.9776, 1.0, 0.9776], [1.0, 1.0, 1.0]]
04/21 03:45:01: 
==========Evaluation: iter 10000==========
04/21 03:45:01: save checkpoints: ckpts/tp/tp10000
04/21 03:47:57: 
Iteration: 10100
04/21 03:47:57: Running time: 294.83 min
04/21 03:47:57: Data Loading time: 0.00007 s
04/21 03:47:57: Loss R: 0.0190
04/21 03:47:57: Loss G: 116.5762
04/21 03:47:57: bpp: 0.3282
04/21 03:47:57: Sum Loss: 117.2840
04/21 03:47:57: Loss (s-m-l): [0.001, 0.056, 0.0]
04/21 03:47:57: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9775, 1.0, 0.9775], [1.0, 1.0, 1.0]]
04/21 03:50:53: 
Iteration: 10200
04/21 03:50:53: Running time: 297.76 min
04/21 03:50:53: Data Loading time: 0.00007 s
04/21 03:50:53: Loss R: 0.0185
04/21 03:50:53: Loss G: 90.5037
04/21 03:50:53: bpp: 0.3277
04/21 03:50:53: Sum Loss: 91.2007
04/21 03:50:53: Loss (s-m-l): [0.0009, 0.0545, 0.0]
04/21 03:50:53: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.978, 1.0, 0.978], [1.0, 1.0, 1.0]]
04/21 03:53:43: 
Iteration: 10300
04/21 03:53:43: Running time: 300.60 min
04/21 03:53:43: Data Loading time: 0.00007 s
04/21 03:53:43: Loss R: 0.0179
04/21 03:53:43: Loss G: 80.3914
04/21 03:53:43: bpp: 0.3279
04/21 03:53:43: Sum Loss: 81.0765
04/21 03:53:43: Loss (s-m-l): [0.0009, 0.0527, 0.0]
04/21 03:53:43: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9789, 1.0, 0.9789], [1.0, 1.0, 1.0]]
04/21 03:56:38: 
Iteration: 10400
04/21 03:56:38: Running time: 303.52 min
04/21 03:56:38: Data Loading time: 0.00007 s
04/21 03:56:38: Loss R: 0.0182
04/21 03:56:38: Loss G: 70.1639
04/21 03:56:38: bpp: 0.3285
04/21 03:56:38: Sum Loss: 70.8560
04/21 03:56:38: Loss (s-m-l): [0.0009, 0.0536, 0.0]
04/21 03:56:38: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9786, 1.0, 0.9786], [1.0, 1.0, 1.0]]
04/21 03:59:32: 
Iteration: 10500
04/21 03:59:32: Running time: 306.41 min
04/21 03:59:32: Data Loading time: 0.00007 s
04/21 03:59:32: Loss R: 0.0180
04/21 03:59:32: Loss G: 78.8836
04/21 03:59:32: bpp: 0.3326
04/21 03:59:32: Sum Loss: 79.5772
04/21 03:59:32: Loss (s-m-l): [0.001, 0.0531, 0.0]
04/21 03:59:32: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9786, 1.0, 0.9786], [1.0, 1.0, 1.0]]
04/21 04:02:22: 
Iteration: 10600
04/21 04:02:22: Running time: 309.25 min
04/21 04:02:22: Data Loading time: 0.00007 s
04/21 04:02:22: Loss R: 0.0184
04/21 04:02:22: Loss G: 83.2876
04/21 04:02:22: bpp: 0.3245
04/21 04:02:22: Sum Loss: 83.9803
04/21 04:02:22: Loss (s-m-l): [0.0009, 0.0543, 0.0]
04/21 04:02:22: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9784, 1.0, 0.9784], [1.0, 1.0, 1.0]]
04/21 04:05:17: 
Iteration: 10700
04/21 04:05:17: Running time: 312.17 min
04/21 04:05:17: Data Loading time: 0.00007 s
04/21 04:05:17: Loss R: 0.0177
04/21 04:05:17: Loss G: 53.0933
04/21 04:05:17: bpp: 0.3283
04/21 04:05:17: Sum Loss: 53.7760
04/21 04:05:17: Loss (s-m-l): [0.0009, 0.0523, 0.0]
04/21 04:05:17: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9791, 1.0, 0.9791], [1.0, 1.0, 1.0]]
04/21 04:08:14: 
Iteration: 10800
04/21 04:08:14: Running time: 315.12 min
04/21 04:08:14: Data Loading time: 0.00007 s
04/21 04:08:14: Loss R: 0.0187
04/21 04:08:14: Loss G: 52.7900
04/21 04:08:14: bpp: 0.3281
04/21 04:08:14: Sum Loss: 53.4919
04/21 04:08:14: Loss (s-m-l): [0.001, 0.0551, 0.0]
04/21 04:08:14: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9779, 1.0, 0.9779], [1.0, 1.0, 1.0]]
04/21 04:11:12: 
Iteration: 10900
04/21 04:11:12: Running time: 318.08 min
04/21 04:11:12: Data Loading time: 0.00007 s
04/21 04:11:12: Loss R: 0.0201
04/21 04:11:12: Loss G: 49.0573
04/21 04:11:12: bpp: 0.3268
04/21 04:11:12: Sum Loss: 49.7852
04/21 04:11:12: Loss (s-m-l): [0.0012, 0.059, 0.0]
04/21 04:11:12: Metrics (s-m-l): [[0.9996, 1.0, 0.9996], [0.9765, 1.0, 0.9765], [1.0, 1.0, 1.0]]
04/21 04:14:08: 
Iteration: 11000
04/21 04:14:08: Running time: 321.02 min
04/21 04:14:08: Data Loading time: 0.00011 s
04/21 04:14:08: Loss R: 0.0187
04/21 04:14:08: Loss G: 46.4023
04/21 04:14:08: bpp: 0.3285
04/21 04:14:08: Sum Loss: 47.1043
04/21 04:14:08: Loss (s-m-l): [0.0009, 0.0551, 0.0]
04/21 04:14:08: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9778, 1.0, 0.9778], [1.0, 1.0, 1.0]]
04/21 04:17:04: 
Iteration: 11100
04/21 04:17:04: Running time: 323.96 min
04/21 04:17:04: Data Loading time: 0.00007 s
04/21 04:17:04: Loss R: 0.0181
04/21 04:17:04: Loss G: 46.4397
04/21 04:17:04: bpp: 0.3266
04/21 04:17:04: Sum Loss: 47.1278
04/21 04:17:04: Loss (s-m-l): [0.0009, 0.0534, 0.0]
04/21 04:17:04: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9784, 1.0, 0.9784], [1.0, 1.0, 1.0]]
04/21 04:20:03: 
Iteration: 11200
04/21 04:20:03: Running time: 326.94 min
04/21 04:20:03: Data Loading time: 0.00007 s
04/21 04:20:03: Loss R: 0.0179
04/21 04:20:03: Loss G: 45.4845
04/21 04:20:03: bpp: 0.3266
04/21 04:20:03: Sum Loss: 46.1684
04/21 04:20:03: Loss (s-m-l): [0.0009, 0.0527, 0.0]
04/21 04:20:03: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.979, 1.0, 0.979], [1.0, 1.0, 1.0]]
04/21 04:22:56: 
Iteration: 11300
04/21 04:22:56: Running time: 329.82 min
04/21 04:22:56: Data Loading time: 0.00007 s
04/21 04:22:56: Loss R: 0.0173
04/21 04:22:56: Loss G: 31.2880
04/21 04:22:56: bpp: 0.3257
04/21 04:22:56: Sum Loss: 31.9589
04/21 04:22:56: Loss (s-m-l): [0.0009, 0.0509, 0.0]
04/21 04:22:56: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9797, 1.0, 0.9797], [1.0, 1.0, 1.0]]
04/21 04:25:48: 
Iteration: 11400
04/21 04:25:48: Running time: 332.69 min
04/21 04:25:48: Data Loading time: 0.00007 s
04/21 04:25:48: Loss R: 0.0173
04/21 04:25:48: Loss G: 29.9285
04/21 04:25:48: bpp: 0.3295
04/21 04:25:48: Sum Loss: 30.6045
04/21 04:25:48: Loss (s-m-l): [0.0009, 0.0511, 0.0]
04/21 04:25:48: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9795, 1.0, 0.9795], [1.0, 1.0, 1.0]]
04/21 04:28:47: 
Iteration: 11500
04/21 04:28:47: Running time: 335.67 min
04/21 04:28:47: Data Loading time: 0.00007 s
04/21 04:28:47: Loss R: 0.0177
04/21 04:28:47: Loss G: 36.0283
04/21 04:28:47: bpp: 0.3268
04/21 04:28:47: Sum Loss: 36.7094
04/21 04:28:47: Loss (s-m-l): [0.0009, 0.0522, 0.0]
04/21 04:28:47: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9789, 1.0, 0.9789], [1.0, 1.0, 1.0]]
04/21 04:31:45: 
Iteration: 11600
04/21 04:31:45: Running time: 338.63 min
04/21 04:31:45: Data Loading time: 0.00007 s
04/21 04:31:45: Loss R: 0.0177
04/21 04:31:45: Loss G: 30.4430
04/21 04:31:45: bpp: 0.3270
04/21 04:31:45: Sum Loss: 31.1237
04/21 04:31:45: Loss (s-m-l): [0.0009, 0.0522, 0.0]
04/21 04:31:45: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9792, 1.0, 0.9792], [1.0, 1.0, 1.0]]
04/21 04:34:42: 
Iteration: 11700
04/21 04:34:42: Running time: 341.58 min
04/21 04:34:42: Data Loading time: 0.00007 s
04/21 04:34:42: Loss R: 0.0176
04/21 04:34:42: Loss G: 28.7235
04/21 04:34:42: bpp: 0.3282
04/21 04:34:42: Sum Loss: 29.4035
04/21 04:34:42: Loss (s-m-l): [0.0009, 0.0519, 0.0]
04/21 04:34:42: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9791, 1.0, 0.9791], [1.0, 1.0, 1.0]]
04/21 04:37:31: 
Iteration: 11800
04/21 04:37:31: Running time: 344.39 min
04/21 04:37:31: Data Loading time: 0.00007 s
04/21 04:37:31: Loss R: 0.0184
04/21 04:37:31: Loss G: 24.6010
04/21 04:37:31: bpp: 0.3313
04/21 04:37:31: Sum Loss: 25.2994
04/21 04:37:31: Loss (s-m-l): [0.001, 0.0541, 0.0]
04/21 04:37:31: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9783, 1.0, 0.9783], [1.0, 1.0, 1.0]]
04/21 04:40:31: 
Iteration: 11900
04/21 04:40:31: Running time: 347.40 min
04/21 04:40:31: Data Loading time: 0.00007 s
04/21 04:40:31: Loss R: 0.0167
04/21 04:40:31: Loss G: 26.4022
04/21 04:40:31: bpp: 0.3258
04/21 04:40:31: Sum Loss: 27.0629
04/21 04:40:31: Loss (s-m-l): [0.0009, 0.0493, 0.0]
04/21 04:40:31: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9802, 1.0, 0.9802], [1.0, 1.0, 1.0]]
04/21 04:43:26: 
Iteration: 12000
04/21 04:43:26: Running time: 350.32 min
04/21 04:43:26: Data Loading time: 0.00009 s
04/21 04:43:26: Loss R: 0.0169
04/21 04:43:26: Loss G: 20.3865
04/21 04:43:26: bpp: 0.3279
04/21 04:43:26: Sum Loss: 21.0530
04/21 04:43:26: Loss (s-m-l): [0.0009, 0.0499, 0.0]
04/21 04:43:26: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9801, 1.0, 0.9801], [1.0, 1.0, 1.0]]
04/21 04:43:26: 
==========Evaluation: iter 12000==========
04/21 04:43:26: save checkpoints: ckpts/tp/tp12000
04/21 04:43:26: LR: [0.0001, 0.0001, 0.0001]
04/21 04:46:19: 
Iteration: 12100
04/21 04:46:19: Running time: 353.20 min
04/21 04:46:19: Data Loading time: 0.00007 s
04/21 04:46:19: Loss R: 0.0163
04/21 04:46:19: Loss G: 18.2809
04/21 04:46:19: bpp: 0.3264
04/21 04:46:19: Sum Loss: 18.9330
04/21 04:46:19: Loss (s-m-l): [0.0008, 0.0481, 0.0]
04/21 04:46:19: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9808, 1.0, 0.9808], [1.0, 1.0, 1.0]]
04/21 04:49:15: 
Iteration: 12200
04/21 04:49:15: Running time: 356.14 min
04/21 04:49:15: Data Loading time: 0.00007 s
04/21 04:49:15: Loss R: 0.0160
04/21 04:49:15: Loss G: 18.8330
04/21 04:49:15: bpp: 0.3248
04/21 04:49:15: Sum Loss: 19.4777
04/21 04:49:15: Loss (s-m-l): [0.0007, 0.0472, 0.0]
04/21 04:49:15: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9811, 1.0, 0.9811], [1.0, 1.0, 1.0]]
04/21 04:52:11: 
Iteration: 12300
04/21 04:52:11: Running time: 359.07 min
04/21 04:52:11: Data Loading time: 0.00007 s
04/21 04:52:11: Loss R: 0.0163
04/21 04:52:11: Loss G: 23.2686
04/21 04:52:11: bpp: 0.3250
04/21 04:52:11: Sum Loss: 23.9189
04/21 04:52:11: Loss (s-m-l): [0.0007, 0.0481, 0.0]
04/21 04:52:11: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9807, 1.0, 0.9807], [1.0, 1.0, 1.0]]
04/21 04:55:05: 
Iteration: 12400
04/21 04:55:05: Running time: 361.96 min
04/21 04:55:05: Data Loading time: 0.00007 s
04/21 04:55:05: Loss R: 0.0165
04/21 04:55:05: Loss G: 18.7033
04/21 04:55:05: bpp: 0.3268
04/21 04:55:05: Sum Loss: 19.3600
04/21 04:55:05: Loss (s-m-l): [0.0008, 0.0487, 0.0]
04/21 04:55:05: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9805, 1.0, 0.9805], [1.0, 1.0, 1.0]]
04/21 04:57:59: 
Iteration: 12500
04/21 04:57:59: Running time: 364.86 min
04/21 04:57:59: Data Loading time: 0.00007 s
04/21 04:57:59: Loss R: 0.0160
04/21 04:57:59: Loss G: 18.1657
04/21 04:57:59: bpp: 0.3254
04/21 04:57:59: Sum Loss: 18.8107
04/21 04:57:59: Loss (s-m-l): [0.0007, 0.0472, 0.0]
04/21 04:57:59: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9811, 1.0, 0.9811], [1.0, 1.0, 1.0]]
04/21 05:00:54: 
Iteration: 12600
04/21 05:00:54: Running time: 367.79 min
04/21 05:00:54: Data Loading time: 0.00007 s
04/21 05:00:54: Loss R: 0.0160
04/21 05:00:54: Loss G: 18.4070
04/21 05:00:54: bpp: 0.3263
04/21 05:00:54: Sum Loss: 19.0534
04/21 05:00:54: Loss (s-m-l): [0.0008, 0.0473, 0.0]
04/21 05:00:54: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.981, 1.0, 0.981], [1.0, 1.0, 1.0]]
04/21 05:03:48: 
Iteration: 12700
04/21 05:03:48: Running time: 370.69 min
04/21 05:03:48: Data Loading time: 0.00007 s
04/21 05:03:48: Loss R: 0.0165
04/21 05:03:48: Loss G: 17.4499
04/21 05:03:48: bpp: 0.3296
04/21 05:03:48: Sum Loss: 18.1087
04/21 05:03:48: Loss (s-m-l): [0.0008, 0.0486, 0.0]
04/21 05:03:48: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9803, 1.0, 0.9803], [1.0, 1.0, 1.0]]
04/21 05:06:42: 
Iteration: 12800
04/21 05:06:42: Running time: 373.59 min
04/21 05:06:42: Data Loading time: 0.00009 s
04/21 05:06:42: Loss R: 0.0153
04/21 05:06:42: Loss G: 17.5699
04/21 05:06:42: bpp: 0.3249
04/21 05:06:42: Sum Loss: 18.2019
04/21 05:06:42: Loss (s-m-l): [0.0008, 0.0453, 0.0]
04/21 05:06:42: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9821, 1.0, 0.9821], [1.0, 1.0, 1.0]]
04/21 05:09:34: 
Iteration: 12900
04/21 05:09:34: Running time: 376.46 min
04/21 05:09:34: Data Loading time: 0.00007 s
04/21 05:09:34: Loss R: 0.0157
04/21 05:09:34: Loss G: 18.3524
04/21 05:09:34: bpp: 0.3285
04/21 05:09:34: Sum Loss: 18.9947
04/21 05:09:34: Loss (s-m-l): [0.0008, 0.0463, 0.0]
04/21 05:09:34: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9814, 1.0, 0.9814], [1.0, 1.0, 1.0]]
04/21 05:12:28: 
Iteration: 13000
04/21 05:12:28: Running time: 379.35 min
04/21 05:12:28: Data Loading time: 0.00007 s
04/21 05:12:28: Loss R: 0.0160
04/21 05:12:28: Loss G: 17.7570
04/21 05:12:28: bpp: 0.3253
04/21 05:12:28: Sum Loss: 18.4014
04/21 05:12:28: Loss (s-m-l): [0.0008, 0.0471, 0.0]
04/21 05:12:28: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9811, 1.0, 0.9811], [1.0, 1.0, 1.0]]
04/21 05:15:25: 
Iteration: 13100
04/21 05:15:25: Running time: 382.30 min
04/21 05:15:25: Data Loading time: 0.00007 s
04/21 05:15:25: Loss R: 0.0164
04/21 05:15:25: Loss G: 21.4589
04/21 05:15:25: bpp: 0.3274
04/21 05:15:25: Sum Loss: 22.1142
04/21 05:15:25: Loss (s-m-l): [0.0008, 0.0484, 0.0]
04/21 05:15:25: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9805, 1.0, 0.9805], [1.0, 1.0, 1.0]]
04/21 05:18:22: 
Iteration: 13200
04/21 05:18:22: Running time: 385.25 min
04/21 05:18:22: Data Loading time: 0.00007 s
04/21 05:18:22: Loss R: 0.0163
04/21 05:18:22: Loss G: 22.4231
04/21 05:18:22: bpp: 0.3223
04/21 05:18:22: Sum Loss: 23.0715
04/21 05:18:22: Loss (s-m-l): [0.0008, 0.0481, 0.0]
04/21 05:18:22: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9807, 1.0, 0.9807], [1.0, 1.0, 1.0]]
04/21 05:21:17: 
Iteration: 13300
04/21 05:21:17: Running time: 388.16 min
04/21 05:21:17: Data Loading time: 0.00007 s
04/21 05:21:17: Loss R: 0.0161
04/21 05:21:17: Loss G: 23.6671
04/21 05:21:17: bpp: 0.3253
04/21 05:21:17: Sum Loss: 24.3152
04/21 05:21:17: Loss (s-m-l): [0.0008, 0.0476, 0.0]
04/21 05:21:17: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9807, 1.0, 0.9807], [1.0, 1.0, 1.0]]
04/21 05:24:15: 
Iteration: 13400
04/21 05:24:15: Running time: 391.13 min
04/21 05:24:15: Data Loading time: 0.00010 s
04/21 05:24:15: Loss R: 0.0158
04/21 05:24:15: Loss G: 19.1255
04/21 05:24:15: bpp: 0.3262
04/21 05:24:15: Sum Loss: 19.7671
04/21 05:24:15: Loss (s-m-l): [0.0007, 0.0466, 0.0]
04/21 05:24:15: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9812, 1.0, 0.9812], [1.0, 1.0, 1.0]]
04/21 05:27:11: 
Iteration: 13500
04/21 05:27:11: Running time: 394.07 min
04/21 05:27:11: Data Loading time: 0.00007 s
04/21 05:27:11: Loss R: 0.0159
04/21 05:27:11: Loss G: 16.5903
04/21 05:27:11: bpp: 0.3242
04/21 05:27:11: Sum Loss: 17.2330
04/21 05:27:11: Loss (s-m-l): [0.0008, 0.047, 0.0]
04/21 05:27:11: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9813, 1.0, 0.9813], [1.0, 1.0, 1.0]]
04/21 05:30:01: 
Iteration: 13600
04/21 05:30:01: Running time: 396.90 min
04/21 05:30:01: Data Loading time: 0.00007 s
04/21 05:30:01: Loss R: 0.0155
04/21 05:30:01: Loss G: 17.7471
04/21 05:30:01: bpp: 0.3269
04/21 05:30:01: Sum Loss: 18.3830
04/21 05:30:01: Loss (s-m-l): [0.0008, 0.0456, 0.0]
04/21 05:30:01: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9819, 1.0, 0.9819], [1.0, 1.0, 1.0]]
04/21 05:32:57: 
Iteration: 13700
04/21 05:32:57: Running time: 399.83 min
04/21 05:32:57: Data Loading time: 0.00007 s
04/21 05:32:57: Loss R: 0.0156
04/21 05:32:57: Loss G: 16.5153
04/21 05:32:57: bpp: 0.3276
04/21 05:32:57: Sum Loss: 17.1559
04/21 05:32:57: Loss (s-m-l): [0.0008, 0.0462, 0.0]
04/21 05:32:57: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9815, 1.0, 0.9815], [1.0, 1.0, 1.0]]
04/21 05:35:53: 
Iteration: 13800
04/21 05:35:53: Running time: 402.77 min
04/21 05:35:53: Data Loading time: 0.00007 s
04/21 05:35:53: Loss R: 0.0159
04/21 05:35:53: Loss G: 17.1755
04/21 05:35:53: bpp: 0.3271
04/21 05:35:53: Sum Loss: 17.8209
04/21 05:35:53: Loss (s-m-l): [0.0008, 0.047, 0.0]
04/21 05:35:53: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9813, 1.0, 0.9813], [1.0, 1.0, 1.0]]
04/21 05:38:47: 
Iteration: 13900
04/21 05:38:47: Running time: 405.67 min
04/21 05:38:47: Data Loading time: 0.00007 s
04/21 05:38:47: Loss R: 0.0158
04/21 05:38:47: Loss G: 20.0481
04/21 05:38:47: bpp: 0.3258
04/21 05:38:47: Sum Loss: 20.6905
04/21 05:38:47: Loss (s-m-l): [0.0008, 0.0467, 0.0]
04/21 05:38:47: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9813, 1.0, 0.9813], [1.0, 1.0, 1.0]]
04/21 05:41:39: 
Iteration: 14000
04/21 05:41:39: Running time: 408.53 min
04/21 05:41:39: Data Loading time: 0.00007 s
04/21 05:41:39: Loss R: 0.0157
04/21 05:41:39: Loss G: 28.4664
04/21 05:41:39: bpp: 0.3270
04/21 05:41:39: Sum Loss: 29.1073
04/21 05:41:39: Loss (s-m-l): [0.0008, 0.0463, 0.0]
04/21 05:41:39: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9813, 1.0, 0.9813], [1.0, 1.0, 1.0]]
04/21 05:41:39: 
==========Evaluation: iter 14000==========
04/21 05:41:39: save checkpoints: ckpts/tp/tp14000
04/21 05:44:35: 
Iteration: 14100
04/21 05:44:35: Running time: 411.47 min
04/21 05:44:35: Data Loading time: 0.00007 s
04/21 05:44:35: Loss R: 0.0154
04/21 05:44:35: Loss G: 16.8819
04/21 05:44:35: bpp: 0.3197
04/21 05:44:35: Sum Loss: 17.5104
04/21 05:44:35: Loss (s-m-l): [0.0007, 0.0456, 0.0]
04/21 05:44:35: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.982, 1.0, 0.982], [1.0, 1.0, 1.0]]
04/21 05:47:29: 
Iteration: 14200
04/21 05:47:29: Running time: 414.36 min
04/21 05:47:29: Data Loading time: 0.00007 s
04/21 05:47:29: Loss R: 0.0151
04/21 05:47:29: Loss G: 17.0630
04/21 05:47:29: bpp: 0.3274
04/21 05:47:29: Sum Loss: 17.6924
04/21 05:47:29: Loss (s-m-l): [0.0008, 0.0445, 0.0]
04/21 05:47:29: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9822, 1.0, 0.9822], [1.0, 1.0, 1.0]]
04/21 05:50:26: 
Iteration: 14300
04/21 05:50:26: Running time: 417.31 min
04/21 05:50:26: Data Loading time: 0.00009 s
04/21 05:50:26: Loss R: 0.0162
04/21 05:50:26: Loss G: 16.0401
04/21 05:50:26: bpp: 0.3242
04/21 05:50:26: Sum Loss: 16.6893
04/21 05:50:26: Loss (s-m-l): [0.0007, 0.048, 0.0]
04/21 05:50:26: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9807, 1.0, 0.9807], [1.0, 1.0, 1.0]]
04/21 05:53:19: 
Iteration: 14400
04/21 05:53:19: Running time: 420.20 min
04/21 05:53:19: Data Loading time: 0.00009 s
04/21 05:53:19: Loss R: 0.0156
04/21 05:53:19: Loss G: 18.0517
04/21 05:53:19: bpp: 0.3254
04/21 05:53:19: Sum Loss: 18.6894
04/21 05:53:19: Loss (s-m-l): [0.0008, 0.0461, 0.0]
04/21 05:53:19: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9815, 1.0, 0.9815], [1.0, 1.0, 1.0]]
04/21 05:56:16: 
Iteration: 14500
04/21 05:56:16: Running time: 423.15 min
04/21 05:56:16: Data Loading time: 0.00007 s
04/21 05:56:16: Loss R: 0.0149
04/21 05:56:16: Loss G: 15.9982
04/21 05:56:16: bpp: 0.3284
04/21 05:56:16: Sum Loss: 16.6243
04/21 05:56:16: Loss (s-m-l): [0.0007, 0.0439, 0.0]
04/21 05:56:16: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9824, 1.0, 0.9824], [1.0, 1.0, 1.0]]
04/21 05:59:10: 
Iteration: 14600
04/21 05:59:10: Running time: 426.06 min
04/21 05:59:10: Data Loading time: 0.00007 s
04/21 05:59:10: Loss R: 0.0162
04/21 05:59:10: Loss G: 28.4860
04/21 05:59:10: bpp: 0.3253
04/21 05:59:10: Sum Loss: 29.1356
04/21 05:59:10: Loss (s-m-l): [0.0008, 0.0479, 0.0]
04/21 05:59:10: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9807, 1.0, 0.9807], [1.0, 1.0, 1.0]]
04/21 06:02:05: 
Iteration: 14700
04/21 06:02:05: Running time: 428.97 min
04/21 06:02:05: Data Loading time: 0.00007 s
04/21 06:02:05: Loss R: 0.0154
04/21 06:02:05: Loss G: 21.6077
04/21 06:02:05: bpp: 0.3283
04/21 06:02:05: Sum Loss: 22.2443
04/21 06:02:05: Loss (s-m-l): [0.0008, 0.0455, 0.0]
04/21 06:02:05: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9817, 1.0, 0.9817], [1.0, 1.0, 1.0]]
04/21 06:04:58: 
Iteration: 14800
04/21 06:04:58: Running time: 431.86 min
04/21 06:04:58: Data Loading time: 0.00007 s
04/21 06:04:58: Loss R: 0.0154
04/21 06:04:58: Loss G: 19.5525
04/21 06:04:58: bpp: 0.3268
04/21 06:04:58: Sum Loss: 20.1869
04/21 06:04:58: Loss (s-m-l): [0.0007, 0.0454, 0.0]
04/21 06:04:58: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9818, 1.0, 0.9818], [1.0, 1.0, 1.0]]
04/21 06:07:53: 
Iteration: 14900
04/21 06:07:53: Running time: 434.76 min
04/21 06:07:53: Data Loading time: 0.00010 s
04/21 06:07:53: Loss R: 0.0156
04/21 06:07:53: Loss G: 16.0208
04/21 06:07:53: bpp: 0.3276
04/21 06:07:53: Sum Loss: 16.6612
04/21 06:07:53: Loss (s-m-l): [0.0008, 0.0461, 0.0]
04/21 06:07:53: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9816, 1.0, 0.9816], [1.0, 1.0, 1.0]]
04/21 06:10:48: 
Iteration: 15000
04/21 06:10:48: Running time: 437.68 min
04/21 06:10:48: Data Loading time: 0.00007 s
04/21 06:10:48: Loss R: 0.0154
04/21 06:10:48: Loss G: 18.6285
04/21 06:10:48: bpp: 0.3251
04/21 06:10:48: Sum Loss: 19.2610
04/21 06:10:48: Loss (s-m-l): [0.0007, 0.0454, 0.0]
04/21 06:10:48: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9819, 1.0, 0.9819], [1.0, 1.0, 1.0]]
04/21 06:13:43: 
Iteration: 15100
04/21 06:13:43: Running time: 440.59 min
04/21 06:13:43: Data Loading time: 0.00007 s
04/21 06:13:43: Loss R: 0.0158
04/21 06:13:43: Loss G: 20.7859
04/21 06:13:43: bpp: 0.3246
04/21 06:13:43: Sum Loss: 21.4259
04/21 06:13:43: Loss (s-m-l): [0.0008, 0.0465, 0.0]
04/21 06:13:43: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9814, 1.0, 0.9814], [1.0, 1.0, 1.0]]
04/21 06:16:41: 
Iteration: 15200
04/21 06:16:41: Running time: 443.56 min
04/21 06:16:41: Data Loading time: 0.00007 s
04/21 06:16:41: Loss R: 0.0155
04/21 06:16:41: Loss G: 16.2342
04/21 06:16:41: bpp: 0.3262
04/21 06:16:41: Sum Loss: 16.8700
04/21 06:16:41: Loss (s-m-l): [0.0008, 0.0457, 0.0]
04/21 06:16:41: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9818, 1.0, 0.9818], [1.0, 1.0, 1.0]]
04/21 06:19:32: 
Iteration: 15300
04/21 06:19:32: Running time: 446.42 min
04/21 06:19:32: Data Loading time: 0.00007 s
04/21 06:19:32: Loss R: 0.0151
04/21 06:19:32: Loss G: 20.5159
04/21 06:19:32: bpp: 0.3303
04/21 06:19:32: Sum Loss: 21.1487
04/21 06:19:32: Loss (s-m-l): [0.0008, 0.0446, 0.0]
04/21 06:19:32: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.982, 1.0, 0.982], [1.0, 1.0, 1.0]]
04/21 06:22:30: 
Iteration: 15400
04/21 06:22:30: Running time: 449.38 min
04/21 06:22:30: Data Loading time: 0.00007 s
04/21 06:22:30: Loss R: 0.0150
04/21 06:22:30: Loss G: 18.1199
04/21 06:22:30: bpp: 0.3247
04/21 06:22:30: Sum Loss: 18.7444
04/21 06:22:30: Loss (s-m-l): [0.0007, 0.0442, 0.0]
04/21 06:22:30: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9824, 1.0, 0.9824], [1.0, 1.0, 1.0]]
04/21 06:25:27: 
Iteration: 15500
04/21 06:25:27: Running time: 452.33 min
04/21 06:25:27: Data Loading time: 0.00007 s
04/21 06:25:27: Loss R: 0.0159
04/21 06:25:27: Loss G: 21.6573
04/21 06:25:27: bpp: 0.3232
04/21 06:25:27: Sum Loss: 22.2984
04/21 06:25:27: Loss (s-m-l): [0.0008, 0.0469, 0.0]
04/21 06:25:27: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9811, 1.0, 0.9811], [1.0, 1.0, 1.0]]
04/21 06:28:25: 
Iteration: 15600
04/21 06:28:25: Running time: 455.30 min
04/21 06:28:25: Data Loading time: 0.00007 s
04/21 06:28:25: Loss R: 0.0154
04/21 06:28:25: Loss G: 30.7341
04/21 06:28:25: bpp: 0.3219
04/21 06:28:25: Sum Loss: 31.3641
04/21 06:28:25: Loss (s-m-l): [0.0007, 0.0455, 0.0]
04/21 06:28:25: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9819, 1.0, 0.9819], [1.0, 1.0, 1.0]]
04/21 06:31:20: 
Iteration: 15700
04/21 06:31:20: Running time: 458.21 min
04/21 06:31:20: Data Loading time: 0.00007 s
04/21 06:31:20: Loss R: 0.0150
04/21 06:31:20: Loss G: 16.7128
04/21 06:31:20: bpp: 0.3254
04/21 06:31:20: Sum Loss: 17.3375
04/21 06:31:20: Loss (s-m-l): [0.0008, 0.0441, 0.0]
04/21 06:31:20: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9824, 1.0, 0.9824], [1.0, 1.0, 1.0]]
04/21 06:34:13: 
Iteration: 15800
04/21 06:34:13: Running time: 461.11 min
04/21 06:34:13: Data Loading time: 0.00007 s
04/21 06:34:13: Loss R: 0.0155
04/21 06:34:13: Loss G: 22.7013
04/21 06:34:13: bpp: 0.3277
04/21 06:34:13: Sum Loss: 23.3383
04/21 06:34:13: Loss (s-m-l): [0.0008, 0.0456, 0.0]
04/21 06:34:13: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9817, 1.0, 0.9817], [1.0, 1.0, 1.0]]
04/21 06:37:07: 
Iteration: 15900
04/21 06:37:07: Running time: 464.00 min
04/21 06:37:07: Data Loading time: 0.00007 s
04/21 06:37:07: Loss R: 0.0151
04/21 06:37:07: Loss G: 17.2811
04/21 06:37:07: bpp: 0.3274
04/21 06:37:07: Sum Loss: 17.9104
04/21 06:37:07: Loss (s-m-l): [0.0007, 0.0446, 0.0]
04/21 06:37:07: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9822, 1.0, 0.9822], [1.0, 1.0, 1.0]]
04/21 06:39:58: 
Iteration: 16000
04/21 06:39:58: Running time: 466.85 min
04/21 06:39:58: Data Loading time: 0.00007 s
04/21 06:39:58: Loss R: 0.0158
04/21 06:39:58: Loss G: 16.1545
04/21 06:39:58: bpp: 0.3268
04/21 06:39:58: Sum Loss: 16.7969
04/21 06:39:58: Loss (s-m-l): [0.0007, 0.0466, 0.0]
04/21 06:39:58: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9812, 1.0, 0.9812], [1.0, 1.0, 1.0]]
04/21 06:39:58: 
==========Evaluation: iter 16000==========
04/21 06:39:58: save checkpoints: ckpts/tp/tp16000
04/21 06:42:53: 
Iteration: 16100
04/21 06:42:53: Running time: 469.77 min
04/21 06:42:53: Data Loading time: 0.00010 s
04/21 06:42:53: Loss R: 0.0151
04/21 06:42:53: Loss G: 16.4999
04/21 06:42:53: bpp: 0.3229
04/21 06:42:53: Sum Loss: 17.1255
04/21 06:42:53: Loss (s-m-l): [0.0008, 0.0446, 0.0]
04/21 06:42:53: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9822, 1.0, 0.9822], [1.0, 1.0, 1.0]]
04/21 06:45:46: 
Iteration: 16200
04/21 06:45:46: Running time: 472.66 min
04/21 06:45:46: Data Loading time: 0.00007 s
04/21 06:45:46: Loss R: 0.0151
04/21 06:45:46: Loss G: 18.1860
04/21 06:45:46: bpp: 0.3282
04/21 06:45:46: Sum Loss: 18.8167
04/21 06:45:46: Loss (s-m-l): [0.0008, 0.0446, 0.0]
04/21 06:45:46: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9821, 1.0, 0.9821], [1.0, 1.0, 1.0]]
04/21 06:48:43: 
Iteration: 16300
04/21 06:48:43: Running time: 475.60 min
04/21 06:48:43: Data Loading time: 0.00007 s
04/21 06:48:43: Loss R: 0.0155
04/21 06:48:43: Loss G: 18.3810
04/21 06:48:43: bpp: 0.3232
04/21 06:48:43: Sum Loss: 19.0136
04/21 06:48:43: Loss (s-m-l): [0.0007, 0.0457, 0.0]
04/21 06:48:43: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9819, 1.0, 0.9819], [1.0, 1.0, 1.0]]
04/21 06:51:39: 
Iteration: 16400
04/21 06:51:39: Running time: 478.54 min
04/21 06:51:39: Data Loading time: 0.00007 s
04/21 06:51:39: Loss R: 0.0148
04/21 06:51:39: Loss G: 16.5515
04/21 06:51:39: bpp: 0.3255
04/21 06:51:39: Sum Loss: 17.1732
04/21 06:51:39: Loss (s-m-l): [0.0007, 0.0437, 0.0]
04/21 06:51:39: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9826, 1.0, 0.9826], [1.0, 1.0, 1.0]]
04/21 06:54:31: 
Iteration: 16500
04/21 06:54:31: Running time: 481.40 min
04/21 06:54:31: Data Loading time: 0.00007 s
04/21 06:54:31: Loss R: 0.0151
04/21 06:54:31: Loss G: 19.5326
04/21 06:54:31: bpp: 0.3263
04/21 06:54:31: Sum Loss: 20.1601
04/21 06:54:31: Loss (s-m-l): [0.0008, 0.0444, 0.0]
04/21 06:54:31: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9823, 1.0, 0.9823], [1.0, 1.0, 1.0]]
04/21 06:57:24: 
Iteration: 16600
04/21 06:57:24: Running time: 484.29 min
04/21 06:57:24: Data Loading time: 0.00007 s
04/21 06:57:24: Loss R: 0.0153
04/21 06:57:24: Loss G: 17.6342
04/21 06:57:24: bpp: 0.3262
04/21 06:57:24: Sum Loss: 18.2664
04/21 06:57:24: Loss (s-m-l): [0.0007, 0.0452, 0.0]
04/21 06:57:24: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.982, 1.0, 0.982], [1.0, 1.0, 1.0]]
04/21 07:00:20: 
Iteration: 16700
04/21 07:00:20: Running time: 487.22 min
04/21 07:00:20: Data Loading time: 0.00007 s
04/21 07:00:20: Loss R: 0.0148
04/21 07:00:20: Loss G: 42.9242
04/21 07:00:20: bpp: 0.3243
04/21 07:00:20: Sum Loss: 43.5453
04/21 07:00:20: Loss (s-m-l): [0.0007, 0.0438, 0.0]
04/21 07:00:20: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9825, 1.0, 0.9825], [1.0, 1.0, 1.0]]
04/21 07:03:17: 
Iteration: 16800
04/21 07:03:17: Running time: 490.17 min
04/21 07:03:17: Data Loading time: 0.00007 s
04/21 07:03:17: Loss R: 0.0152
04/21 07:03:17: Loss G: 25.4452
04/21 07:03:17: bpp: 0.3268
04/21 07:03:17: Sum Loss: 26.0762
04/21 07:03:17: Loss (s-m-l): [0.0008, 0.0449, 0.0]
04/21 07:03:17: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9821, 1.0, 0.9821], [1.0, 1.0, 1.0]]
04/21 07:06:13: 
Iteration: 16900
04/21 07:06:13: Running time: 493.10 min
04/21 07:06:13: Data Loading time: 0.00007 s
04/21 07:06:13: Loss R: 0.0151
04/21 07:06:13: Loss G: 24.1015
04/21 07:06:13: bpp: 0.3289
04/21 07:06:13: Sum Loss: 24.7325
04/21 07:06:13: Loss (s-m-l): [0.0008, 0.0445, 0.0]
04/21 07:06:13: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9822, 1.0, 0.9822], [1.0, 1.0, 1.0]]
04/21 07:09:05: 
Iteration: 17000
04/21 07:09:05: Running time: 495.97 min
04/21 07:09:05: Data Loading time: 0.00007 s
04/21 07:09:05: Loss R: 0.0152
04/21 07:09:05: Loss G: 24.3005
04/21 07:09:05: bpp: 0.3281
04/21 07:09:05: Sum Loss: 24.9328
04/21 07:09:05: Loss (s-m-l): [0.0008, 0.0449, 0.0]
04/21 07:09:05: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.982, 1.0, 0.982], [1.0, 1.0, 1.0]]
04/21 07:12:02: 
Iteration: 17100
04/21 07:12:02: Running time: 498.91 min
04/21 07:12:02: Data Loading time: 0.00007 s
04/21 07:12:02: Loss R: 0.0153
04/21 07:12:02: Loss G: 22.0203
04/21 07:12:02: bpp: 0.3255
04/21 07:12:02: Sum Loss: 22.6513
04/21 07:12:02: Loss (s-m-l): [0.0008, 0.0451, 0.0]
04/21 07:12:02: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9819, 1.0, 0.9819], [1.0, 1.0, 1.0]]
04/21 07:14:54: 
Iteration: 17200
04/21 07:14:54: Running time: 501.79 min
04/21 07:14:54: Data Loading time: 0.00007 s
04/21 07:14:54: Loss R: 0.0148
04/21 07:14:54: Loss G: 17.3267
04/21 07:14:54: bpp: 0.3253
04/21 07:14:54: Sum Loss: 17.9489
04/21 07:14:54: Loss (s-m-l): [0.0007, 0.0438, 0.0]
04/21 07:14:54: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9826, 1.0, 0.9826], [1.0, 1.0, 1.0]]
04/21 07:17:51: 
Iteration: 17300
04/21 07:17:51: Running time: 504.73 min
04/21 07:17:51: Data Loading time: 0.00007 s
04/21 07:17:51: Loss R: 0.0157
04/21 07:17:51: Loss G: 18.9680
04/21 07:17:51: bpp: 0.3239
04/21 07:17:51: Sum Loss: 19.6052
04/21 07:17:51: Loss (s-m-l): [0.0008, 0.0462, 0.0]
04/21 07:17:51: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9814, 1.0, 0.9814], [1.0, 1.0, 1.0]]
04/21 07:20:45: 
Iteration: 17400
04/21 07:20:45: Running time: 507.63 min
04/21 07:20:45: Data Loading time: 0.00007 s
04/21 07:20:45: Loss R: 0.0156
04/21 07:20:45: Loss G: 21.0034
04/21 07:20:45: bpp: 0.3241
04/21 07:20:45: Sum Loss: 21.6395
04/21 07:20:45: Loss (s-m-l): [0.0007, 0.046, 0.0]
04/21 07:20:45: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9815, 1.0, 0.9815], [1.0, 1.0, 1.0]]
04/21 07:23:42: 
Iteration: 17500
04/21 07:23:42: Running time: 510.58 min
04/21 07:23:42: Data Loading time: 0.00007 s
04/21 07:23:42: Loss R: 0.0147
04/21 07:23:42: Loss G: 16.1886
04/21 07:23:42: bpp: 0.3248
04/21 07:23:42: Sum Loss: 16.8074
04/21 07:23:42: Loss (s-m-l): [0.0007, 0.0434, 0.0]
04/21 07:23:42: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9827, 1.0, 0.9827], [1.0, 1.0, 1.0]]
04/21 07:26:36: 
Iteration: 17600
04/21 07:26:36: Running time: 513.48 min
04/21 07:26:36: Data Loading time: 0.00007 s
04/21 07:26:36: Loss R: 0.0150
04/21 07:26:36: Loss G: 16.5148
04/21 07:26:36: bpp: 0.3260
04/21 07:26:36: Sum Loss: 17.1401
04/21 07:26:36: Loss (s-m-l): [0.0008, 0.0442, 0.0]
04/21 07:26:36: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9824, 1.0, 0.9824], [1.0, 1.0, 1.0]]
04/21 07:29:29: 
Iteration: 17700
04/21 07:29:29: Running time: 516.36 min
04/21 07:29:29: Data Loading time: 0.00007 s
04/21 07:29:29: Loss R: 0.0149
04/21 07:29:29: Loss G: 19.9675
04/21 07:29:29: bpp: 0.3268
04/21 07:29:29: Sum Loss: 20.5934
04/21 07:29:29: Loss (s-m-l): [0.0008, 0.0441, 0.0]
04/21 07:29:29: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9824, 1.0, 0.9824], [1.0, 1.0, 1.0]]
04/21 07:32:23: 
Iteration: 17800
04/21 07:32:23: Running time: 519.27 min
04/21 07:32:23: Data Loading time: 0.00007 s
04/21 07:32:23: Loss R: 0.0151
04/21 07:32:23: Loss G: 16.4598
04/21 07:32:23: bpp: 0.3256
04/21 07:32:23: Sum Loss: 17.0879
04/21 07:32:23: Loss (s-m-l): [0.0008, 0.0446, 0.0]
04/21 07:32:23: Metrics (s-m-l): [[0.9997, 1.0, 0.9997], [0.9824, 1.0, 0.9824], [1.0, 1.0, 1.0]]
04/21 07:35:14: 
Iteration: 17900
04/21 07:35:14: Running time: 522.11 min
04/21 07:35:14: Data Loading time: 0.00007 s
04/21 07:35:14: Loss R: 0.0150
04/21 07:35:14: Loss G: 16.6465
04/21 07:35:14: bpp: 0.3261
04/21 07:35:14: Sum Loss: 17.2721
04/21 07:35:14: Loss (s-m-l): [0.0007, 0.0442, 0.0]
04/21 07:35:14: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9823, 1.0, 0.9823], [1.0, 1.0, 1.0]]
04/21 07:38:11: 
Iteration: 18000
04/21 07:38:11: Running time: 525.07 min
04/21 07:38:11: Data Loading time: 0.00007 s
04/21 07:38:11: Loss R: 0.0150
04/21 07:38:11: Loss G: 20.1928
04/21 07:38:11: bpp: 0.3283
04/21 07:38:11: Sum Loss: 20.8218
04/21 07:38:11: Loss (s-m-l): [0.0008, 0.0444, 0.0]
04/21 07:38:11: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9824, 1.0, 0.9824], [1.0, 1.0, 1.0]]
04/21 07:38:11: 
==========Evaluation: iter 18000==========
04/21 07:38:11: save checkpoints: ckpts/tp/tp18000
04/21 07:38:11: LR: [5e-05, 5e-05, 5e-05]
04/21 07:41:04: 
Iteration: 18100
04/21 07:41:04: Running time: 527.96 min
04/21 07:41:04: Data Loading time: 0.00007 s
04/21 07:41:04: Loss R: 0.0144
04/21 07:41:04: Loss G: 17.2533
04/21 07:41:04: bpp: 0.3278
04/21 07:41:04: Sum Loss: 17.8688
04/21 07:41:04: Loss (s-m-l): [0.0007, 0.0425, 0.0]
04/21 07:41:04: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9829, 1.0, 0.9829], [1.0, 1.0, 1.0]]
04/21 07:44:04: 
Iteration: 18200
04/21 07:44:04: Running time: 530.94 min
04/21 07:44:04: Data Loading time: 0.00007 s
04/21 07:44:04: Loss R: 0.0141
04/21 07:44:04: Loss G: 16.8883
04/21 07:44:04: bpp: 0.3242
04/21 07:44:04: Sum Loss: 17.4937
04/21 07:44:04: Loss (s-m-l): [0.0007, 0.0415, 0.0]
04/21 07:44:04: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9835, 1.0, 0.9835], [1.0, 1.0, 1.0]]
04/21 07:46:59: 
Iteration: 18300
04/21 07:46:59: Running time: 533.87 min
04/21 07:46:59: Data Loading time: 0.00007 s
04/21 07:46:59: Loss R: 0.0143
04/21 07:46:59: Loss G: 18.7171
04/21 07:46:59: bpp: 0.3277
04/21 07:46:59: Sum Loss: 19.3308
04/21 07:46:59: Loss (s-m-l): [0.0007, 0.0422, 0.0]
04/21 07:46:59: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.983, 1.0, 0.983], [1.0, 1.0, 1.0]]
04/21 07:49:57: 
Iteration: 18400
04/21 07:49:57: Running time: 536.84 min
04/21 07:49:57: Data Loading time: 0.00007 s
04/21 07:49:57: Loss R: 0.0140
04/21 07:49:57: Loss G: 21.4864
04/21 07:49:57: bpp: 0.3226
04/21 07:49:57: Sum Loss: 22.0896
04/21 07:49:57: Loss (s-m-l): [0.0007, 0.0414, 0.0]
04/21 07:49:57: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9835, 1.0, 0.9835], [1.0, 1.0, 1.0]]
04/21 07:52:54: 
Iteration: 18500
04/21 07:52:54: Running time: 539.78 min
04/21 07:52:54: Data Loading time: 0.00007 s
04/21 07:52:54: Loss R: 0.0139
04/21 07:52:54: Loss G: 17.0166
04/21 07:52:54: bpp: 0.3222
04/21 07:52:54: Sum Loss: 17.6177
04/21 07:52:54: Loss (s-m-l): [0.0007, 0.0411, 0.0]
04/21 07:52:54: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9837, 1.0, 0.9837], [1.0, 1.0, 1.0]]
04/21 07:55:47: 
Iteration: 18600
04/21 07:55:47: Running time: 542.67 min
04/21 07:55:47: Data Loading time: 0.00007 s
04/21 07:55:47: Loss R: 0.0143
04/21 07:55:47: Loss G: 18.2560
04/21 07:55:47: bpp: 0.3252
04/21 07:55:47: Sum Loss: 18.8674
04/21 07:55:47: Loss (s-m-l): [0.0007, 0.0423, 0.0]
04/21 07:55:47: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9831, 1.0, 0.9831], [1.0, 1.0, 1.0]]
04/21 07:58:45: 
Iteration: 18700
04/21 07:58:45: Running time: 545.63 min
04/21 07:58:45: Data Loading time: 0.00007 s
04/21 07:58:45: Loss R: 0.0148
04/21 07:58:45: Loss G: 18.1876
04/21 07:58:45: bpp: 0.3237
04/21 07:58:45: Sum Loss: 18.8069
04/21 07:58:45: Loss (s-m-l): [0.0007, 0.0437, 0.0]
04/21 07:58:45: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9824, 1.0, 0.9824], [1.0, 1.0, 1.0]]
04/21 08:01:38: 
Iteration: 18800
04/21 08:01:38: Running time: 548.52 min
04/21 08:01:38: Data Loading time: 0.00007 s
04/21 08:01:38: Loss R: 0.0146
04/21 08:01:38: Loss G: 17.4636
04/21 08:01:38: bpp: 0.3238
04/21 08:01:38: Sum Loss: 18.0795
04/21 08:01:38: Loss (s-m-l): [0.0007, 0.0431, 0.0]
04/21 08:01:38: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9827, 1.0, 0.9827], [1.0, 1.0, 1.0]]
04/21 08:04:39: 
Iteration: 18900
04/21 08:04:39: Running time: 551.53 min
04/21 08:04:39: Data Loading time: 0.00007 s
04/21 08:04:39: Loss R: 0.0140
04/21 08:04:39: Loss G: 16.0917
04/21 08:04:39: bpp: 0.3238
04/21 08:04:39: Sum Loss: 16.6965
04/21 08:04:39: Loss (s-m-l): [0.0007, 0.0415, 0.0]
04/21 08:04:39: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9835, 1.0, 0.9835], [1.0, 1.0, 1.0]]
04/21 08:07:33: 
Iteration: 19000
04/21 08:07:33: Running time: 554.43 min
04/21 08:07:33: Data Loading time: 0.00007 s
04/21 08:07:33: Loss R: 0.0140
04/21 08:07:33: Loss G: 19.1071
04/21 08:07:33: bpp: 0.3249
04/21 08:07:33: Sum Loss: 19.7125
04/21 08:07:33: Loss (s-m-l): [0.0007, 0.0414, 0.0]
04/21 08:07:33: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9835, 1.0, 0.9835], [1.0, 1.0, 1.0]]
04/21 08:10:29: 
Iteration: 19100
04/21 08:10:29: Running time: 557.37 min
04/21 08:10:29: Data Loading time: 0.00008 s
04/21 08:10:29: Loss R: 0.0143
04/21 08:10:29: Loss G: 17.1174
04/21 08:10:29: bpp: 0.3237
04/21 08:10:29: Sum Loss: 17.7263
04/21 08:10:29: Loss (s-m-l): [0.0007, 0.0421, 0.0]
04/21 08:10:29: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9832, 1.0, 0.9832], [1.0, 1.0, 1.0]]
04/21 08:13:24: 
Iteration: 19200
04/21 08:13:24: Running time: 560.28 min
04/21 08:13:24: Data Loading time: 0.00007 s
04/21 08:13:24: Loss R: 0.0136
04/21 08:13:24: Loss G: 16.3900
04/21 08:13:24: bpp: 0.3252
04/21 08:13:24: Sum Loss: 16.9880
04/21 08:13:24: Loss (s-m-l): [0.0007, 0.0403, 0.0]
04/21 08:13:24: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9839, 1.0, 0.9839], [1.0, 1.0, 1.0]]
04/21 08:16:20: 
Iteration: 19300
04/21 08:16:20: Running time: 563.22 min
04/21 08:16:20: Data Loading time: 0.00007 s
04/21 08:16:20: Loss R: 0.0141
04/21 08:16:20: Loss G: 22.4802
04/21 08:16:20: bpp: 0.3257
04/21 08:16:20: Sum Loss: 23.0888
04/21 08:16:20: Loss (s-m-l): [0.0007, 0.0418, 0.0]
04/21 08:16:20: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9833, 1.0, 0.9833], [1.0, 1.0, 1.0]]
04/21 08:19:18: 
Iteration: 19400
04/21 08:19:18: Running time: 566.18 min
04/21 08:19:18: Data Loading time: 0.00008 s
04/21 08:19:18: Loss R: 0.0142
04/21 08:19:18: Loss G: 22.6158
04/21 08:19:18: bpp: 0.3241
04/21 08:19:18: Sum Loss: 23.2249
04/21 08:19:18: Loss (s-m-l): [0.0007, 0.042, 0.0]
04/21 08:19:18: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9833, 1.0, 0.9833], [1.0, 1.0, 1.0]]
04/21 08:22:14: 
Iteration: 19500
04/21 08:22:14: Running time: 569.12 min
04/21 08:22:14: Data Loading time: 0.00009 s
04/21 08:22:14: Loss R: 0.0146
04/21 08:22:14: Loss G: 19.5923
04/21 08:22:14: bpp: 0.3209
04/21 08:22:14: Sum Loss: 20.2055
04/21 08:22:14: Loss (s-m-l): [0.0007, 0.0431, 0.0]
04/21 08:22:14: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9828, 1.0, 0.9828], [1.0, 1.0, 1.0]]
04/21 08:25:09: 
Iteration: 19600
04/21 08:25:09: Running time: 572.04 min
04/21 08:25:09: Data Loading time: 0.00007 s
04/21 08:25:09: Loss R: 0.0140
04/21 08:25:09: Loss G: 16.3456
04/21 08:25:09: bpp: 0.3232
04/21 08:25:09: Sum Loss: 16.9479
04/21 08:25:09: Loss (s-m-l): [0.0007, 0.0412, 0.0]
04/21 08:25:09: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9836, 1.0, 0.9836], [1.0, 1.0, 1.0]]
04/21 08:28:01: 
Iteration: 19700
04/21 08:28:01: Running time: 574.90 min
04/21 08:28:01: Data Loading time: 0.00007 s
04/21 08:28:01: Loss R: 0.0138
04/21 08:28:01: Loss G: 18.2178
04/21 08:28:01: bpp: 0.3284
04/21 08:28:01: Sum Loss: 18.8225
04/21 08:28:01: Loss (s-m-l): [0.0007, 0.0408, 0.0]
04/21 08:28:01: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9837, 1.0, 0.9837], [1.0, 1.0, 1.0]]
04/21 08:31:00: 
Iteration: 19800
04/21 08:31:00: Running time: 577.88 min
04/21 08:31:00: Data Loading time: 0.00007 s
04/21 08:31:00: Loss R: 0.0139
04/21 08:31:00: Loss G: 18.0827
04/21 08:31:00: bpp: 0.3223
04/21 08:31:00: Sum Loss: 18.6821
04/21 08:31:00: Loss (s-m-l): [0.0007, 0.0409, 0.0]
04/21 08:31:00: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9837, 1.0, 0.9837], [1.0, 1.0, 1.0]]
04/21 08:33:54: 
Iteration: 19900
04/21 08:33:54: Running time: 580.78 min
04/21 08:33:54: Data Loading time: 0.00007 s
04/21 08:33:54: Loss R: 0.0136
04/21 08:33:54: Loss G: 18.5100
04/21 08:33:54: bpp: 0.3280
04/21 08:33:54: Sum Loss: 19.1092
04/21 08:33:54: Loss (s-m-l): [0.0007, 0.04, 0.0]
04/21 08:33:54: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.984, 1.0, 0.984], [1.0, 1.0, 1.0]]
04/21 08:36:49: 
Iteration: 20000
04/21 08:36:49: Running time: 583.70 min
04/21 08:36:49: Data Loading time: 0.00007 s
04/21 08:36:49: Loss R: 0.0142
04/21 08:36:49: Loss G: 16.5204
04/21 08:36:49: bpp: 0.3230
04/21 08:36:49: Sum Loss: 17.1272
04/21 08:36:49: Loss (s-m-l): [0.0007, 0.0419, 0.0]
04/21 08:36:49: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9834, 1.0, 0.9834], [1.0, 1.0, 1.0]]
04/21 08:36:49: 
==========Evaluation: iter 20000==========
04/21 08:36:49: save checkpoints: ckpts/tp/tp20000
04/21 08:39:44: 
Iteration: 20100
04/21 08:39:44: Running time: 586.62 min
04/21 08:39:44: Data Loading time: 0.00007 s
04/21 08:39:44: Loss R: 0.0142
04/21 08:39:44: Loss G: 16.7883
04/21 08:39:44: bpp: 0.3230
04/21 08:39:44: Sum Loss: 17.3944
04/21 08:39:44: Loss (s-m-l): [0.0007, 0.0417, 0.0]
04/21 08:39:44: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9834, 1.0, 0.9834], [1.0, 1.0, 1.0]]
04/21 08:42:37: 
Iteration: 20200
04/21 08:42:37: Running time: 589.49 min
04/21 08:42:37: Data Loading time: 0.00007 s
04/21 08:42:37: Loss R: 0.0144
04/21 08:42:37: Loss G: 17.0083
04/21 08:42:37: bpp: 0.3238
04/21 08:42:37: Sum Loss: 17.6202
04/21 08:42:37: Loss (s-m-l): [0.0007, 0.0425, 0.0]
04/21 08:42:37: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9831, 1.0, 0.9831], [1.0, 1.0, 1.0]]
04/21 08:45:34: 
Iteration: 20300
04/21 08:45:34: Running time: 592.45 min
04/21 08:45:34: Data Loading time: 0.00009 s
04/21 08:45:34: Loss R: 0.0142
04/21 08:45:34: Loss G: 16.7829
04/21 08:45:34: bpp: 0.3272
04/21 08:45:34: Sum Loss: 17.3949
04/21 08:45:34: Loss (s-m-l): [0.0007, 0.042, 0.0]
04/21 08:45:34: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9831, 1.0, 0.9831], [1.0, 1.0, 1.0]]
04/21 08:48:30: 
Iteration: 20400
04/21 08:48:30: Running time: 595.38 min
04/21 08:48:30: Data Loading time: 0.00007 s
04/21 08:48:30: Loss R: 0.0143
04/21 08:48:30: Loss G: 17.3654
04/21 08:48:30: bpp: 0.3224
04/21 08:48:30: Sum Loss: 17.9733
04/21 08:48:30: Loss (s-m-l): [0.0007, 0.0421, 0.0]
04/21 08:48:30: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9832, 1.0, 0.9832], [1.0, 1.0, 1.0]]
04/21 08:51:23: 
Iteration: 20500
04/21 08:51:23: Running time: 598.26 min
04/21 08:51:23: Data Loading time: 0.00007 s
04/21 08:51:23: Loss R: 0.0142
04/21 08:51:23: Loss G: 20.0216
04/21 08:51:23: bpp: 0.3251
04/21 08:51:23: Sum Loss: 20.6314
04/21 08:51:23: Loss (s-m-l): [0.0007, 0.042, 0.0]
04/21 08:51:23: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9832, 1.0, 0.9832], [1.0, 1.0, 1.0]]
04/21 08:54:18: 
Iteration: 20600
04/21 08:54:18: Running time: 601.18 min
04/21 08:54:18: Data Loading time: 0.00007 s
04/21 08:54:18: Loss R: 0.0139
04/21 08:54:18: Loss G: 18.4618
04/21 08:54:18: bpp: 0.3242
04/21 08:54:18: Sum Loss: 19.0633
04/21 08:54:18: Loss (s-m-l): [0.0007, 0.0409, 0.0]
04/21 08:54:18: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9837, 1.0, 0.9837], [1.0, 1.0, 1.0]]
04/21 08:57:16: 
Iteration: 20700
04/21 08:57:16: Running time: 604.16 min
04/21 08:57:16: Data Loading time: 0.00007 s
04/21 08:57:16: Loss R: 0.0140
04/21 08:57:16: Loss G: 16.7691
04/21 08:57:16: bpp: 0.3225
04/21 08:57:16: Sum Loss: 17.3715
04/21 08:57:16: Loss (s-m-l): [0.0007, 0.0413, 0.0]
04/21 08:57:16: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9834, 1.0, 0.9834], [1.0, 1.0, 1.0]]
04/21 09:00:10: 
Iteration: 20800
04/21 09:00:10: Running time: 607.06 min
04/21 09:00:10: Data Loading time: 0.00007 s
04/21 09:00:10: Loss R: 0.0140
04/21 09:00:10: Loss G: 17.5994
04/21 09:00:10: bpp: 0.3260
04/21 09:00:10: Sum Loss: 18.2050
04/21 09:00:10: Loss (s-m-l): [0.0007, 0.0412, 0.0]
04/21 09:00:10: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9835, 1.0, 0.9835], [1.0, 1.0, 1.0]]
04/21 09:03:09: 
Iteration: 20900
04/21 09:03:09: Running time: 610.03 min
04/21 09:03:09: Data Loading time: 0.00007 s
04/21 09:03:09: Loss R: 0.0141
04/21 09:03:09: Loss G: 17.3673
04/21 09:03:09: bpp: 0.3208
04/21 09:03:09: Sum Loss: 17.9705
04/21 09:03:09: Loss (s-m-l): [0.0007, 0.0417, 0.0]
04/21 09:03:09: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9835, 1.0, 0.9835], [1.0, 1.0, 1.0]]
04/21 09:06:05: 
Iteration: 21000
04/21 09:06:05: Running time: 612.96 min
04/21 09:06:05: Data Loading time: 0.00007 s
04/21 09:06:05: Loss R: 0.0145
04/21 09:06:05: Loss G: 20.9970
04/21 09:06:05: bpp: 0.3263
04/21 09:06:05: Sum Loss: 21.6124
04/21 09:06:05: Loss (s-m-l): [0.0007, 0.0427, 0.0]
04/21 09:06:05: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9829, 1.0, 0.9829], [1.0, 1.0, 1.0]]
04/21 09:08:58: 
Iteration: 21100
04/21 09:08:58: Running time: 615.85 min
04/21 09:08:58: Data Loading time: 0.00007 s
04/21 09:08:58: Loss R: 0.0140
04/21 09:08:58: Loss G: 19.9838
04/21 09:08:58: bpp: 0.3259
04/21 09:08:58: Sum Loss: 20.5897
04/21 09:08:58: Loss (s-m-l): [0.0007, 0.0414, 0.0]
04/21 09:08:58: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9835, 1.0, 0.9835], [1.0, 1.0, 1.0]]
04/21 09:11:49: 
Iteration: 21200
04/21 09:11:49: Running time: 618.70 min
04/21 09:11:49: Data Loading time: 0.00007 s
04/21 09:11:49: Loss R: 0.0136
04/21 09:11:49: Loss G: 24.0278
04/21 09:11:49: bpp: 0.3242
04/21 09:11:49: Sum Loss: 24.6233
04/21 09:11:49: Loss (s-m-l): [0.0007, 0.04, 0.0]
04/21 09:11:49: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9841, 1.0, 0.9841], [1.0, 1.0, 1.0]]
04/21 09:14:43: 
Iteration: 21300
04/21 09:14:43: Running time: 621.61 min
04/21 09:14:43: Data Loading time: 0.00007 s
04/21 09:14:43: Loss R: 0.0139
04/21 09:14:43: Loss G: 20.1566
04/21 09:14:43: bpp: 0.3222
04/21 09:14:43: Sum Loss: 20.7572
04/21 09:14:43: Loss (s-m-l): [0.0007, 0.0411, 0.0]
04/21 09:14:43: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9837, 1.0, 0.9837], [1.0, 1.0, 1.0]]
04/21 09:17:37: 
Iteration: 21400
04/21 09:17:37: Running time: 624.51 min
04/21 09:17:37: Data Loading time: 0.00007 s
04/21 09:17:37: Loss R: 0.0138
04/21 09:17:37: Loss G: 20.1022
04/21 09:17:37: bpp: 0.3262
04/21 09:17:37: Sum Loss: 20.7049
04/21 09:17:37: Loss (s-m-l): [0.0007, 0.0408, 0.0]
04/21 09:17:37: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9837, 1.0, 0.9837], [1.0, 1.0, 1.0]]
04/21 09:20:36: 
Iteration: 21500
04/21 09:20:36: Running time: 627.48 min
04/21 09:20:36: Data Loading time: 0.00007 s
04/21 09:20:36: Loss R: 0.0143
04/21 09:20:36: Loss G: 22.0901
04/21 09:20:36: bpp: 0.3238
04/21 09:20:36: Sum Loss: 22.6996
04/21 09:20:36: Loss (s-m-l): [0.0007, 0.0421, 0.0]
04/21 09:20:36: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9832, 1.0, 0.9832], [1.0, 1.0, 1.0]]
04/21 09:23:32: 
Iteration: 21600
04/21 09:23:32: Running time: 630.42 min
04/21 09:23:32: Data Loading time: 0.00007 s
04/21 09:23:32: Loss R: 0.0143
04/21 09:23:32: Loss G: 19.2507
04/21 09:23:32: bpp: 0.3243
04/21 09:23:32: Sum Loss: 19.8607
04/21 09:23:32: Loss (s-m-l): [0.0007, 0.0422, 0.0]
04/21 09:23:32: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9831, 1.0, 0.9831], [1.0, 1.0, 1.0]]
04/21 09:26:33: 
Iteration: 21700
04/21 09:26:33: Running time: 633.43 min
04/21 09:26:33: Data Loading time: 0.00007 s
04/21 09:26:33: Loss R: 0.0136
04/21 09:26:33: Loss G: 17.3195
04/21 09:26:33: bpp: 0.3248
04/21 09:26:33: Sum Loss: 17.9154
04/21 09:26:33: Loss (s-m-l): [0.0007, 0.04, 0.0]
04/21 09:26:33: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9842, 1.0, 0.9842], [1.0, 1.0, 1.0]]
04/21 09:29:29: 
Iteration: 21800
04/21 09:29:29: Running time: 636.36 min
04/21 09:29:29: Data Loading time: 0.00007 s
04/21 09:29:29: Loss R: 0.0133
04/21 09:29:29: Loss G: 17.6472
04/21 09:29:29: bpp: 0.3239
04/21 09:29:29: Sum Loss: 18.2381
04/21 09:29:29: Loss (s-m-l): [0.0007, 0.0394, 0.0]
04/21 09:29:29: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9844, 1.0, 0.9844], [1.0, 1.0, 1.0]]
04/21 09:32:21: 
Iteration: 21900
04/21 09:32:21: Running time: 639.24 min
04/21 09:32:21: Data Loading time: 0.00007 s
04/21 09:32:21: Loss R: 0.0136
04/21 09:32:21: Loss G: 17.0023
04/21 09:32:21: bpp: 0.3243
04/21 09:32:21: Sum Loss: 17.5997
04/21 09:32:21: Loss (s-m-l): [0.0007, 0.0403, 0.0]
04/21 09:32:21: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.984, 1.0, 0.984], [1.0, 1.0, 1.0]]
04/21 09:35:13: 
Iteration: 22000
04/21 09:35:13: Running time: 642.11 min
04/21 09:35:13: Data Loading time: 0.00007 s
04/21 09:35:13: Loss R: 0.0142
04/21 09:35:13: Loss G: 21.0630
04/21 09:35:13: bpp: 0.3237
04/21 09:35:13: Sum Loss: 21.6716
04/21 09:35:13: Loss (s-m-l): [0.0007, 0.0421, 0.0]
04/21 09:35:13: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9832, 1.0, 0.9832], [1.0, 1.0, 1.0]]
04/21 09:35:13: 
==========Evaluation: iter 22000==========
04/21 09:35:13: save checkpoints: ckpts/tp/tp22000
04/21 09:38:12: 
Iteration: 22100
04/21 09:38:12: Running time: 645.08 min
04/21 09:38:12: Data Loading time: 0.00007 s
04/21 09:38:12: Loss R: 0.0140
04/21 09:38:12: Loss G: 17.5379
04/21 09:38:12: bpp: 0.3244
04/21 09:38:12: Sum Loss: 18.1420
04/21 09:38:12: Loss (s-m-l): [0.0007, 0.0412, 0.0]
04/21 09:38:12: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9836, 1.0, 0.9836], [1.0, 1.0, 1.0]]
04/21 09:41:10: 
Iteration: 22200
04/21 09:41:10: Running time: 648.06 min
04/21 09:41:10: Data Loading time: 0.00007 s
04/21 09:41:10: Loss R: 0.0135
04/21 09:41:10: Loss G: 16.8263
04/21 09:41:10: bpp: 0.3227
04/21 09:41:10: Sum Loss: 17.4200
04/21 09:41:10: Loss (s-m-l): [0.0007, 0.04, 0.0]
04/21 09:41:10: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9841, 1.0, 0.9841], [1.0, 1.0, 1.0]]
04/21 09:44:08: 
Iteration: 22300
04/21 09:44:08: Running time: 651.02 min
04/21 09:44:08: Data Loading time: 0.00007 s
04/21 09:44:08: Loss R: 0.0136
04/21 09:44:08: Loss G: 18.0397
04/21 09:44:08: bpp: 0.3256
04/21 09:44:08: Sum Loss: 18.6375
04/21 09:44:08: Loss (s-m-l): [0.0007, 0.0402, 0.0]
04/21 09:44:08: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9839, 1.0, 0.9839], [1.0, 1.0, 1.0]]
04/21 09:47:00: 
Iteration: 22400
04/21 09:47:00: Running time: 653.89 min
04/21 09:47:00: Data Loading time: 0.00007 s
04/21 09:47:00: Loss R: 0.0141
04/21 09:47:00: Loss G: 20.0278
04/21 09:47:00: bpp: 0.3244
04/21 09:47:00: Sum Loss: 20.6335
04/21 09:47:00: Loss (s-m-l): [0.0007, 0.0415, 0.0]
04/21 09:47:00: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9835, 1.0, 0.9835], [1.0, 1.0, 1.0]]
04/21 09:49:55: 
Iteration: 22500
04/21 09:49:55: Running time: 656.79 min
04/21 09:49:55: Data Loading time: 0.00007 s
04/21 09:49:55: Loss R: 0.0135
04/21 09:49:55: Loss G: 19.1548
04/21 09:49:55: bpp: 0.3257
04/21 09:49:55: Sum Loss: 19.7501
04/21 09:49:55: Loss (s-m-l): [0.0007, 0.0398, 0.0]
04/21 09:49:55: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9841, 1.0, 0.9841], [1.0, 1.0, 1.0]]
04/21 09:52:46: 
Iteration: 22600
04/21 09:52:46: Running time: 659.64 min
04/21 09:52:46: Data Loading time: 0.00007 s
04/21 09:52:46: Loss R: 0.0141
04/21 09:52:46: Loss G: 19.2275
04/21 09:52:46: bpp: 0.3254
04/21 09:52:46: Sum Loss: 19.8345
04/21 09:52:46: Loss (s-m-l): [0.0007, 0.0416, 0.0]
04/21 09:52:46: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9834, 1.0, 0.9834], [1.0, 1.0, 1.0]]
04/21 09:55:40: 
Iteration: 22700
04/21 09:55:40: Running time: 662.56 min
04/21 09:55:40: Data Loading time: 0.00007 s
04/21 09:55:40: Loss R: 0.0135
04/21 09:55:40: Loss G: 17.9207
04/21 09:55:40: bpp: 0.3252
04/21 09:55:40: Sum Loss: 18.5155
04/21 09:55:40: Loss (s-m-l): [0.0007, 0.0398, 0.0]
04/21 09:55:40: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9842, 1.0, 0.9842], [1.0, 1.0, 1.0]]
04/21 09:58:37: 
Iteration: 22800
04/21 09:58:37: Running time: 665.50 min
04/21 09:58:37: Data Loading time: 0.00007 s
04/21 09:58:37: Loss R: 0.0139
04/21 09:58:37: Loss G: 18.0117
04/21 09:58:37: bpp: 0.3234
04/21 09:58:37: Sum Loss: 18.6130
04/21 09:58:37: Loss (s-m-l): [0.0007, 0.041, 0.0]
04/21 09:58:37: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9836, 1.0, 0.9836], [1.0, 1.0, 1.0]]
04/21 10:01:34: 
Iteration: 22900
04/21 10:01:34: Running time: 668.44 min
04/21 10:01:34: Data Loading time: 0.00007 s
04/21 10:01:34: Loss R: 0.0142
04/21 10:01:34: Loss G: 27.3630
04/21 10:01:34: bpp: 0.3235
04/21 10:01:34: Sum Loss: 27.9713
04/21 10:01:34: Loss (s-m-l): [0.0007, 0.042, 0.0]
04/21 10:01:34: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9832, 1.0, 0.9832], [1.0, 1.0, 1.0]]
04/21 10:04:31: 
Iteration: 23000
04/21 10:04:31: Running time: 671.40 min
04/21 10:04:31: Data Loading time: 0.00007 s
04/21 10:04:31: Loss R: 0.0139
04/21 10:04:31: Loss G: 18.0817
04/21 10:04:31: bpp: 0.3209
04/21 10:04:31: Sum Loss: 18.6800
04/21 10:04:31: Loss (s-m-l): [0.0007, 0.0409, 0.0]
04/21 10:04:31: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9837, 1.0, 0.9837], [1.0, 1.0, 1.0]]
04/21 10:07:29: 
Iteration: 23100
04/21 10:07:29: Running time: 674.37 min
04/21 10:07:29: Data Loading time: 0.00007 s
04/21 10:07:29: Loss R: 0.0134
04/21 10:07:29: Loss G: 22.5184
04/21 10:07:29: bpp: 0.3247
04/21 10:07:29: Sum Loss: 23.1102
04/21 10:07:29: Loss (s-m-l): [0.0007, 0.0393, 0.0]
04/21 10:07:29: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9844, 1.0, 0.9844], [1.0, 1.0, 1.0]]
04/21 10:10:27: 
Iteration: 23200
04/21 10:10:27: Running time: 677.33 min
04/21 10:10:27: Data Loading time: 0.00007 s
04/21 10:10:27: Loss R: 0.0137
04/21 10:10:27: Loss G: 19.5513
04/21 10:10:27: bpp: 0.3214
04/21 10:10:27: Sum Loss: 20.1473
04/21 10:10:27: Loss (s-m-l): [0.0007, 0.0405, 0.0]
04/21 10:10:27: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9839, 1.0, 0.9839], [1.0, 1.0, 1.0]]
04/21 10:13:20: 
Iteration: 23300
04/21 10:13:20: Running time: 680.22 min
04/21 10:13:20: Data Loading time: 0.00007 s
04/21 10:13:20: Loss R: 0.0140
04/21 10:13:20: Loss G: 17.9264
04/21 10:13:20: bpp: 0.3251
04/21 10:13:20: Sum Loss: 18.5317
04/21 10:13:20: Loss (s-m-l): [0.0007, 0.0413, 0.0]
04/21 10:13:20: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9835, 1.0, 0.9835], [1.0, 1.0, 1.0]]
04/21 10:16:15: 
Iteration: 23400
04/21 10:16:15: Running time: 683.14 min
04/21 10:16:15: Data Loading time: 0.00007 s
04/21 10:16:15: Loss R: 0.0138
04/21 10:16:15: Loss G: 21.2020
04/21 10:16:15: bpp: 0.3255
04/21 10:16:15: Sum Loss: 21.8034
04/21 10:16:15: Loss (s-m-l): [0.0007, 0.0407, 0.0]
04/21 10:16:15: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9837, 1.0, 0.9837], [1.0, 1.0, 1.0]]
04/21 10:19:10: 
Iteration: 23500
04/21 10:19:10: Running time: 686.05 min
04/21 10:19:10: Data Loading time: 0.00007 s
04/21 10:19:10: Loss R: 0.0137
04/21 10:19:10: Loss G: 21.3346
04/21 10:19:10: bpp: 0.3237
04/21 10:19:10: Sum Loss: 21.9321
04/21 10:19:10: Loss (s-m-l): [0.0007, 0.0404, 0.0]
04/21 10:19:10: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9839, 1.0, 0.9839], [1.0, 1.0, 1.0]]
04/21 10:22:06: 
Iteration: 23600
04/21 10:22:06: Running time: 688.98 min
04/21 10:22:06: Data Loading time: 0.00007 s
04/21 10:22:06: Loss R: 0.0142
04/21 10:22:06: Loss G: 17.6875
04/21 10:22:06: bpp: 0.3241
04/21 10:22:06: Sum Loss: 18.2960
04/21 10:22:06: Loss (s-m-l): [0.0007, 0.042, 0.0]
04/21 10:22:06: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9832, 1.0, 0.9832], [1.0, 1.0, 1.0]]
04/21 10:25:02: 
Iteration: 23700
04/21 10:25:02: Running time: 691.92 min
04/21 10:25:02: Data Loading time: 0.00007 s
04/21 10:25:02: Loss R: 0.0138
04/21 10:25:02: Loss G: 17.0708
04/21 10:25:02: bpp: 0.3229
04/21 10:25:02: Sum Loss: 17.6698
04/21 10:25:02: Loss (s-m-l): [0.0007, 0.0407, 0.0]
04/21 10:25:02: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9836, 1.0, 0.9836], [1.0, 1.0, 1.0]]
04/21 10:28:03: 
Iteration: 23800
04/21 10:28:03: Running time: 694.93 min
04/21 10:28:03: Data Loading time: 0.00007 s
04/21 10:28:03: Loss R: 0.0142
04/21 10:28:03: Loss G: 18.7361
04/21 10:28:03: bpp: 0.3217
04/21 10:28:03: Sum Loss: 19.3417
04/21 10:28:03: Loss (s-m-l): [0.0007, 0.0419, 0.0]
04/21 10:28:03: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9833, 1.0, 0.9833], [1.0, 1.0, 1.0]]
04/21 10:30:56: 
Iteration: 23900
04/21 10:30:56: Running time: 697.83 min
04/21 10:30:56: Data Loading time: 0.00007 s
04/21 10:30:56: Loss R: 0.0134
04/21 10:30:56: Loss G: 17.3583
04/21 10:30:56: bpp: 0.3271
04/21 10:30:56: Sum Loss: 17.9537
04/21 10:30:56: Loss (s-m-l): [0.0006, 0.0396, 0.0]
04/21 10:30:56: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9843, 1.0, 0.9843], [1.0, 1.0, 1.0]]
04/21 10:33:57: 
Iteration: 24000
04/21 10:33:57: Running time: 700.84 min
04/21 10:33:57: Data Loading time: 0.00007 s
04/21 10:33:57: Loss R: 0.0136
04/21 10:33:57: Loss G: 20.3553
04/21 10:33:57: bpp: 0.3253
04/21 10:33:57: Sum Loss: 20.9524
04/21 10:33:57: Loss (s-m-l): [0.0007, 0.0401, 0.0]
04/21 10:33:57: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.984, 1.0, 0.984], [1.0, 1.0, 1.0]]
04/21 10:33:57: 
==========Evaluation: iter 24000==========
04/21 10:33:57: save checkpoints: ckpts/tp/tp24000
04/21 10:33:57: LR: [2.5e-05, 2.5e-05, 2.5e-05]
04/21 10:36:53: 
Iteration: 24100
04/21 10:36:53: Running time: 703.76 min
04/21 10:36:53: Data Loading time: 0.00012 s
04/21 10:36:53: Loss R: 0.0132
04/21 10:36:53: Loss G: 19.6752
04/21 10:36:53: bpp: 0.3263
04/21 10:36:53: Sum Loss: 20.2653
04/21 10:36:53: Loss (s-m-l): [0.0006, 0.0389, 0.0]
04/21 10:36:53: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9845, 1.0, 0.9845], [1.0, 1.0, 1.0]]
04/21 10:39:50: 
Iteration: 24200
04/21 10:39:50: Running time: 706.72 min
04/21 10:39:50: Data Loading time: 0.00007 s
04/21 10:39:50: Loss R: 0.0137
04/21 10:39:50: Loss G: 19.1166
04/21 10:39:50: bpp: 0.3231
04/21 10:39:50: Sum Loss: 19.7129
04/21 10:39:50: Loss (s-m-l): [0.0007, 0.0403, 0.0]
04/21 10:39:50: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9839, 1.0, 0.9839], [1.0, 1.0, 1.0]]
04/21 10:42:44: 
Iteration: 24300
04/21 10:42:44: Running time: 709.61 min
04/21 10:42:44: Data Loading time: 0.00007 s
04/21 10:42:44: Loss R: 0.0135
04/21 10:42:44: Loss G: 19.0759
04/21 10:42:44: bpp: 0.3224
04/21 10:42:44: Sum Loss: 19.6691
04/21 10:42:44: Loss (s-m-l): [0.0006, 0.04, 0.0]
04/21 10:42:44: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9841, 1.0, 0.9841], [1.0, 1.0, 1.0]]
04/21 10:45:38: 
Iteration: 24400
04/21 10:45:38: Running time: 712.51 min
04/21 10:45:38: Data Loading time: 0.00007 s
04/21 10:45:38: Loss R: 0.0129
04/21 10:45:38: Loss G: 19.6506
04/21 10:45:38: bpp: 0.3224
04/21 10:45:38: Sum Loss: 20.2311
04/21 10:45:38: Loss (s-m-l): [0.0006, 0.0381, 0.0]
04/21 10:45:38: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/21 10:48:28: 
Iteration: 24500
04/21 10:48:28: Running time: 715.35 min
04/21 10:48:28: Data Loading time: 0.00007 s
04/21 10:48:28: Loss R: 0.0137
04/21 10:48:28: Loss G: 18.7612
04/21 10:48:28: bpp: 0.3254
04/21 10:48:28: Sum Loss: 19.3602
04/21 10:48:28: Loss (s-m-l): [0.0007, 0.0404, 0.0]
04/21 10:48:28: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9839, 1.0, 0.9839], [1.0, 1.0, 1.0]]
04/21 10:51:23: 
Iteration: 24600
04/21 10:51:23: Running time: 718.27 min
04/21 10:51:23: Data Loading time: 0.00007 s
04/21 10:51:23: Loss R: 0.0133
04/21 10:51:23: Loss G: 19.4274
04/21 10:51:23: bpp: 0.3217
04/21 10:51:23: Sum Loss: 20.0151
04/21 10:51:23: Loss (s-m-l): [0.0007, 0.0392, 0.0]
04/21 10:51:23: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9844, 1.0, 0.9844], [1.0, 1.0, 1.0]]
04/21 10:54:21: 
Iteration: 24700
04/21 10:54:21: Running time: 721.24 min
04/21 10:54:21: Data Loading time: 0.00007 s
04/21 10:54:21: Loss R: 0.0130
04/21 10:54:21: Loss G: 18.2072
04/21 10:54:21: bpp: 0.3236
04/21 10:54:21: Sum Loss: 18.7916
04/21 10:54:21: Loss (s-m-l): [0.0006, 0.0385, 0.0]
04/21 10:54:21: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9847, 1.0, 0.9847], [1.0, 1.0, 1.0]]
04/21 10:57:18: 
Iteration: 24800
04/21 10:57:18: Running time: 724.19 min
04/21 10:57:18: Data Loading time: 0.00007 s
04/21 10:57:18: Loss R: 0.0138
04/21 10:57:18: Loss G: 17.0432
04/21 10:57:18: bpp: 0.3207
04/21 10:57:18: Sum Loss: 17.6398
04/21 10:57:18: Loss (s-m-l): [0.0007, 0.0407, 0.0]
04/21 10:57:18: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9838, 1.0, 0.9838], [1.0, 1.0, 1.0]]
04/21 11:00:16: 
Iteration: 24900
04/21 11:00:16: Running time: 727.15 min
04/21 11:00:16: Data Loading time: 0.00007 s
04/21 11:00:16: Loss R: 0.0129
04/21 11:00:16: Loss G: 17.8554
04/21 11:00:16: bpp: 0.3233
04/21 11:00:16: Sum Loss: 18.4371
04/21 11:00:16: Loss (s-m-l): [0.0006, 0.0381, 0.0]
04/21 11:00:16: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/21 11:03:07: 
Iteration: 25000
04/21 11:03:07: Running time: 730.00 min
04/21 11:03:07: Data Loading time: 0.00008 s
04/21 11:03:07: Loss R: 0.0136
04/21 11:03:07: Loss G: 17.2432
04/21 11:03:07: bpp: 0.3238
04/21 11:03:07: Sum Loss: 17.8382
04/21 11:03:07: Loss (s-m-l): [0.0007, 0.04, 0.0]
04/21 11:03:07: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9841, 1.0, 0.9841], [1.0, 1.0, 1.0]]
04/21 11:06:02: 
Iteration: 25100
04/21 11:06:02: Running time: 732.92 min
04/21 11:06:02: Data Loading time: 0.00007 s
04/21 11:06:02: Loss R: 0.0130
04/21 11:06:02: Loss G: 17.6788
04/21 11:06:02: bpp: 0.3241
04/21 11:06:02: Sum Loss: 18.2635
04/21 11:06:02: Loss (s-m-l): [0.0006, 0.0384, 0.0]
04/21 11:06:02: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9847, 1.0, 0.9847], [1.0, 1.0, 1.0]]
04/21 11:09:02: 
Iteration: 25200
04/21 11:09:02: Running time: 735.92 min
04/21 11:09:02: Data Loading time: 0.00007 s
04/21 11:09:02: Loss R: 0.0136
04/21 11:09:02: Loss G: 19.1087
04/21 11:09:02: bpp: 0.3215
04/21 11:09:02: Sum Loss: 19.7019
04/21 11:09:02: Loss (s-m-l): [0.0007, 0.0401, 0.0]
04/21 11:09:02: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9841, 1.0, 0.9841], [1.0, 1.0, 1.0]]
04/21 11:11:57: 
Iteration: 25300
04/21 11:11:57: Running time: 738.83 min
04/21 11:11:57: Data Loading time: 0.00007 s
04/21 11:11:57: Loss R: 0.0132
04/21 11:11:57: Loss G: 18.0833
04/21 11:11:57: bpp: 0.3269
04/21 11:11:57: Sum Loss: 18.6740
04/21 11:11:57: Loss (s-m-l): [0.0006, 0.0389, 0.0]
04/21 11:11:57: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9845, 1.0, 0.9845], [1.0, 1.0, 1.0]]
04/21 11:14:53: 
Iteration: 25400
04/21 11:14:53: Running time: 741.76 min
04/21 11:14:53: Data Loading time: 0.00007 s
04/21 11:14:53: Loss R: 0.0133
04/21 11:14:53: Loss G: 19.8306
04/21 11:14:53: bpp: 0.3227
04/21 11:14:53: Sum Loss: 20.4183
04/21 11:14:53: Loss (s-m-l): [0.0007, 0.0391, 0.0]
04/21 11:14:53: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9845, 1.0, 0.9845], [1.0, 1.0, 1.0]]
04/21 11:17:45: 
Iteration: 25500
04/21 11:17:45: Running time: 744.63 min
04/21 11:17:45: Data Loading time: 0.00007 s
04/21 11:17:45: Loss R: 0.0130
04/21 11:17:45: Loss G: 18.3277
04/21 11:17:45: bpp: 0.3226
04/21 11:17:45: Sum Loss: 18.9094
04/21 11:17:45: Loss (s-m-l): [0.0006, 0.0382, 0.0]
04/21 11:17:45: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9848, 1.0, 0.9848], [1.0, 1.0, 1.0]]
04/21 11:20:42: 
Iteration: 25600
04/21 11:20:42: Running time: 747.59 min
04/21 11:20:42: Data Loading time: 0.00007 s
04/21 11:20:42: Loss R: 0.0128
04/21 11:20:42: Loss G: 18.6957
04/21 11:20:42: bpp: 0.3199
04/21 11:20:42: Sum Loss: 19.2717
04/21 11:20:42: Loss (s-m-l): [0.0006, 0.0378, 0.0]
04/21 11:20:42: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/21 11:23:40: 
Iteration: 25700
04/21 11:23:40: Running time: 750.55 min
04/21 11:23:40: Data Loading time: 0.00007 s
04/21 11:23:40: Loss R: 0.0143
04/21 11:23:40: Loss G: 19.2009
04/21 11:23:40: bpp: 0.3242
04/21 11:23:40: Sum Loss: 19.8112
04/21 11:23:40: Loss (s-m-l): [0.0007, 0.0422, 0.0]
04/21 11:23:40: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.983, 1.0, 0.983], [1.0, 1.0, 1.0]]
04/21 11:26:31: 
Iteration: 25800
04/21 11:26:31: Running time: 753.40 min
04/21 11:26:31: Data Loading time: 0.00007 s
04/21 11:26:31: Loss R: 0.0125
04/21 11:26:31: Loss G: 23.8887
04/21 11:26:31: bpp: 0.3278
04/21 11:26:31: Sum Loss: 24.4658
04/21 11:26:31: Loss (s-m-l): [0.0006, 0.0368, 0.0]
04/21 11:26:31: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9854, 1.0, 0.9854], [1.0, 1.0, 1.0]]
04/21 11:29:29: 
Iteration: 25900
04/21 11:29:29: Running time: 756.37 min
04/21 11:29:29: Data Loading time: 0.00007 s
04/21 11:29:29: Loss R: 0.0137
04/21 11:29:29: Loss G: 19.9784
04/21 11:29:29: bpp: 0.3217
04/21 11:29:29: Sum Loss: 20.5741
04/21 11:29:29: Loss (s-m-l): [0.0007, 0.0404, 0.0]
04/21 11:29:29: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9839, 1.0, 0.9839], [1.0, 1.0, 1.0]]
04/21 11:32:23: 
Iteration: 26000
04/21 11:32:23: Running time: 759.27 min
04/21 11:32:23: Data Loading time: 0.00007 s
04/21 11:32:23: Loss R: 0.0128
04/21 11:32:23: Loss G: 18.6244
04/21 11:32:23: bpp: 0.3228
04/21 11:32:23: Sum Loss: 19.2039
04/21 11:32:23: Loss (s-m-l): [0.0006, 0.0379, 0.0]
04/21 11:32:23: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/21 11:32:23: 
==========Evaluation: iter 26000==========
04/21 11:32:23: save checkpoints: ckpts/tp/tp26000
04/21 11:35:21: 
Iteration: 26100
04/21 11:35:21: Running time: 762.23 min
04/21 11:35:21: Data Loading time: 0.00010 s
04/21 11:35:21: Loss R: 0.0134
04/21 11:35:21: Loss G: 17.4254
04/21 11:35:21: bpp: 0.3210
04/21 11:35:21: Sum Loss: 18.0135
04/21 11:35:21: Loss (s-m-l): [0.0007, 0.0394, 0.0]
04/21 11:35:21: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9843, 1.0, 0.9843], [1.0, 1.0, 1.0]]
04/21 11:38:12: 
Iteration: 26200
04/21 11:38:12: Running time: 765.08 min
04/21 11:38:12: Data Loading time: 0.00007 s
04/21 11:38:12: Loss R: 0.0133
04/21 11:38:12: Loss G: 20.3901
04/21 11:38:12: bpp: 0.3227
04/21 11:38:12: Sum Loss: 20.9798
04/21 11:38:12: Loss (s-m-l): [0.0007, 0.0394, 0.0]
04/21 11:38:12: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9843, 1.0, 0.9843], [1.0, 1.0, 1.0]]
04/21 11:41:07: 
Iteration: 26300
04/21 11:41:07: Running time: 768.00 min
04/21 11:41:07: Data Loading time: 0.00008 s
04/21 11:41:07: Loss R: 0.0136
04/21 11:41:07: Loss G: 20.4984
04/21 11:41:07: bpp: 0.3267
04/21 11:41:07: Sum Loss: 21.0967
04/21 11:41:07: Loss (s-m-l): [0.0006, 0.0401, 0.0]
04/21 11:41:07: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.984, 1.0, 0.984], [1.0, 1.0, 1.0]]
04/21 11:44:02: 
Iteration: 26400
04/21 11:44:02: Running time: 770.92 min
04/21 11:44:02: Data Loading time: 0.00007 s
04/21 11:44:02: Loss R: 0.0132
04/21 11:44:02: Loss G: 18.0234
04/21 11:44:02: bpp: 0.3230
04/21 11:44:02: Sum Loss: 18.6098
04/21 11:44:02: Loss (s-m-l): [0.0006, 0.0389, 0.0]
04/21 11:44:02: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9845, 1.0, 0.9845], [1.0, 1.0, 1.0]]
04/21 11:47:00: 
Iteration: 26500
04/21 11:47:00: Running time: 773.88 min
04/21 11:47:00: Data Loading time: 0.00007 s
04/21 11:47:00: Loss R: 0.0135
04/21 11:47:00: Loss G: 18.3002
04/21 11:47:00: bpp: 0.3207
04/21 11:47:00: Sum Loss: 18.8917
04/21 11:47:00: Loss (s-m-l): [0.0006, 0.04, 0.0]
04/21 11:47:00: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9841, 1.0, 0.9841], [1.0, 1.0, 1.0]]
04/21 11:49:55: 
Iteration: 26600
04/21 11:49:55: Running time: 776.80 min
04/21 11:49:55: Data Loading time: 0.00007 s
04/21 11:49:55: Loss R: 0.0132
04/21 11:49:55: Loss G: 19.8931
04/21 11:49:55: bpp: 0.3223
04/21 11:49:55: Sum Loss: 20.4797
04/21 11:49:55: Loss (s-m-l): [0.0006, 0.039, 0.0]
04/21 11:49:55: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9845, 1.0, 0.9845], [1.0, 1.0, 1.0]]
04/21 11:52:54: 
Iteration: 26700
04/21 11:52:54: Running time: 779.78 min
04/21 11:52:54: Data Loading time: 0.00007 s
04/21 11:52:54: Loss R: 0.0130
04/21 11:52:54: Loss G: 18.4086
04/21 11:52:54: bpp: 0.3227
04/21 11:52:54: Sum Loss: 18.9923
04/21 11:52:54: Loss (s-m-l): [0.0006, 0.0385, 0.0]
04/21 11:52:54: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9846, 1.0, 0.9846], [1.0, 1.0, 1.0]]
04/21 11:55:50: 
Iteration: 26800
04/21 11:55:50: Running time: 782.72 min
04/21 11:55:50: Data Loading time: 0.00007 s
04/21 11:55:50: Loss R: 0.0145
04/21 11:55:50: Loss G: 21.5322
04/21 11:55:50: bpp: 0.3236
04/21 11:55:50: Sum Loss: 22.1457
04/21 11:55:50: Loss (s-m-l): [0.0007, 0.0428, 0.0]
04/21 11:55:50: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9826, 1.0, 0.9826], [1.0, 1.0, 1.0]]
04/21 11:58:39: 
Iteration: 26900
04/21 11:58:39: Running time: 785.54 min
04/21 11:58:39: Data Loading time: 0.00008 s
04/21 11:58:39: Loss R: 0.0132
04/21 11:58:39: Loss G: 24.1110
04/21 11:58:39: bpp: 0.3227
04/21 11:58:39: Sum Loss: 24.6984
04/21 11:58:39: Loss (s-m-l): [0.0007, 0.039, 0.0]
04/21 11:58:39: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9845, 1.0, 0.9845], [1.0, 1.0, 1.0]]
04/21 12:01:37: 
Iteration: 27000
04/21 12:01:37: Running time: 788.51 min
04/21 12:01:37: Data Loading time: 0.00007 s
04/21 12:01:37: Loss R: 0.0138
04/21 12:01:37: Loss G: 20.2989
04/21 12:01:37: bpp: 0.3227
04/21 12:01:37: Sum Loss: 20.8973
04/21 12:01:37: Loss (s-m-l): [0.0007, 0.0407, 0.0]
04/21 12:01:37: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9837, 1.0, 0.9837], [1.0, 1.0, 1.0]]
04/21 12:04:34: 
Iteration: 27100
04/21 12:04:34: Running time: 791.46 min
04/21 12:04:34: Data Loading time: 0.00010 s
04/21 12:04:34: Loss R: 0.0133
04/21 12:04:34: Loss G: 19.9035
04/21 12:04:34: bpp: 0.3228
04/21 12:04:34: Sum Loss: 20.4927
04/21 12:04:34: Loss (s-m-l): [0.0006, 0.0393, 0.0]
04/21 12:04:34: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9844, 1.0, 0.9844], [1.0, 1.0, 1.0]]
04/21 12:07:32: 
Iteration: 27200
04/21 12:07:32: Running time: 794.41 min
04/21 12:07:32: Data Loading time: 0.00007 s
04/21 12:07:32: Loss R: 0.0128
04/21 12:07:32: Loss G: 19.6213
04/21 12:07:32: bpp: 0.3204
04/21 12:07:32: Sum Loss: 20.1983
04/21 12:07:32: Loss (s-m-l): [0.0006, 0.0379, 0.0]
04/21 12:07:32: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/21 12:10:24: 
Iteration: 27300
04/21 12:10:24: Running time: 797.29 min
04/21 12:10:24: Data Loading time: 0.00007 s
04/21 12:10:24: Loss R: 0.0134
04/21 12:10:24: Loss G: 19.4600
04/21 12:10:24: bpp: 0.3241
04/21 12:10:24: Sum Loss: 20.0530
04/21 12:10:24: Loss (s-m-l): [0.0007, 0.0397, 0.0]
04/21 12:10:24: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9843, 1.0, 0.9843], [1.0, 1.0, 1.0]]
04/21 12:13:19: 
Iteration: 27400
04/21 12:13:19: Running time: 800.19 min
04/21 12:13:19: Data Loading time: 0.00007 s
04/21 12:13:19: Loss R: 0.0131
04/21 12:13:19: Loss G: 18.2426
04/21 12:13:19: bpp: 0.3233
04/21 12:13:19: Sum Loss: 18.8285
04/21 12:13:19: Loss (s-m-l): [0.0006, 0.0387, 0.0]
04/21 12:13:19: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9845, 1.0, 0.9845], [1.0, 1.0, 1.0]]
04/21 12:16:12: 
Iteration: 27500
04/21 12:16:12: Running time: 803.08 min
04/21 12:16:12: Data Loading time: 0.00007 s
04/21 12:16:12: Loss R: 0.0132
04/21 12:16:12: Loss G: 20.9493
04/21 12:16:12: bpp: 0.3232
04/21 12:16:12: Sum Loss: 21.5364
04/21 12:16:12: Loss (s-m-l): [0.0006, 0.0389, 0.0]
04/21 12:16:12: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9844, 1.0, 0.9844], [1.0, 1.0, 1.0]]
04/21 12:19:08: 
Iteration: 27600
04/21 12:19:08: Running time: 806.01 min
04/21 12:19:08: Data Loading time: 0.00007 s
04/21 12:19:08: Loss R: 0.0126
04/21 12:19:08: Loss G: 18.5514
04/21 12:19:08: bpp: 0.3259
04/21 12:19:08: Sum Loss: 19.1290
04/21 12:19:08: Loss (s-m-l): [0.0006, 0.0371, 0.0]
04/21 12:19:08: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/21 12:22:01: 
Iteration: 27700
04/21 12:22:01: Running time: 808.89 min
04/21 12:22:01: Data Loading time: 0.00007 s
04/21 12:22:01: Loss R: 0.0128
04/21 12:22:01: Loss G: 18.4548
04/21 12:22:01: bpp: 0.3257
04/21 12:22:01: Sum Loss: 19.0357
04/21 12:22:01: Loss (s-m-l): [0.0006, 0.0376, 0.0]
04/21 12:22:01: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/21 12:25:01: 
Iteration: 27800
04/21 12:25:01: Running time: 811.90 min
04/21 12:25:01: Data Loading time: 0.00007 s
04/21 12:25:01: Loss R: 0.0131
04/21 12:25:01: Loss G: 18.3814
04/21 12:25:01: bpp: 0.3203
04/21 12:25:01: Sum Loss: 18.9630
04/21 12:25:01: Loss (s-m-l): [0.0006, 0.0386, 0.0]
04/21 12:25:01: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9848, 1.0, 0.9848], [1.0, 1.0, 1.0]]
04/21 12:27:57: 
Iteration: 27900
04/21 12:27:57: Running time: 814.83 min
04/21 12:27:57: Data Loading time: 0.00007 s
04/21 12:27:57: Loss R: 0.0128
04/21 12:27:57: Loss G: 17.9601
04/21 12:27:57: bpp: 0.3201
04/21 12:27:57: Sum Loss: 18.5354
04/21 12:27:57: Loss (s-m-l): [0.0006, 0.0376, 0.0]
04/21 12:27:57: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/21 12:30:54: 
Iteration: 28000
04/21 12:30:54: Running time: 817.79 min
04/21 12:30:54: Data Loading time: 0.00007 s
04/21 12:30:54: Loss R: 0.0130
04/21 12:30:54: Loss G: 20.1326
04/21 12:30:54: bpp: 0.3252
04/21 12:30:54: Sum Loss: 20.7186
04/21 12:30:54: Loss (s-m-l): [0.0006, 0.0385, 0.0]
04/21 12:30:54: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9846, 1.0, 0.9846], [1.0, 1.0, 1.0]]
04/21 12:30:54: 
==========Evaluation: iter 28000==========
04/21 12:30:54: save checkpoints: ckpts/tp/tp28000
04/21 12:33:51: 
Iteration: 28100
04/21 12:33:51: Running time: 820.74 min
04/21 12:33:51: Data Loading time: 0.00007 s
04/21 12:33:51: Loss R: 0.0130
04/21 12:33:51: Loss G: 20.0484
04/21 12:33:51: bpp: 0.3220
04/21 12:33:51: Sum Loss: 20.6302
04/21 12:33:51: Loss (s-m-l): [0.0006, 0.0383, 0.0]
04/21 12:33:51: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/21 12:36:44: 
Iteration: 28200
04/21 12:36:44: Running time: 823.63 min
04/21 12:36:44: Data Loading time: 0.00007 s
04/21 12:36:44: Loss R: 0.0130
04/21 12:36:44: Loss G: 17.9129
04/21 12:36:44: bpp: 0.3225
04/21 12:36:44: Sum Loss: 18.4956
04/21 12:36:44: Loss (s-m-l): [0.0006, 0.0384, 0.0]
04/21 12:36:44: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9847, 1.0, 0.9847], [1.0, 1.0, 1.0]]
04/21 12:39:39: 
Iteration: 28300
04/21 12:39:39: Running time: 826.54 min
04/21 12:39:39: Data Loading time: 0.00007 s
04/21 12:39:39: Loss R: 0.0129
04/21 12:39:39: Loss G: 18.2312
04/21 12:39:39: bpp: 0.3235
04/21 12:39:39: Sum Loss: 18.8123
04/21 12:39:39: Loss (s-m-l): [0.0006, 0.038, 0.0]
04/21 12:39:39: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/21 12:42:32: 
Iteration: 28400
04/21 12:42:32: Running time: 829.41 min
04/21 12:42:32: Data Loading time: 0.00007 s
04/21 12:42:32: Loss R: 0.0126
04/21 12:42:32: Loss G: 18.8623
04/21 12:42:32: bpp: 0.3234
04/21 12:42:32: Sum Loss: 19.4378
04/21 12:42:32: Loss (s-m-l): [0.0007, 0.0372, 0.0]
04/21 12:42:32: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/21 12:45:25: 
Iteration: 28500
04/21 12:45:25: Running time: 832.31 min
04/21 12:45:25: Data Loading time: 0.00007 s
04/21 12:45:25: Loss R: 0.0136
04/21 12:45:25: Loss G: 17.6223
04/21 12:45:25: bpp: 0.3214
04/21 12:45:25: Sum Loss: 18.2155
04/21 12:45:25: Loss (s-m-l): [0.0007, 0.0401, 0.0]
04/21 12:45:25: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9841, 1.0, 0.9841], [1.0, 1.0, 1.0]]
04/21 12:48:21: 
Iteration: 28600
04/21 12:48:21: Running time: 835.23 min
04/21 12:48:21: Data Loading time: 0.00007 s
04/21 12:48:21: Loss R: 0.0134
04/21 12:48:21: Loss G: 19.8427
04/21 12:48:21: bpp: 0.3253
04/21 12:48:21: Sum Loss: 20.4358
04/21 12:48:21: Loss (s-m-l): [0.0006, 0.0395, 0.0]
04/21 12:48:21: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9842, 1.0, 0.9842], [1.0, 1.0, 1.0]]
04/21 12:51:15: 
Iteration: 28700
04/21 12:51:15: Running time: 838.14 min
04/21 12:51:15: Data Loading time: 0.00010 s
04/21 12:51:15: Loss R: 0.0133
04/21 12:51:15: Loss G: 19.2902
04/21 12:51:15: bpp: 0.3225
04/21 12:51:15: Sum Loss: 19.8791
04/21 12:51:15: Loss (s-m-l): [0.0006, 0.0393, 0.0]
04/21 12:51:15: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9843, 1.0, 0.9843], [1.0, 1.0, 1.0]]
04/21 12:54:13: 
Iteration: 28800
04/21 12:54:13: Running time: 841.10 min
04/21 12:54:13: Data Loading time: 0.00007 s
04/21 12:54:13: Loss R: 0.0127
04/21 12:54:13: Loss G: 18.1468
04/21 12:54:13: bpp: 0.3230
04/21 12:54:13: Sum Loss: 18.7244
04/21 12:54:13: Loss (s-m-l): [0.0006, 0.0376, 0.0]
04/21 12:54:13: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/21 12:57:08: 
Iteration: 28900
04/21 12:57:08: Running time: 844.02 min
04/21 12:57:08: Data Loading time: 0.00007 s
04/21 12:57:08: Loss R: 0.0130
04/21 12:57:08: Loss G: 23.5559
04/21 12:57:08: bpp: 0.3246
04/21 12:57:08: Sum Loss: 24.1406
04/21 12:57:08: Loss (s-m-l): [0.0006, 0.0384, 0.0]
04/21 12:57:08: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9847, 1.0, 0.9847], [1.0, 1.0, 1.0]]
04/21 13:00:01: 
Iteration: 29000
04/21 13:00:01: Running time: 846.91 min
04/21 13:00:01: Data Loading time: 0.00007 s
04/21 13:00:01: Loss R: 0.0133
04/21 13:00:01: Loss G: 21.4329
04/21 13:00:01: bpp: 0.3232
04/21 13:00:01: Sum Loss: 22.0214
04/21 13:00:01: Loss (s-m-l): [0.0007, 0.0392, 0.0]
04/21 13:00:01: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9844, 1.0, 0.9844], [1.0, 1.0, 1.0]]
04/21 13:02:56: 
Iteration: 29100
04/21 13:02:56: Running time: 849.82 min
04/21 13:02:56: Data Loading time: 0.00007 s
04/21 13:02:56: Loss R: 0.0133
04/21 13:02:56: Loss G: 23.1216
04/21 13:02:56: bpp: 0.3223
04/21 13:02:56: Sum Loss: 23.7108
04/21 13:02:56: Loss (s-m-l): [0.0007, 0.0394, 0.0]
04/21 13:02:56: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9843, 1.0, 0.9843], [1.0, 1.0, 1.0]]
04/21 13:05:56: 
Iteration: 29200
04/21 13:05:56: Running time: 852.81 min
04/21 13:05:56: Data Loading time: 0.00007 s
04/21 13:05:56: Loss R: 0.0131
04/21 13:05:56: Loss G: 18.6096
04/21 13:05:56: bpp: 0.3232
04/21 13:05:56: Sum Loss: 19.1940
04/21 13:05:56: Loss (s-m-l): [0.0006, 0.0386, 0.0]
04/21 13:05:56: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9847, 1.0, 0.9847], [1.0, 1.0, 1.0]]
04/21 13:08:52: 
Iteration: 29300
04/21 13:08:52: Running time: 855.74 min
04/21 13:08:52: Data Loading time: 0.00007 s
04/21 13:08:52: Loss R: 0.0132
04/21 13:08:52: Loss G: 19.2573
04/21 13:08:52: bpp: 0.3198
04/21 13:08:52: Sum Loss: 19.8403
04/21 13:08:52: Loss (s-m-l): [0.0006, 0.0388, 0.0]
04/21 13:08:52: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9847, 1.0, 0.9847], [1.0, 1.0, 1.0]]
04/21 13:11:49: 
Iteration: 29400
04/21 13:11:49: Running time: 858.69 min
04/21 13:11:49: Data Loading time: 0.00007 s
04/21 13:11:49: Loss R: 0.0134
04/21 13:11:49: Loss G: 20.4376
04/21 13:11:49: bpp: 0.3248
04/21 13:11:49: Sum Loss: 21.0295
04/21 13:11:49: Loss (s-m-l): [0.0007, 0.0394, 0.0]
04/21 13:11:49: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9842, 1.0, 0.9842], [1.0, 1.0, 1.0]]
04/21 13:14:47: 
Iteration: 29500
04/21 13:14:47: Running time: 861.68 min
04/21 13:14:47: Data Loading time: 0.00007 s
04/21 13:14:47: Loss R: 0.0136
04/21 13:14:47: Loss G: 25.2909
04/21 13:14:47: bpp: 0.3209
04/21 13:14:47: Sum Loss: 25.8831
04/21 13:14:47: Loss (s-m-l): [0.0007, 0.04, 0.0]
04/21 13:14:47: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.984, 1.0, 0.984], [1.0, 1.0, 1.0]]
04/21 13:17:48: 
Iteration: 29600
04/21 13:17:48: Running time: 864.68 min
04/21 13:17:48: Data Loading time: 0.00007 s
04/21 13:17:48: Loss R: 0.0129
04/21 13:17:48: Loss G: 23.0901
04/21 13:17:48: bpp: 0.3209
04/21 13:17:48: Sum Loss: 23.6691
04/21 13:17:48: Loss (s-m-l): [0.0006, 0.0381, 0.0]
04/21 13:17:48: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9848, 1.0, 0.9848], [1.0, 1.0, 1.0]]
04/21 13:20:46: 
Iteration: 29700
04/21 13:20:46: Running time: 867.65 min
04/21 13:20:46: Data Loading time: 0.00007 s
04/21 13:20:46: Loss R: 0.0133
04/21 13:20:46: Loss G: 20.0387
04/21 13:20:46: bpp: 0.3193
04/21 13:20:46: Sum Loss: 20.6246
04/21 13:20:46: Loss (s-m-l): [0.0006, 0.0393, 0.0]
04/21 13:20:46: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9844, 1.0, 0.9844], [1.0, 1.0, 1.0]]
04/21 13:23:43: 
Iteration: 29800
04/21 13:23:43: Running time: 870.59 min
04/21 13:23:43: Data Loading time: 0.00007 s
04/21 13:23:43: Loss R: 0.0127
04/21 13:23:43: Loss G: 19.0288
04/21 13:23:43: bpp: 0.3243
04/21 13:23:43: Sum Loss: 19.6072
04/21 13:23:43: Loss (s-m-l): [0.0006, 0.0375, 0.0]
04/21 13:23:43: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/21 13:26:40: 
Iteration: 29900
04/21 13:26:40: Running time: 873.55 min
04/21 13:26:40: Data Loading time: 0.00007 s
04/21 13:26:40: Loss R: 0.0130
04/21 13:26:40: Loss G: 18.1566
04/21 13:26:40: bpp: 0.3205
04/21 13:26:40: Sum Loss: 18.7375
04/21 13:26:40: Loss (s-m-l): [0.0006, 0.0384, 0.0]
04/21 13:26:40: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9848, 1.0, 0.9848], [1.0, 1.0, 1.0]]
04/21 13:29:32: 
Iteration: 30000
04/21 13:29:32: Running time: 876.41 min
04/21 13:29:32: Data Loading time: 0.00007 s
04/21 13:29:32: Loss R: 0.0128
04/21 13:29:32: Loss G: 20.3191
04/21 13:29:32: bpp: 0.3240
04/21 13:29:32: Sum Loss: 20.8989
04/21 13:29:32: Loss (s-m-l): [0.0006, 0.0377, 0.0]
04/21 13:29:32: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/21 13:29:32: 
==========Evaluation: iter 30000==========
04/21 13:29:32: save checkpoints: ckpts/tp/tp30000
04/21 13:29:32: LR: [1.25e-05, 1.25e-05, 1.25e-05]
04/21 13:32:28: 
Iteration: 30100
04/21 13:32:28: Running time: 879.35 min
04/21 13:32:28: Data Loading time: 0.00007 s
04/21 13:32:28: Loss R: 0.0135
04/21 13:32:28: Loss G: 26.0616
04/21 13:32:28: bpp: 0.3247
04/21 13:32:28: Sum Loss: 26.6561
04/21 13:32:28: Loss (s-m-l): [0.0007, 0.0398, 0.0]
04/21 13:32:28: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9841, 1.0, 0.9841], [1.0, 1.0, 1.0]]
04/21 13:35:23: 
Iteration: 30200
04/21 13:35:23: Running time: 882.27 min
04/21 13:35:23: Data Loading time: 0.00007 s
04/21 13:35:23: Loss R: 0.0128
04/21 13:35:23: Loss G: 24.7162
04/21 13:35:23: bpp: 0.3234
04/21 13:35:23: Sum Loss: 25.2960
04/21 13:35:23: Loss (s-m-l): [0.0006, 0.0378, 0.0]
04/21 13:35:23: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/21 13:38:13: 
Iteration: 30300
04/21 13:38:13: Running time: 885.09 min
04/21 13:38:13: Data Loading time: 0.00007 s
04/21 13:38:13: Loss R: 0.0127
04/21 13:38:13: Loss G: 22.0218
04/21 13:38:13: bpp: 0.3255
04/21 13:38:13: Sum Loss: 22.6004
04/21 13:38:13: Loss (s-m-l): [0.0006, 0.0374, 0.0]
04/21 13:38:13: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/21 13:41:12: 
Iteration: 30400
04/21 13:41:12: Running time: 888.08 min
04/21 13:41:12: Data Loading time: 0.00007 s
04/21 13:41:12: Loss R: 0.0133
04/21 13:41:12: Loss G: 20.5172
04/21 13:41:12: bpp: 0.3232
04/21 13:41:12: Sum Loss: 21.1073
04/21 13:41:12: Loss (s-m-l): [0.0006, 0.0394, 0.0]
04/21 13:41:12: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9843, 1.0, 0.9843], [1.0, 1.0, 1.0]]
04/21 13:44:08: 
Iteration: 30500
04/21 13:44:08: Running time: 891.02 min
04/21 13:44:08: Data Loading time: 0.00007 s
04/21 13:44:08: Loss R: 0.0133
04/21 13:44:08: Loss G: 19.7526
04/21 13:44:08: bpp: 0.3228
04/21 13:44:08: Sum Loss: 20.3421
04/21 13:44:08: Loss (s-m-l): [0.0006, 0.0394, 0.0]
04/21 13:44:08: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9843, 1.0, 0.9843], [1.0, 1.0, 1.0]]
04/21 13:47:06: 
Iteration: 30600
04/21 13:47:06: Running time: 893.98 min
04/21 13:47:06: Data Loading time: 0.00007 s
04/21 13:47:06: Loss R: 0.0129
04/21 13:47:06: Loss G: 19.2180
04/21 13:47:06: bpp: 0.3221
04/21 13:47:06: Sum Loss: 19.7987
04/21 13:47:06: Loss (s-m-l): [0.0006, 0.0382, 0.0]
04/21 13:47:06: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/21 13:49:59: 
Iteration: 30700
04/21 13:49:59: Running time: 896.87 min
04/21 13:49:59: Data Loading time: 0.00007 s
04/21 13:49:59: Loss R: 0.0131
04/21 13:49:59: Loss G: 19.4576
04/21 13:49:59: bpp: 0.3202
04/21 13:49:59: Sum Loss: 20.0394
04/21 13:49:59: Loss (s-m-l): [0.0006, 0.0386, 0.0]
04/21 13:49:59: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9846, 1.0, 0.9846], [1.0, 1.0, 1.0]]
04/21 13:52:58: 
Iteration: 30800
04/21 13:52:58: Running time: 899.85 min
04/21 13:52:58: Data Loading time: 0.00007 s
04/21 13:52:58: Loss R: 0.0130
04/21 13:52:58: Loss G: 18.9474
04/21 13:52:58: bpp: 0.3228
04/21 13:52:58: Sum Loss: 19.5308
04/21 13:52:58: Loss (s-m-l): [0.0006, 0.0385, 0.0]
04/21 13:52:58: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9847, 1.0, 0.9847], [1.0, 1.0, 1.0]]
04/21 13:55:54: 
Iteration: 30900
04/21 13:55:54: Running time: 902.79 min
04/21 13:55:54: Data Loading time: 0.00007 s
04/21 13:55:54: Loss R: 0.0123
04/21 13:55:54: Loss G: 19.8375
04/21 13:55:54: bpp: 0.3250
04/21 13:55:54: Sum Loss: 20.4075
04/21 13:55:54: Loss (s-m-l): [0.0006, 0.0361, 0.0]
04/21 13:55:54: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9857, 1.0, 0.9857], [1.0, 1.0, 1.0]]
04/21 13:58:56: 
Iteration: 31000
04/21 13:58:56: Running time: 905.81 min
04/21 13:58:56: Data Loading time: 0.00007 s
04/21 13:58:56: Loss R: 0.0130
04/21 13:58:56: Loss G: 18.7114
04/21 13:58:56: bpp: 0.3189
04/21 13:58:56: Sum Loss: 19.2894
04/21 13:58:56: Loss (s-m-l): [0.0006, 0.0382, 0.0]
04/21 13:58:56: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9848, 1.0, 0.9848], [1.0, 1.0, 1.0]]
04/21 14:01:55: 
Iteration: 31100
04/21 14:01:55: Running time: 908.80 min
04/21 14:01:55: Data Loading time: 0.00007 s
04/21 14:01:55: Loss R: 0.0133
04/21 14:01:55: Loss G: 19.2396
04/21 14:01:55: bpp: 0.3180
04/21 14:01:55: Sum Loss: 19.8242
04/21 14:01:55: Loss (s-m-l): [0.0006, 0.0394, 0.0]
04/21 14:01:55: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9843, 1.0, 0.9843], [1.0, 1.0, 1.0]]
04/21 14:04:55: 
Iteration: 31200
04/21 14:04:55: Running time: 911.80 min
04/21 14:04:55: Data Loading time: 0.00007 s
04/21 14:04:55: Loss R: 0.0130
04/21 14:04:55: Loss G: 18.6303
04/21 14:04:55: bpp: 0.3183
04/21 14:04:55: Sum Loss: 19.2088
04/21 14:04:55: Loss (s-m-l): [0.0006, 0.0384, 0.0]
04/21 14:04:55: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9847, 1.0, 0.9847], [1.0, 1.0, 1.0]]
04/21 14:07:48: 
Iteration: 31300
04/21 14:07:48: Running time: 914.68 min
04/21 14:07:48: Data Loading time: 0.00007 s
04/21 14:07:48: Loss R: 0.0125
04/21 14:07:48: Loss G: 17.8489
04/21 14:07:48: bpp: 0.3230
04/21 14:07:48: Sum Loss: 18.4227
04/21 14:07:48: Loss (s-m-l): [0.0006, 0.037, 0.0]
04/21 14:07:48: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/21 14:10:43: 
Iteration: 31400
04/21 14:10:43: Running time: 917.60 min
04/21 14:10:43: Data Loading time: 0.00007 s
04/21 14:10:43: Loss R: 0.0125
04/21 14:10:43: Loss G: 17.8812
04/21 14:10:43: bpp: 0.3229
04/21 14:10:43: Sum Loss: 18.4549
04/21 14:10:43: Loss (s-m-l): [0.0006, 0.037, 0.0]
04/21 14:10:43: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/21 14:13:40: 
Iteration: 31500
04/21 14:13:40: Running time: 920.55 min
04/21 14:13:40: Data Loading time: 0.00007 s
04/21 14:13:40: Loss R: 0.0125
04/21 14:13:40: Loss G: 19.2036
04/21 14:13:40: bpp: 0.3222
04/21 14:13:40: Sum Loss: 19.7761
04/21 14:13:40: Loss (s-m-l): [0.0006, 0.0369, 0.0]
04/21 14:13:40: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9854, 1.0, 0.9854], [1.0, 1.0, 1.0]]
04/21 14:16:39: 
Iteration: 31600
04/21 14:16:39: Running time: 923.54 min
04/21 14:16:39: Data Loading time: 0.00007 s
04/21 14:16:39: Loss R: 0.0130
04/21 14:16:39: Loss G: 18.7118
04/21 14:16:39: bpp: 0.3214
04/21 14:16:39: Sum Loss: 19.2928
04/21 14:16:39: Loss (s-m-l): [0.0006, 0.0383, 0.0]
04/21 14:16:39: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9848, 1.0, 0.9848], [1.0, 1.0, 1.0]]
04/21 14:19:35: 
Iteration: 31700
04/21 14:19:35: Running time: 926.47 min
04/21 14:19:35: Data Loading time: 0.00007 s
04/21 14:19:35: Loss R: 0.0127
04/21 14:19:35: Loss G: 19.2413
04/21 14:19:35: bpp: 0.3230
04/21 14:19:35: Sum Loss: 19.8178
04/21 14:19:35: Loss (s-m-l): [0.0006, 0.0374, 0.0]
04/21 14:19:35: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/21 14:22:29: 
Iteration: 31800
04/21 14:22:29: Running time: 929.36 min
04/21 14:22:29: Data Loading time: 0.00007 s
04/21 14:22:29: Loss R: 0.0124
04/21 14:22:29: Loss G: 17.8817
04/21 14:22:29: bpp: 0.3264
04/21 14:22:29: Sum Loss: 18.4556
04/21 14:22:29: Loss (s-m-l): [0.0006, 0.0365, 0.0]
04/21 14:22:29: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/21 14:25:24: 
Iteration: 31900
04/21 14:25:24: Running time: 932.28 min
04/21 14:25:24: Data Loading time: 0.00007 s
04/21 14:25:24: Loss R: 0.0131
04/21 14:25:24: Loss G: 20.6031
04/21 14:25:24: bpp: 0.3242
04/21 14:25:24: Sum Loss: 21.1896
04/21 14:25:24: Loss (s-m-l): [0.0006, 0.0387, 0.0]
04/21 14:25:24: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9845, 1.0, 0.9845], [1.0, 1.0, 1.0]]
04/21 14:28:20: 
Iteration: 32000
04/21 14:28:20: Running time: 935.22 min
04/21 14:28:20: Data Loading time: 0.00007 s
04/21 14:28:20: Loss R: 0.0130
04/21 14:28:20: Loss G: 19.4766
04/21 14:28:20: bpp: 0.3229
04/21 14:28:20: Sum Loss: 20.0597
04/21 14:28:20: Loss (s-m-l): [0.0007, 0.0384, 0.0]
04/21 14:28:20: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/21 14:28:20: 
==========Evaluation: iter 32000==========
04/21 14:28:20: save checkpoints: ckpts/tp/tp32000
04/21 14:31:14: 
Iteration: 32100
04/21 14:31:14: Running time: 938.11 min
04/21 14:31:14: Data Loading time: 0.00007 s
04/21 14:31:14: Loss R: 0.0129
04/21 14:31:14: Loss G: 18.1285
04/21 14:31:14: bpp: 0.3223
04/21 14:31:14: Sum Loss: 18.7079
04/21 14:31:14: Loss (s-m-l): [0.0006, 0.038, 0.0]
04/21 14:31:14: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/21 14:34:09: 
Iteration: 32200
04/21 14:34:09: Running time: 941.03 min
04/21 14:34:09: Data Loading time: 0.00007 s
04/21 14:34:09: Loss R: 0.0131
04/21 14:34:09: Loss G: 19.2380
04/21 14:34:09: bpp: 0.3242
04/21 14:34:09: Sum Loss: 19.8243
04/21 14:34:09: Loss (s-m-l): [0.0006, 0.0387, 0.0]
04/21 14:34:09: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9845, 1.0, 0.9845], [1.0, 1.0, 1.0]]
04/21 14:37:06: 
Iteration: 32300
04/21 14:37:06: Running time: 943.98 min
04/21 14:37:06: Data Loading time: 0.00007 s
04/21 14:37:06: Loss R: 0.0127
04/21 14:37:06: Loss G: 18.5200
04/21 14:37:06: bpp: 0.3234
04/21 14:37:06: Sum Loss: 19.0973
04/21 14:37:06: Loss (s-m-l): [0.0006, 0.0374, 0.0]
04/21 14:37:06: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/21 14:40:01: 
Iteration: 32400
04/21 14:40:01: Running time: 946.90 min
04/21 14:40:01: Data Loading time: 0.00007 s
04/21 14:40:01: Loss R: 0.0135
04/21 14:40:01: Loss G: 20.6701
04/21 14:40:01: bpp: 0.3209
04/21 14:40:01: Sum Loss: 21.2608
04/21 14:40:01: Loss (s-m-l): [0.0006, 0.0398, 0.0]
04/21 14:40:01: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9841, 1.0, 0.9841], [1.0, 1.0, 1.0]]
04/21 14:42:54: 
Iteration: 32500
04/21 14:42:54: Running time: 949.79 min
04/21 14:42:54: Data Loading time: 0.00007 s
04/21 14:42:54: Loss R: 0.0126
04/21 14:42:54: Loss G: 19.1920
04/21 14:42:54: bpp: 0.3220
04/21 14:42:54: Sum Loss: 19.7661
04/21 14:42:54: Loss (s-m-l): [0.0006, 0.0372, 0.0]
04/21 14:42:54: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/21 14:45:49: 
Iteration: 32600
04/21 14:45:49: Running time: 952.70 min
04/21 14:45:49: Data Loading time: 0.00007 s
04/21 14:45:49: Loss R: 0.0127
04/21 14:45:49: Loss G: 18.9195
04/21 14:45:49: bpp: 0.3227
04/21 14:45:49: Sum Loss: 19.4957
04/21 14:45:49: Loss (s-m-l): [0.0006, 0.0374, 0.0]
04/21 14:45:49: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/21 14:48:47: 
Iteration: 32700
04/21 14:48:47: Running time: 955.67 min
04/21 14:48:47: Data Loading time: 0.00007 s
04/21 14:48:47: Loss R: 0.0128
04/21 14:48:47: Loss G: 19.2864
04/21 14:48:47: bpp: 0.3219
04/21 14:48:47: Sum Loss: 19.8652
04/21 14:48:47: Loss (s-m-l): [0.0006, 0.0379, 0.0]
04/21 14:48:47: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/21 14:51:43: 
Iteration: 32800
04/21 14:51:43: Running time: 958.60 min
04/21 14:51:43: Data Loading time: 0.00007 s
04/21 14:51:43: Loss R: 0.0122
04/21 14:51:43: Loss G: 18.3406
04/21 14:51:43: bpp: 0.3245
04/21 14:51:43: Sum Loss: 18.9094
04/21 14:51:43: Loss (s-m-l): [0.0006, 0.036, 0.0]
04/21 14:51:43: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9856, 1.0, 0.9856], [1.0, 1.0, 1.0]]
04/21 14:54:39: 
Iteration: 32900
04/21 14:54:39: Running time: 961.54 min
04/21 14:54:39: Data Loading time: 0.00007 s
04/21 14:54:39: Loss R: 0.0132
04/21 14:54:39: Loss G: 18.4189
04/21 14:54:39: bpp: 0.3202
04/21 14:54:39: Sum Loss: 19.0027
04/21 14:54:39: Loss (s-m-l): [0.0007, 0.0389, 0.0]
04/21 14:54:39: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9846, 1.0, 0.9846], [1.0, 1.0, 1.0]]
04/21 14:57:37: 
Iteration: 33000
04/21 14:57:37: Running time: 964.51 min
04/21 14:57:37: Data Loading time: 0.00007 s
04/21 14:57:37: Loss R: 0.0130
04/21 14:57:37: Loss G: 19.2582
04/21 14:57:37: bpp: 0.3211
04/21 14:57:37: Sum Loss: 19.8398
04/21 14:57:37: Loss (s-m-l): [0.0006, 0.0384, 0.0]
04/21 14:57:37: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9846, 1.0, 0.9846], [1.0, 1.0, 1.0]]
04/21 15:00:32: 
Iteration: 33100
04/21 15:00:32: Running time: 967.41 min
04/21 15:00:32: Data Loading time: 0.00007 s
04/21 15:00:32: Loss R: 0.0126
04/21 15:00:32: Loss G: 18.9933
04/21 15:00:32: bpp: 0.3226
04/21 15:00:32: Sum Loss: 19.5670
04/21 15:00:32: Loss (s-m-l): [0.0006, 0.0371, 0.0]
04/21 15:00:32: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9854, 1.0, 0.9854], [1.0, 1.0, 1.0]]
04/21 15:03:27: 
Iteration: 33200
04/21 15:03:27: Running time: 970.34 min
04/21 15:03:27: Data Loading time: 0.00007 s
04/21 15:03:27: Loss R: 0.0127
04/21 15:03:27: Loss G: 18.2114
04/21 15:03:27: bpp: 0.3207
04/21 15:03:27: Sum Loss: 18.7869
04/21 15:03:27: Loss (s-m-l): [0.0006, 0.0376, 0.0]
04/21 15:03:27: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/21 15:06:23: 
Iteration: 33300
04/21 15:06:23: Running time: 973.27 min
04/21 15:06:23: Data Loading time: 0.00007 s
04/21 15:06:23: Loss R: 0.0133
04/21 15:06:23: Loss G: 18.5056
04/21 15:06:23: bpp: 0.3233
04/21 15:06:23: Sum Loss: 19.0941
04/21 15:06:23: Loss (s-m-l): [0.0006, 0.0392, 0.0]
04/21 15:06:23: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9844, 1.0, 0.9844], [1.0, 1.0, 1.0]]
04/21 15:09:23: 
Iteration: 33400
04/21 15:09:23: Running time: 976.26 min
04/21 15:09:23: Data Loading time: 0.00007 s
04/21 15:09:23: Loss R: 0.0126
04/21 15:09:23: Loss G: 18.8650
04/21 15:09:23: bpp: 0.3220
04/21 15:09:23: Sum Loss: 19.4380
04/21 15:09:23: Loss (s-m-l): [0.0006, 0.037, 0.0]
04/21 15:09:23: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/21 15:12:17: 
Iteration: 33500
04/21 15:12:17: Running time: 979.16 min
04/21 15:12:17: Data Loading time: 0.00007 s
04/21 15:12:17: Loss R: 0.0128
04/21 15:12:17: Loss G: 19.0230
04/21 15:12:17: bpp: 0.3250
04/21 15:12:17: Sum Loss: 19.6037
04/21 15:12:17: Loss (s-m-l): [0.0006, 0.0377, 0.0]
04/21 15:12:17: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/21 15:15:13: 
Iteration: 33600
04/21 15:15:13: Running time: 982.11 min
04/21 15:15:13: Data Loading time: 0.00007 s
04/21 15:15:13: Loss R: 0.0121
04/21 15:15:13: Loss G: 19.4777
04/21 15:15:13: bpp: 0.3229
04/21 15:15:13: Sum Loss: 20.0430
04/21 15:15:13: Loss (s-m-l): [0.0006, 0.0358, 0.0]
04/21 15:15:13: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9858, 1.0, 0.9858], [1.0, 1.0, 1.0]]
04/21 15:18:10: 
Iteration: 33700
04/21 15:18:10: Running time: 985.04 min
04/21 15:18:10: Data Loading time: 0.00007 s
04/21 15:18:10: Loss R: 0.0135
04/21 15:18:10: Loss G: 19.2372
04/21 15:18:10: bpp: 0.3231
04/21 15:18:10: Sum Loss: 19.8298
04/21 15:18:10: Loss (s-m-l): [0.0007, 0.0397, 0.0]
04/21 15:18:10: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9842, 1.0, 0.9842], [1.0, 1.0, 1.0]]
04/21 15:21:07: 
Iteration: 33800
04/21 15:21:07: Running time: 988.01 min
04/21 15:21:07: Data Loading time: 0.00010 s
04/21 15:21:07: Loss R: 0.0131
04/21 15:21:07: Loss G: 22.2258
04/21 15:21:07: bpp: 0.3215
04/21 15:21:07: Sum Loss: 22.8087
04/21 15:21:07: Loss (s-m-l): [0.0006, 0.0386, 0.0]
04/21 15:21:07: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9846, 1.0, 0.9846], [1.0, 1.0, 1.0]]
04/21 15:24:05: 
Iteration: 33900
04/21 15:24:05: Running time: 990.97 min
04/21 15:24:05: Data Loading time: 0.00007 s
04/21 15:24:05: Loss R: 0.0127
04/21 15:24:05: Loss G: 20.1285
04/21 15:24:05: bpp: 0.3214
04/21 15:24:05: Sum Loss: 20.7029
04/21 15:24:05: Loss (s-m-l): [0.0006, 0.0373, 0.0]
04/21 15:24:05: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/21 15:27:03: 
Iteration: 34000
04/21 15:27:03: Running time: 993.94 min
04/21 15:27:03: Data Loading time: 0.00007 s
04/21 15:27:03: Loss R: 0.0135
04/21 15:27:03: Loss G: 18.5852
04/21 15:27:03: bpp: 0.3206
04/21 15:27:03: Sum Loss: 19.1751
04/21 15:27:03: Loss (s-m-l): [0.0006, 0.0397, 0.0]
04/21 15:27:03: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9841, 1.0, 0.9841], [1.0, 1.0, 1.0]]
04/21 15:27:03: 
==========Evaluation: iter 34000==========
04/21 15:27:03: save checkpoints: ckpts/tp/tp34000
04/21 15:29:58: 
Iteration: 34100
04/21 15:29:58: Running time: 996.85 min
04/21 15:29:58: Data Loading time: 0.00007 s
04/21 15:29:58: Loss R: 0.0128
04/21 15:29:58: Loss G: 20.4826
04/21 15:29:58: bpp: 0.3209
04/21 15:29:58: Sum Loss: 21.0604
04/21 15:29:58: Loss (s-m-l): [0.0006, 0.0379, 0.0]
04/21 15:29:58: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/21 15:32:57: 
Iteration: 34200
04/21 15:32:57: Running time: 999.83 min
04/21 15:32:57: Data Loading time: 0.00007 s
04/21 15:32:57: Loss R: 0.0128
04/21 15:32:57: Loss G: 19.5613
04/21 15:32:57: bpp: 0.3224
04/21 15:32:57: Sum Loss: 20.1393
04/21 15:32:57: Loss (s-m-l): [0.0006, 0.0377, 0.0]
04/21 15:32:57: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/21 15:35:52: 
Iteration: 34300
04/21 15:35:52: Running time: 1002.75 min
04/21 15:35:52: Data Loading time: 0.00007 s
04/21 15:35:52: Loss R: 0.0127
04/21 15:35:52: Loss G: 19.0230
04/21 15:35:52: bpp: 0.3231
04/21 15:35:52: Sum Loss: 19.6004
04/21 15:35:52: Loss (s-m-l): [0.0006, 0.0375, 0.0]
04/21 15:35:52: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/21 15:38:49: 
Iteration: 34400
04/21 15:38:49: Running time: 1005.69 min
04/21 15:38:49: Data Loading time: 0.00007 s
04/21 15:38:49: Loss R: 0.0135
04/21 15:38:49: Loss G: 19.5284
04/21 15:38:49: bpp: 0.3198
04/21 15:38:49: Sum Loss: 20.1177
04/21 15:38:49: Loss (s-m-l): [0.0007, 0.0398, 0.0]
04/21 15:38:49: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9842, 1.0, 0.9842], [1.0, 1.0, 1.0]]
04/21 15:41:40: 
Iteration: 34500
04/21 15:41:40: Running time: 1008.55 min
04/21 15:41:40: Data Loading time: 0.00007 s
04/21 15:41:40: Loss R: 0.0129
04/21 15:41:40: Loss G: 19.9663
04/21 15:41:40: bpp: 0.3232
04/21 15:41:40: Sum Loss: 20.5473
04/21 15:41:40: Loss (s-m-l): [0.0006, 0.0381, 0.0]
04/21 15:41:40: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9848, 1.0, 0.9848], [1.0, 1.0, 1.0]]
04/21 15:44:36: 
Iteration: 34600
04/21 15:44:36: Running time: 1011.48 min
04/21 15:44:36: Data Loading time: 0.00007 s
04/21 15:44:36: Loss R: 0.0128
04/21 15:44:36: Loss G: 18.9295
04/21 15:44:36: bpp: 0.3224
04/21 15:44:36: Sum Loss: 19.5073
04/21 15:44:36: Loss (s-m-l): [0.0006, 0.0377, 0.0]
04/21 15:44:36: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/21 15:47:32: 
Iteration: 34700
04/21 15:47:32: Running time: 1014.42 min
04/21 15:47:32: Data Loading time: 0.00007 s
04/21 15:47:32: Loss R: 0.0128
04/21 15:47:32: Loss G: 19.1433
04/21 15:47:32: bpp: 0.3247
04/21 15:47:32: Sum Loss: 19.7242
04/21 15:47:32: Loss (s-m-l): [0.0006, 0.0378, 0.0]
04/21 15:47:32: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/21 15:50:29: 
Iteration: 34800
04/21 15:50:29: Running time: 1017.37 min
04/21 15:50:29: Data Loading time: 0.00010 s
04/21 15:50:29: Loss R: 0.0128
04/21 15:50:29: Loss G: 19.7289
04/21 15:50:29: bpp: 0.3240
04/21 15:50:29: Sum Loss: 20.3084
04/21 15:50:29: Loss (s-m-l): [0.0006, 0.0377, 0.0]
04/21 15:50:29: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/21 15:53:28: 
Iteration: 34900
04/21 15:53:28: Running time: 1020.35 min
04/21 15:53:28: Data Loading time: 0.00007 s
04/21 15:53:28: Loss R: 0.0124
04/21 15:53:28: Loss G: 19.9785
04/21 15:53:28: bpp: 0.3218
04/21 15:53:28: Sum Loss: 20.5489
04/21 15:53:28: Loss (s-m-l): [0.0006, 0.0367, 0.0]
04/21 15:53:28: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/21 15:56:29: 
Iteration: 35000
04/21 15:56:29: Running time: 1023.37 min
04/21 15:56:29: Data Loading time: 0.00007 s
04/21 15:56:29: Loss R: 0.0129
04/21 15:56:29: Loss G: 18.7215
04/21 15:56:29: bpp: 0.3218
04/21 15:56:29: Sum Loss: 19.3018
04/21 15:56:29: Loss (s-m-l): [0.0006, 0.0381, 0.0]
04/21 15:56:29: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/21 15:59:24: 
Iteration: 35100
04/21 15:59:24: Running time: 1026.28 min
04/21 15:59:24: Data Loading time: 0.00007 s
04/21 15:59:24: Loss R: 0.0129
04/21 15:59:24: Loss G: 19.4244
04/21 15:59:24: bpp: 0.3220
04/21 15:59:24: Sum Loss: 20.0041
04/21 15:59:24: Loss (s-m-l): [0.0007, 0.038, 0.0]
04/21 15:59:24: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/21 16:02:20: 
Iteration: 35200
04/21 16:02:20: Running time: 1029.21 min
04/21 16:02:20: Data Loading time: 0.00007 s
04/21 16:02:20: Loss R: 0.0130
04/21 16:02:20: Loss G: 20.3780
04/21 16:02:20: bpp: 0.3215
04/21 16:02:20: Sum Loss: 20.9595
04/21 16:02:20: Loss (s-m-l): [0.0006, 0.0384, 0.0]
04/21 16:02:20: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9847, 1.0, 0.9847], [1.0, 1.0, 1.0]]
04/21 16:05:14: 
Iteration: 35300
04/21 16:05:14: Running time: 1032.12 min
04/21 16:05:14: Data Loading time: 0.00007 s
04/21 16:05:14: Loss R: 0.0122
04/21 16:05:14: Loss G: 18.8849
04/21 16:05:14: bpp: 0.3237
04/21 16:05:14: Sum Loss: 19.4530
04/21 16:05:14: Loss (s-m-l): [0.0006, 0.036, 0.0]
04/21 16:05:14: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9857, 1.0, 0.9857], [1.0, 1.0, 1.0]]
04/21 16:08:10: 
Iteration: 35400
04/21 16:08:10: Running time: 1035.05 min
04/21 16:08:10: Data Loading time: 0.00007 s
04/21 16:08:10: Loss R: 0.0125
04/21 16:08:10: Loss G: 19.4247
04/21 16:08:10: bpp: 0.3225
04/21 16:08:10: Sum Loss: 19.9971
04/21 16:08:10: Loss (s-m-l): [0.0006, 0.0369, 0.0]
04/21 16:08:10: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/21 16:11:02: 
Iteration: 35500
04/21 16:11:02: Running time: 1037.91 min
04/21 16:11:02: Data Loading time: 0.00007 s
04/21 16:11:02: Loss R: 0.0125
04/21 16:11:02: Loss G: 19.9357
04/21 16:11:02: bpp: 0.3201
04/21 16:11:02: Sum Loss: 20.5052
04/21 16:11:02: Loss (s-m-l): [0.0006, 0.0368, 0.0]
04/21 16:11:02: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/21 16:13:59: 
Iteration: 35600
04/21 16:13:59: Running time: 1040.88 min
04/21 16:13:59: Data Loading time: 0.00007 s
04/21 16:13:59: Loss R: 0.0130
04/21 16:13:59: Loss G: 20.8401
04/21 16:13:59: bpp: 0.3225
04/21 16:13:59: Sum Loss: 21.4232
04/21 16:13:59: Loss (s-m-l): [0.0006, 0.0385, 0.0]
04/21 16:13:59: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9846, 1.0, 0.9846], [1.0, 1.0, 1.0]]
04/21 16:16:56: 
Iteration: 35700
04/21 16:16:56: Running time: 1043.81 min
04/21 16:16:56: Data Loading time: 0.00007 s
04/21 16:16:56: Loss R: 0.0124
04/21 16:16:56: Loss G: 20.4222
04/21 16:16:56: bpp: 0.3266
04/21 16:16:56: Sum Loss: 20.9959
04/21 16:16:56: Loss (s-m-l): [0.0006, 0.0365, 0.0]
04/21 16:16:56: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/21 16:19:53: 
Iteration: 35800
04/21 16:19:53: Running time: 1046.76 min
04/21 16:19:53: Data Loading time: 0.00007 s
04/21 16:19:53: Loss R: 0.0131
04/21 16:19:53: Loss G: 19.7945
04/21 16:19:53: bpp: 0.3220
04/21 16:19:53: Sum Loss: 20.3778
04/21 16:19:53: Loss (s-m-l): [0.0007, 0.0385, 0.0]
04/21 16:19:53: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9847, 1.0, 0.9847], [1.0, 1.0, 1.0]]
04/21 16:22:50: 
Iteration: 35900
04/21 16:22:50: Running time: 1049.72 min
04/21 16:22:50: Data Loading time: 0.00007 s
04/21 16:22:50: Loss R: 0.0123
04/21 16:22:50: Loss G: 19.0215
04/21 16:22:50: bpp: 0.3200
04/21 16:22:50: Sum Loss: 19.5872
04/21 16:22:50: Loss (s-m-l): [0.0006, 0.0363, 0.0]
04/21 16:22:50: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9856, 1.0, 0.9856], [1.0, 1.0, 1.0]]
04/21 16:25:48: 
Iteration: 36000
04/21 16:25:48: Running time: 1052.69 min
04/21 16:25:48: Data Loading time: 0.00007 s
04/21 16:25:48: Loss R: 0.0130
04/21 16:25:48: Loss G: 19.6882
04/21 16:25:48: bpp: 0.3222
04/21 16:25:48: Sum Loss: 20.2704
04/21 16:25:48: Loss (s-m-l): [0.0007, 0.0383, 0.0]
04/21 16:25:48: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9848, 1.0, 0.9848], [1.0, 1.0, 1.0]]
04/21 16:25:48: 
==========Evaluation: iter 36000==========
04/21 16:25:48: save checkpoints: ckpts/tp/tp36000
04/21 16:25:48: LR: [6.25e-06, 6.25e-06, 6.25e-06]
04/21 16:28:44: 
Iteration: 36100
04/21 16:28:44: Running time: 1055.62 min
04/21 16:28:44: Data Loading time: 0.00007 s
04/21 16:28:44: Loss R: 0.0124
04/21 16:28:44: Loss G: 19.5847
04/21 16:28:44: bpp: 0.3234
04/21 16:28:44: Sum Loss: 20.1554
04/21 16:28:44: Loss (s-m-l): [0.0006, 0.0365, 0.0]
04/21 16:28:44: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/21 16:31:38: 
Iteration: 36200
04/21 16:31:38: Running time: 1058.52 min
04/21 16:31:38: Data Loading time: 0.00007 s
04/21 16:31:38: Loss R: 0.0129
04/21 16:31:38: Loss G: 19.8266
04/21 16:31:38: bpp: 0.3225
04/21 16:31:38: Sum Loss: 20.4077
04/21 16:31:38: Loss (s-m-l): [0.0006, 0.0382, 0.0]
04/21 16:31:38: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9848, 1.0, 0.9848], [1.0, 1.0, 1.0]]
04/21 16:34:34: 
Iteration: 36300
04/21 16:34:34: Running time: 1061.45 min
04/21 16:34:34: Data Loading time: 0.00007 s
04/21 16:34:34: Loss R: 0.0130
04/21 16:34:34: Loss G: 20.8748
04/21 16:34:34: bpp: 0.3212
04/21 16:34:34: Sum Loss: 21.4569
04/21 16:34:34: Loss (s-m-l): [0.0006, 0.0385, 0.0]
04/21 16:34:34: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9848, 1.0, 0.9848], [1.0, 1.0, 1.0]]
04/21 16:37:29: 
Iteration: 36400
04/21 16:37:29: Running time: 1064.36 min
04/21 16:37:29: Data Loading time: 0.00008 s
04/21 16:37:29: Loss R: 0.0128
04/21 16:37:29: Loss G: 20.7701
04/21 16:37:29: bpp: 0.3202
04/21 16:37:29: Sum Loss: 21.3469
04/21 16:37:29: Loss (s-m-l): [0.0006, 0.0379, 0.0]
04/21 16:37:29: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9848, 1.0, 0.9848], [1.0, 1.0, 1.0]]
04/21 16:40:27: 
Iteration: 36500
04/21 16:40:27: Running time: 1067.34 min
04/21 16:40:27: Data Loading time: 0.00011 s
04/21 16:40:27: Loss R: 0.0120
04/21 16:40:27: Loss G: 19.7689
04/21 16:40:27: bpp: 0.3244
04/21 16:40:27: Sum Loss: 20.3337
04/21 16:40:27: Loss (s-m-l): [0.0006, 0.0355, 0.0]
04/21 16:40:27: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9859, 1.0, 0.9859], [1.0, 1.0, 1.0]]
04/21 16:43:26: 
Iteration: 36600
04/21 16:43:26: Running time: 1070.32 min
04/21 16:43:26: Data Loading time: 0.00007 s
04/21 16:43:26: Loss R: 0.0131
04/21 16:43:26: Loss G: 19.3620
04/21 16:43:26: bpp: 0.3197
04/21 16:43:26: Sum Loss: 19.9445
04/21 16:43:26: Loss (s-m-l): [0.0006, 0.0388, 0.0]
04/21 16:43:26: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9845, 1.0, 0.9845], [1.0, 1.0, 1.0]]
04/21 16:46:21: 
Iteration: 36700
04/21 16:46:21: Running time: 1073.24 min
04/21 16:46:21: Data Loading time: 0.00009 s
04/21 16:46:21: Loss R: 0.0125
04/21 16:46:21: Loss G: 19.1233
04/21 16:46:21: bpp: 0.3210
04/21 16:46:21: Sum Loss: 19.6951
04/21 16:46:21: Loss (s-m-l): [0.0006, 0.037, 0.0]
04/21 16:46:21: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9854, 1.0, 0.9854], [1.0, 1.0, 1.0]]
04/21 16:49:22: 
Iteration: 36800
04/21 16:49:22: Running time: 1076.25 min
04/21 16:49:22: Data Loading time: 0.00007 s
04/21 16:49:22: Loss R: 0.0130
04/21 16:49:22: Loss G: 18.8460
04/21 16:49:22: bpp: 0.3200
04/21 16:49:22: Sum Loss: 19.4258
04/21 16:49:22: Loss (s-m-l): [0.0006, 0.0383, 0.0]
04/21 16:49:22: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9848, 1.0, 0.9848], [1.0, 1.0, 1.0]]
04/21 16:52:19: 
Iteration: 36900
04/21 16:52:19: Running time: 1079.20 min
04/21 16:52:19: Data Loading time: 0.00108 s
04/21 16:52:19: Loss R: 0.0126
04/21 16:52:19: Loss G: 18.6613
04/21 16:52:19: bpp: 0.3217
04/21 16:52:19: Sum Loss: 19.2355
04/21 16:52:19: Loss (s-m-l): [0.0006, 0.0373, 0.0]
04/21 16:52:19: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/21 16:55:14: 
Iteration: 37000
04/21 16:55:14: Running time: 1082.11 min
04/21 16:55:14: Data Loading time: 0.00008 s
04/21 16:55:14: Loss R: 0.0125
04/21 16:55:14: Loss G: 19.7466
04/21 16:55:14: bpp: 0.3226
04/21 16:55:14: Sum Loss: 20.3189
04/21 16:55:14: Loss (s-m-l): [0.0006, 0.0368, 0.0]
04/21 16:55:14: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/21 16:58:13: 
Iteration: 37100
04/21 16:58:13: Running time: 1085.10 min
04/21 16:58:13: Data Loading time: 0.00007 s
04/21 16:58:13: Loss R: 0.0135
04/21 16:58:13: Loss G: 20.2175
04/21 16:58:13: bpp: 0.3239
04/21 16:58:13: Sum Loss: 20.8116
04/21 16:58:13: Loss (s-m-l): [0.0007, 0.0399, 0.0]
04/21 16:58:13: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9839, 1.0, 0.9839], [1.0, 1.0, 1.0]]
04/21 17:01:11: 
Iteration: 37200
04/21 17:01:11: Running time: 1088.06 min
04/21 17:01:11: Data Loading time: 0.00007 s
04/21 17:01:11: Loss R: 0.0131
04/21 17:01:11: Loss G: 22.5188
04/21 17:01:11: bpp: 0.3203
04/21 17:01:11: Sum Loss: 23.1020
04/21 17:01:11: Loss (s-m-l): [0.0006, 0.0388, 0.0]
04/21 17:01:11: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9846, 1.0, 0.9846], [1.0, 1.0, 1.0]]
04/21 17:04:08: 
Iteration: 37300
04/21 17:04:08: Running time: 1091.01 min
04/21 17:04:08: Data Loading time: 0.00007 s
04/21 17:04:08: Loss R: 0.0129
04/21 17:04:08: Loss G: 20.9888
04/21 17:04:08: bpp: 0.3203
04/21 17:04:08: Sum Loss: 21.5669
04/21 17:04:08: Loss (s-m-l): [0.0006, 0.038, 0.0]
04/21 17:04:08: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/21 17:07:02: 
Iteration: 37400
04/21 17:07:02: Running time: 1093.92 min
04/21 17:07:02: Data Loading time: 0.00007 s
04/21 17:07:02: Loss R: 0.0130
04/21 17:07:02: Loss G: 20.3163
04/21 17:07:02: bpp: 0.3216
04/21 17:07:02: Sum Loss: 20.8978
04/21 17:07:02: Loss (s-m-l): [0.0006, 0.0384, 0.0]
04/21 17:07:02: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9847, 1.0, 0.9847], [1.0, 1.0, 1.0]]
04/21 17:10:05: 
Iteration: 37500
04/21 17:10:05: Running time: 1096.96 min
04/21 17:10:05: Data Loading time: 0.00007 s
04/21 17:10:05: Loss R: 0.0119
04/21 17:10:05: Loss G: 19.4387
04/21 17:10:05: bpp: 0.3222
04/21 17:10:05: Sum Loss: 19.9990
04/21 17:10:05: Loss (s-m-l): [0.0006, 0.0351, 0.0]
04/21 17:10:05: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9862, 1.0, 0.9862], [1.0, 1.0, 1.0]]
04/21 17:13:02: 
Iteration: 37600
04/21 17:13:02: Running time: 1099.92 min
04/21 17:13:02: Data Loading time: 0.00007 s
04/21 17:13:02: Loss R: 0.0125
04/21 17:13:02: Loss G: 18.9689
04/21 17:13:02: bpp: 0.3231
04/21 17:13:02: Sum Loss: 19.5417
04/21 17:13:02: Loss (s-m-l): [0.0006, 0.0369, 0.0]
04/21 17:13:02: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/21 17:16:01: 
Iteration: 37700
04/21 17:16:01: Running time: 1102.89 min
04/21 17:16:01: Data Loading time: 0.00007 s
04/21 17:16:01: Loss R: 0.0128
04/21 17:16:01: Loss G: 19.2641
04/21 17:16:01: bpp: 0.3231
04/21 17:16:01: Sum Loss: 19.8424
04/21 17:16:01: Loss (s-m-l): [0.0006, 0.0377, 0.0]
04/21 17:16:01: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/21 17:18:57: 
Iteration: 37800
04/21 17:18:57: Running time: 1105.84 min
04/21 17:18:57: Data Loading time: 0.00007 s
04/21 17:18:57: Loss R: 0.0126
04/21 17:18:57: Loss G: 19.2968
04/21 17:18:57: bpp: 0.3222
04/21 17:18:57: Sum Loss: 19.8707
04/21 17:18:57: Loss (s-m-l): [0.0006, 0.0371, 0.0]
04/21 17:18:57: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/21 17:21:55: 
Iteration: 37900
04/21 17:21:55: Running time: 1108.80 min
04/21 17:21:55: Data Loading time: 0.00007 s
04/21 17:21:55: Loss R: 0.0126
04/21 17:21:55: Loss G: 18.8818
04/21 17:21:55: bpp: 0.3219
04/21 17:21:55: Sum Loss: 19.4556
04/21 17:21:55: Loss (s-m-l): [0.0006, 0.0372, 0.0]
04/21 17:21:55: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/21 17:24:51: 
Iteration: 38000
04/21 17:24:51: Running time: 1111.73 min
04/21 17:24:51: Data Loading time: 0.00008 s
04/21 17:24:51: Loss R: 0.0126
04/21 17:24:51: Loss G: 19.5803
04/21 17:24:51: bpp: 0.3207
04/21 17:24:51: Sum Loss: 20.1539
04/21 17:24:51: Loss (s-m-l): [0.0006, 0.0373, 0.0]
04/21 17:24:51: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/21 17:24:51: 
==========Evaluation: iter 38000==========
04/21 17:24:51: save checkpoints: ckpts/tp/tp38000
04/21 17:27:45: 
Iteration: 38100
04/21 17:27:45: Running time: 1114.64 min
04/21 17:27:45: Data Loading time: 0.00010 s
04/21 17:27:45: Loss R: 0.0128
04/21 17:27:45: Loss G: 19.2356
04/21 17:27:45: bpp: 0.3208
04/21 17:27:45: Sum Loss: 19.8116
04/21 17:27:45: Loss (s-m-l): [0.0006, 0.0377, 0.0]
04/21 17:27:45: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/21 17:30:41: 
Iteration: 38200
04/21 17:30:41: Running time: 1117.57 min
04/21 17:30:41: Data Loading time: 0.00010 s
04/21 17:30:41: Loss R: 0.0119
04/21 17:30:41: Loss G: 18.5413
04/21 17:30:41: bpp: 0.3226
04/21 17:30:41: Sum Loss: 19.1017
04/21 17:30:41: Loss (s-m-l): [0.0006, 0.0351, 0.0]
04/21 17:30:41: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.986, 1.0, 0.986], [1.0, 1.0, 1.0]]
04/21 17:33:32: 
Iteration: 38300
04/21 17:33:32: Running time: 1120.41 min
04/21 17:33:32: Data Loading time: 0.00007 s
04/21 17:33:32: Loss R: 0.0124
04/21 17:33:32: Loss G: 18.9068
04/21 17:33:32: bpp: 0.3224
04/21 17:33:32: Sum Loss: 19.4764
04/21 17:33:32: Loss (s-m-l): [0.0006, 0.0365, 0.0]
04/21 17:33:32: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/21 17:36:30: 
Iteration: 38400
04/21 17:36:30: Running time: 1123.38 min
04/21 17:36:30: Data Loading time: 0.00007 s
04/21 17:36:30: Loss R: 0.0128
04/21 17:36:30: Loss G: 18.3685
04/21 17:36:30: bpp: 0.3222
04/21 17:36:30: Sum Loss: 18.9457
04/21 17:36:30: Loss (s-m-l): [0.0006, 0.0376, 0.0]
04/21 17:36:30: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/21 17:39:29: 
Iteration: 38500
04/21 17:39:29: Running time: 1126.37 min
04/21 17:39:29: Data Loading time: 0.00007 s
04/21 17:39:29: Loss R: 0.0123
04/21 17:39:29: Loss G: 20.7539
04/21 17:39:29: bpp: 0.3219
04/21 17:39:29: Sum Loss: 21.3222
04/21 17:39:29: Loss (s-m-l): [0.0006, 0.0363, 0.0]
04/21 17:39:29: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9856, 1.0, 0.9856], [1.0, 1.0, 1.0]]
04/21 17:42:22: 
Iteration: 38600
04/21 17:42:22: Running time: 1129.26 min
04/21 17:42:22: Data Loading time: 0.00007 s
04/21 17:42:22: Loss R: 0.0130
04/21 17:42:22: Loss G: 20.5868
04/21 17:42:22: bpp: 0.3214
04/21 17:42:22: Sum Loss: 21.1682
04/21 17:42:22: Loss (s-m-l): [0.0006, 0.0384, 0.0]
04/21 17:42:22: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9846, 1.0, 0.9846], [1.0, 1.0, 1.0]]
04/21 17:45:22: 
Iteration: 38700
04/21 17:45:22: Running time: 1132.26 min
04/21 17:45:22: Data Loading time: 0.00007 s
04/21 17:45:22: Loss R: 0.0126
04/21 17:45:22: Loss G: 19.7958
04/21 17:45:22: bpp: 0.3198
04/21 17:45:22: Sum Loss: 20.3670
04/21 17:45:22: Loss (s-m-l): [0.0006, 0.0371, 0.0]
04/21 17:45:22: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/21 17:48:19: 
Iteration: 38800
04/21 17:48:19: Running time: 1135.20 min
04/21 17:48:19: Data Loading time: 0.00007 s
04/21 17:48:19: Loss R: 0.0126
04/21 17:48:19: Loss G: 19.1831
04/21 17:48:19: bpp: 0.3221
04/21 17:48:19: Sum Loss: 19.7563
04/21 17:48:19: Loss (s-m-l): [0.0006, 0.0371, 0.0]
04/21 17:48:19: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/21 17:51:15: 
Iteration: 38900
04/21 17:51:15: Running time: 1138.14 min
04/21 17:51:15: Data Loading time: 0.00007 s
04/21 17:51:15: Loss R: 0.0126
04/21 17:51:15: Loss G: 19.5314
04/21 17:51:15: bpp: 0.3213
04/21 17:51:15: Sum Loss: 20.1049
04/21 17:51:15: Loss (s-m-l): [0.0006, 0.0372, 0.0]
04/21 17:51:15: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/21 17:54:13: 
Iteration: 39000
04/21 17:54:13: Running time: 1141.09 min
04/21 17:54:13: Data Loading time: 0.00007 s
04/21 17:54:13: Loss R: 0.0126
04/21 17:54:13: Loss G: 19.3527
04/21 17:54:13: bpp: 0.3218
04/21 17:54:13: Sum Loss: 19.9256
04/21 17:54:13: Loss (s-m-l): [0.0006, 0.0371, 0.0]
04/21 17:54:13: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9854, 1.0, 0.9854], [1.0, 1.0, 1.0]]
04/21 17:57:09: 
Iteration: 39100
04/21 17:57:09: Running time: 1144.03 min
04/21 17:57:09: Data Loading time: 0.00007 s
04/21 17:57:09: Loss R: 0.0122
04/21 17:57:09: Loss G: 19.1908
04/21 17:57:09: bpp: 0.3231
04/21 17:57:09: Sum Loss: 19.7571
04/21 17:57:09: Loss (s-m-l): [0.0006, 0.0359, 0.0]
04/21 17:57:09: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9858, 1.0, 0.9858], [1.0, 1.0, 1.0]]
04/21 18:00:02: 
Iteration: 39200
04/21 18:00:02: Running time: 1146.91 min
04/21 18:00:02: Data Loading time: 0.00007 s
04/21 18:00:02: Loss R: 0.0125
04/21 18:00:02: Loss G: 18.7437
04/21 18:00:02: bpp: 0.3231
04/21 18:00:02: Sum Loss: 19.3176
04/21 18:00:02: Loss (s-m-l): [0.0006, 0.037, 0.0]
04/21 18:00:02: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/21 18:02:57: 
Iteration: 39300
04/21 18:02:57: Running time: 1149.83 min
04/21 18:02:57: Data Loading time: 0.00007 s
04/21 18:02:57: Loss R: 0.0132
04/21 18:02:57: Loss G: 19.5778
04/21 18:02:57: bpp: 0.3212
04/21 18:02:57: Sum Loss: 20.1622
04/21 18:02:57: Loss (s-m-l): [0.0006, 0.0389, 0.0]
04/21 18:02:57: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9845, 1.0, 0.9845], [1.0, 1.0, 1.0]]
04/21 18:05:54: 
Iteration: 39400
04/21 18:05:54: Running time: 1152.79 min
04/21 18:05:54: Data Loading time: 0.00007 s
04/21 18:05:54: Loss R: 0.0130
04/21 18:05:54: Loss G: 19.0734
04/21 18:05:54: bpp: 0.3215
04/21 18:05:54: Sum Loss: 19.6557
04/21 18:05:54: Loss (s-m-l): [0.0006, 0.0385, 0.0]
04/21 18:05:54: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9846, 1.0, 0.9846], [1.0, 1.0, 1.0]]
04/21 18:08:50: 
Iteration: 39500
04/21 18:08:50: Running time: 1155.71 min
04/21 18:08:50: Data Loading time: 0.00007 s
04/21 18:08:50: Loss R: 0.0128
04/21 18:08:50: Loss G: 19.0879
04/21 18:08:50: bpp: 0.3216
04/21 18:08:50: Sum Loss: 19.6665
04/21 18:08:50: Loss (s-m-l): [0.0006, 0.0379, 0.0]
04/21 18:08:50: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9848, 1.0, 0.9848], [1.0, 1.0, 1.0]]
04/21 18:11:46: 
Iteration: 39600
04/21 18:11:46: Running time: 1158.66 min
04/21 18:11:46: Data Loading time: 0.00007 s
04/21 18:11:46: Loss R: 0.0131
04/21 18:11:46: Loss G: 19.4683
04/21 18:11:46: bpp: 0.3211
04/21 18:11:46: Sum Loss: 20.0521
04/21 18:11:46: Loss (s-m-l): [0.0006, 0.0388, 0.0]
04/21 18:11:46: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9846, 1.0, 0.9846], [1.0, 1.0, 1.0]]
04/21 18:14:45: 
Iteration: 39700
04/21 18:14:45: Running time: 1161.64 min
04/21 18:14:45: Data Loading time: 0.00007 s
04/21 18:14:45: Loss R: 0.0119
04/21 18:14:45: Loss G: 19.0590
04/21 18:14:45: bpp: 0.3220
04/21 18:14:45: Sum Loss: 19.6199
04/21 18:14:45: Loss (s-m-l): [0.0006, 0.0352, 0.0]
04/21 18:14:45: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9861, 1.0, 0.9861], [1.0, 1.0, 1.0]]
04/21 18:17:42: 
Iteration: 39800
04/21 18:17:42: Running time: 1164.58 min
04/21 18:17:42: Data Loading time: 0.00007 s
04/21 18:17:42: Loss R: 0.0124
04/21 18:17:42: Loss G: 18.6519
04/21 18:17:42: bpp: 0.3209
04/21 18:17:42: Sum Loss: 19.2198
04/21 18:17:42: Loss (s-m-l): [0.0006, 0.0364, 0.0]
04/21 18:17:42: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/21 18:20:34: 
Iteration: 39900
04/21 18:20:34: Running time: 1167.45 min
04/21 18:20:34: Data Loading time: 0.00007 s
04/21 18:20:34: Loss R: 0.0126
04/21 18:20:34: Loss G: 18.7675
04/21 18:20:34: bpp: 0.3241
04/21 18:20:34: Sum Loss: 19.3444
04/21 18:20:34: Loss (s-m-l): [0.0006, 0.0373, 0.0]
04/21 18:20:34: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/21 18:23:31: 
Iteration: 40000
04/21 18:23:31: Running time: 1170.39 min
04/21 18:23:31: Data Loading time: 0.00007 s
04/21 18:23:31: Loss R: 0.0124
04/21 18:23:31: Loss G: 19.3522
04/21 18:23:31: bpp: 0.3217
04/21 18:23:31: Sum Loss: 19.9219
04/21 18:23:31: Loss (s-m-l): [0.0006, 0.0366, 0.0]
04/21 18:23:31: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/21 18:23:31: 
==========Evaluation: iter 40000==========
04/21 18:23:31: save checkpoints: ckpts/tp/tp40000
04/21 18:26:26: 
Iteration: 40100
04/21 18:26:26: Running time: 1173.32 min
04/21 18:26:26: Data Loading time: 0.00007 s
04/21 18:26:26: Loss R: 0.0120
04/21 18:26:26: Loss G: 18.8696
04/21 18:26:26: bpp: 0.3232
04/21 18:26:26: Sum Loss: 19.4326
04/21 18:26:26: Loss (s-m-l): [0.0006, 0.0354, 0.0]
04/21 18:26:26: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9861, 1.0, 0.9861], [1.0, 1.0, 1.0]]
04/21 18:29:22: 
Iteration: 40200
04/21 18:29:22: Running time: 1176.25 min
04/21 18:29:22: Data Loading time: 0.00007 s
04/21 18:29:22: Loss R: 0.0128
04/21 18:29:22: Loss G: 18.5801
04/21 18:29:22: bpp: 0.3200
04/21 18:29:22: Sum Loss: 19.1569
04/21 18:29:22: Loss (s-m-l): [0.0006, 0.0379, 0.0]
04/21 18:29:22: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/21 18:32:18: 
Iteration: 40300
04/21 18:32:18: Running time: 1179.18 min
04/21 18:32:18: Data Loading time: 0.00007 s
04/21 18:32:18: Loss R: 0.0132
04/21 18:32:18: Loss G: 18.8589
04/21 18:32:18: bpp: 0.3187
04/21 18:32:18: Sum Loss: 19.4415
04/21 18:32:18: Loss (s-m-l): [0.0006, 0.039, 0.0]
04/21 18:32:18: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9844, 1.0, 0.9844], [1.0, 1.0, 1.0]]
04/21 18:35:13: 
Iteration: 40400
04/21 18:35:13: Running time: 1182.10 min
04/21 18:35:13: Data Loading time: 0.00007 s
04/21 18:35:13: Loss R: 0.0131
04/21 18:35:13: Loss G: 18.9518
04/21 18:35:13: bpp: 0.3205
04/21 18:35:13: Sum Loss: 19.5339
04/21 18:35:13: Loss (s-m-l): [0.0006, 0.0386, 0.0]
04/21 18:35:13: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9846, 1.0, 0.9846], [1.0, 1.0, 1.0]]
04/21 18:38:09: 
Iteration: 40500
04/21 18:38:09: Running time: 1185.04 min
04/21 18:38:09: Data Loading time: 0.00007 s
04/21 18:38:09: Loss R: 0.0129
04/21 18:38:09: Loss G: 19.1838
04/21 18:38:09: bpp: 0.3238
04/21 18:38:09: Sum Loss: 19.7647
04/21 18:38:09: Loss (s-m-l): [0.0006, 0.0379, 0.0]
04/21 18:38:09: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9848, 1.0, 0.9848], [1.0, 1.0, 1.0]]
04/21 18:41:03: 
Iteration: 40600
04/21 18:41:03: Running time: 1187.93 min
04/21 18:41:03: Data Loading time: 0.00007 s
04/21 18:41:03: Loss R: 0.0121
04/21 18:41:03: Loss G: 19.1245
04/21 18:41:03: bpp: 0.3241
04/21 18:41:03: Sum Loss: 19.6899
04/21 18:41:03: Loss (s-m-l): [0.0006, 0.0356, 0.0]
04/21 18:41:03: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9859, 1.0, 0.9859], [1.0, 1.0, 1.0]]
04/21 18:43:57: 
Iteration: 40700
04/21 18:43:57: Running time: 1190.83 min
04/21 18:43:57: Data Loading time: 0.00007 s
04/21 18:43:57: Loss R: 0.0121
04/21 18:43:57: Loss G: 18.7176
04/21 18:43:57: bpp: 0.3249
04/21 18:43:57: Sum Loss: 19.2848
04/21 18:43:57: Loss (s-m-l): [0.0006, 0.0357, 0.0]
04/21 18:43:57: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9858, 1.0, 0.9858], [1.0, 1.0, 1.0]]
04/21 18:46:53: 
Iteration: 40800
04/21 18:46:53: Running time: 1193.78 min
04/21 18:46:53: Data Loading time: 0.00007 s
04/21 18:46:53: Loss R: 0.0126
04/21 18:46:53: Loss G: 18.2670
04/21 18:46:53: bpp: 0.3223
04/21 18:46:53: Sum Loss: 18.8420
04/21 18:46:53: Loss (s-m-l): [0.0006, 0.0373, 0.0]
04/21 18:46:53: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/21 18:49:51: 
Iteration: 40900
04/21 18:49:51: Running time: 1196.74 min
04/21 18:49:51: Data Loading time: 0.00007 s
04/21 18:49:51: Loss R: 0.0126
04/21 18:49:51: Loss G: 19.3589
04/21 18:49:51: bpp: 0.3216
04/21 18:49:51: Sum Loss: 19.9320
04/21 18:49:51: Loss (s-m-l): [0.0006, 0.0371, 0.0]
04/21 18:49:51: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/21 18:52:45: 
Iteration: 41000
04/21 18:52:45: Running time: 1199.64 min
04/21 18:52:45: Data Loading time: 0.00008 s
04/21 18:52:45: Loss R: 0.0124
04/21 18:52:45: Loss G: 20.3675
04/21 18:52:45: bpp: 0.3225
04/21 18:52:45: Sum Loss: 20.9385
04/21 18:52:45: Loss (s-m-l): [0.0006, 0.0367, 0.0]
04/21 18:52:45: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/21 18:55:47: 
Iteration: 41100
04/21 18:55:47: Running time: 1202.66 min
04/21 18:55:47: Data Loading time: 0.00007 s
04/21 18:55:47: Loss R: 0.0128
04/21 18:55:47: Loss G: 20.0433
04/21 18:55:47: bpp: 0.3178
04/21 18:55:47: Sum Loss: 20.6168
04/21 18:55:47: Loss (s-m-l): [0.0006, 0.0378, 0.0]
04/21 18:55:47: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/21 18:58:42: 
Iteration: 41200
04/21 18:58:42: Running time: 1205.59 min
04/21 18:58:42: Data Loading time: 0.00007 s
04/21 18:58:42: Loss R: 0.0131
04/21 18:58:42: Loss G: 20.1666
04/21 18:58:42: bpp: 0.3214
04/21 18:58:42: Sum Loss: 20.7497
04/21 18:58:42: Loss (s-m-l): [0.0006, 0.0386, 0.0]
04/21 18:58:42: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9845, 1.0, 0.9845], [1.0, 1.0, 1.0]]
04/21 19:01:44: 
Iteration: 41300
04/21 19:01:44: Running time: 1208.62 min
04/21 19:01:44: Data Loading time: 0.00007 s
04/21 19:01:44: Loss R: 0.0132
04/21 19:01:44: Loss G: 20.0813
04/21 19:01:44: bpp: 0.3213
04/21 19:01:44: Sum Loss: 20.6663
04/21 19:01:44: Loss (s-m-l): [0.0006, 0.0389, 0.0]
04/21 19:01:44: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9845, 1.0, 0.9845], [1.0, 1.0, 1.0]]
04/21 19:04:35: 
Iteration: 41400
04/21 19:04:35: Running time: 1211.47 min
04/21 19:04:35: Data Loading time: 0.00007 s
04/21 19:04:35: Loss R: 0.0125
04/21 19:04:35: Loss G: 21.3527
04/21 19:04:35: bpp: 0.3252
04/21 19:04:35: Sum Loss: 21.9277
04/21 19:04:35: Loss (s-m-l): [0.0006, 0.0369, 0.0]
04/21 19:04:35: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/21 19:07:31: 
Iteration: 41500
04/21 19:07:31: Running time: 1214.41 min
04/21 19:07:31: Data Loading time: 0.00007 s
04/21 19:07:31: Loss R: 0.0119
04/21 19:07:31: Loss G: 21.1782
04/21 19:07:31: bpp: 0.3252
04/21 19:07:31: Sum Loss: 21.7422
04/21 19:07:31: Loss (s-m-l): [0.0006, 0.0352, 0.0]
04/21 19:07:31: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.986, 1.0, 0.986], [1.0, 1.0, 1.0]]
04/21 19:10:27: 
Iteration: 41600
04/21 19:10:27: Running time: 1217.34 min
04/21 19:10:27: Data Loading time: 0.00010 s
04/21 19:10:27: Loss R: 0.0122
04/21 19:10:27: Loss G: 20.5361
04/21 19:10:27: bpp: 0.3226
04/21 19:10:27: Sum Loss: 21.1024
04/21 19:10:27: Loss (s-m-l): [0.0006, 0.036, 0.0]
04/21 19:10:27: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9858, 1.0, 0.9858], [1.0, 1.0, 1.0]]
04/21 19:13:23: 
Iteration: 41700
04/21 19:13:23: Running time: 1220.26 min
04/21 19:13:23: Data Loading time: 0.00007 s
04/21 19:13:23: Loss R: 0.0122
04/21 19:13:23: Loss G: 19.5941
04/21 19:13:23: bpp: 0.3237
04/21 19:13:23: Sum Loss: 20.1616
04/21 19:13:23: Loss (s-m-l): [0.0006, 0.036, 0.0]
04/21 19:13:23: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9858, 1.0, 0.9858], [1.0, 1.0, 1.0]]
04/21 19:16:20: 
Iteration: 41800
04/21 19:16:20: Running time: 1223.21 min
04/21 19:16:20: Data Loading time: 0.00007 s
04/21 19:16:20: Loss R: 0.0131
04/21 19:16:20: Loss G: 19.6106
04/21 19:16:20: bpp: 0.3201
04/21 19:16:20: Sum Loss: 20.1934
04/21 19:16:20: Loss (s-m-l): [0.0006, 0.0388, 0.0]
04/21 19:16:20: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9845, 1.0, 0.9845], [1.0, 1.0, 1.0]]
04/21 19:19:18: 
Iteration: 41900
04/21 19:19:18: Running time: 1226.18 min
04/21 19:19:18: Data Loading time: 0.00007 s
04/21 19:19:18: Loss R: 0.0136
04/21 19:19:18: Loss G: 20.2414
04/21 19:19:18: bpp: 0.3226
04/21 19:19:18: Sum Loss: 20.8354
04/21 19:19:18: Loss (s-m-l): [0.0007, 0.04, 0.0]
04/21 19:19:18: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9839, 1.0, 0.9839], [1.0, 1.0, 1.0]]
04/21 19:22:18: 
Iteration: 42000
04/21 19:22:18: Running time: 1229.18 min
04/21 19:22:18: Data Loading time: 0.00007 s
04/21 19:22:18: Loss R: 0.0129
04/21 19:22:18: Loss G: 20.5342
04/21 19:22:18: bpp: 0.3195
04/21 19:22:18: Sum Loss: 21.1123
04/21 19:22:18: Loss (s-m-l): [0.0006, 0.0382, 0.0]
04/21 19:22:18: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/21 19:22:18: 
==========Evaluation: iter 42000==========
04/21 19:22:18: save checkpoints: ckpts/tp/tp42000
04/21 19:22:18: LR: [3.125e-06, 3.125e-06, 3.125e-06]
04/21 19:25:15: 
Iteration: 42100
04/21 19:25:15: Running time: 1232.13 min
04/21 19:25:15: Data Loading time: 0.00007 s
04/21 19:25:15: Loss R: 0.0126
04/21 19:25:15: Loss G: 20.2386
04/21 19:25:15: bpp: 0.3201
04/21 19:25:15: Sum Loss: 20.8103
04/21 19:25:15: Loss (s-m-l): [0.0006, 0.0371, 0.0]
04/21 19:25:15: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/21 19:28:07: 
Iteration: 42200
04/21 19:28:07: Running time: 1235.00 min
04/21 19:28:07: Data Loading time: 0.00007 s
04/21 19:28:07: Loss R: 0.0124
04/21 19:28:07: Loss G: 19.5903
04/21 19:28:07: bpp: 0.3235
04/21 19:28:07: Sum Loss: 20.1613
04/21 19:28:07: Loss (s-m-l): [0.0006, 0.0365, 0.0]
04/21 19:28:07: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9854, 1.0, 0.9854], [1.0, 1.0, 1.0]]
04/21 19:31:04: 
Iteration: 42300
04/21 19:31:04: Running time: 1237.96 min
04/21 19:31:04: Data Loading time: 0.00007 s
04/21 19:31:04: Loss R: 0.0126
04/21 19:31:04: Loss G: 19.6965
04/21 19:31:04: bpp: 0.3197
04/21 19:31:04: Sum Loss: 20.2682
04/21 19:31:04: Loss (s-m-l): [0.0006, 0.0372, 0.0]
04/21 19:31:04: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/21 19:34:02: 
Iteration: 42400
04/21 19:34:02: Running time: 1240.91 min
04/21 19:34:02: Data Loading time: 0.00008 s
04/21 19:34:02: Loss R: 0.0127
04/21 19:34:02: Loss G: 19.5920
04/21 19:34:02: bpp: 0.3202
04/21 19:34:02: Sum Loss: 20.1663
04/21 19:34:02: Loss (s-m-l): [0.0007, 0.0375, 0.0]
04/21 19:34:02: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/21 19:36:59: 
Iteration: 42500
04/21 19:36:59: Running time: 1243.86 min
04/21 19:36:59: Data Loading time: 0.00007 s
04/21 19:36:59: Loss R: 0.0131
04/21 19:36:59: Loss G: 19.5727
04/21 19:36:59: bpp: 0.3221
04/21 19:36:59: Sum Loss: 20.1573
04/21 19:36:59: Loss (s-m-l): [0.0006, 0.0387, 0.0]
04/21 19:36:59: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9845, 1.0, 0.9845], [1.0, 1.0, 1.0]]
04/21 19:39:57: 
Iteration: 42600
04/21 19:39:57: Running time: 1246.83 min
04/21 19:39:57: Data Loading time: 0.00007 s
04/21 19:39:57: Loss R: 0.0128
04/21 19:39:57: Loss G: 19.7129
04/21 19:39:57: bpp: 0.3204
04/21 19:39:57: Sum Loss: 20.2893
04/21 19:39:57: Loss (s-m-l): [0.0006, 0.0378, 0.0]
04/21 19:39:57: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/21 19:42:52: 
Iteration: 42700
04/21 19:42:52: Running time: 1249.76 min
04/21 19:42:52: Data Loading time: 0.00008 s
04/21 19:42:52: Loss R: 0.0124
04/21 19:42:52: Loss G: 20.1577
04/21 19:42:52: bpp: 0.3197
04/21 19:42:52: Sum Loss: 20.7257
04/21 19:42:52: Loss (s-m-l): [0.0006, 0.0367, 0.0]
04/21 19:42:52: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/21 19:45:48: 
Iteration: 42800
04/21 19:45:48: Running time: 1252.69 min
04/21 19:45:48: Data Loading time: 0.00007 s
04/21 19:45:48: Loss R: 0.0118
04/21 19:45:48: Loss G: 20.4842
04/21 19:45:48: bpp: 0.3222
04/21 19:45:48: Sum Loss: 21.0430
04/21 19:45:48: Loss (s-m-l): [0.0006, 0.0349, 0.0]
04/21 19:45:48: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9862, 1.0, 0.9862], [1.0, 1.0, 1.0]]
04/21 19:48:40: 
Iteration: 42900
04/21 19:48:40: Running time: 1255.55 min
04/21 19:48:40: Data Loading time: 0.00007 s
04/21 19:48:40: Loss R: 0.0127
04/21 19:48:40: Loss G: 20.4935
04/21 19:48:40: bpp: 0.3229
04/21 19:48:40: Sum Loss: 21.0703
04/21 19:48:40: Loss (s-m-l): [0.0006, 0.0375, 0.0]
04/21 19:48:40: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/21 19:51:37: 
Iteration: 43000
04/21 19:51:37: Running time: 1258.50 min
04/21 19:51:37: Data Loading time: 0.00007 s
04/21 19:51:37: Loss R: 0.0125
04/21 19:51:37: Loss G: 20.8230
04/21 19:51:37: bpp: 0.3210
04/21 19:51:37: Sum Loss: 21.3949
04/21 19:51:37: Loss (s-m-l): [0.0006, 0.037, 0.0]
04/21 19:51:37: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/21 19:54:34: 
Iteration: 43100
04/21 19:54:34: Running time: 1261.45 min
04/21 19:54:34: Data Loading time: 0.00008 s
04/21 19:54:34: Loss R: 0.0129
04/21 19:54:34: Loss G: 20.8877
04/21 19:54:34: bpp: 0.3227
04/21 19:54:34: Sum Loss: 21.4674
04/21 19:54:34: Loss (s-m-l): [0.0006, 0.038, 0.0]
04/21 19:54:34: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9848, 1.0, 0.9848], [1.0, 1.0, 1.0]]
04/21 19:57:29: 
Iteration: 43200
04/21 19:57:29: Running time: 1264.37 min
04/21 19:57:29: Data Loading time: 0.00007 s
04/21 19:57:29: Loss R: 0.0122
04/21 19:57:29: Loss G: 20.1879
04/21 19:57:29: bpp: 0.3240
04/21 19:57:29: Sum Loss: 20.7558
04/21 19:57:29: Loss (s-m-l): [0.0006, 0.036, 0.0]
04/21 19:57:29: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9857, 1.0, 0.9857], [1.0, 1.0, 1.0]]
04/21 20:00:30: 
Iteration: 43300
04/21 20:00:30: Running time: 1267.39 min
04/21 20:00:30: Data Loading time: 0.00007 s
04/21 20:00:30: Loss R: 0.0125
04/21 20:00:30: Loss G: 20.3328
04/21 20:00:30: bpp: 0.3206
04/21 20:00:30: Sum Loss: 20.9034
04/21 20:00:30: Loss (s-m-l): [0.0006, 0.0369, 0.0]
04/21 20:00:30: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/21 20:03:25: 
Iteration: 43400
04/21 20:03:25: Running time: 1270.30 min
04/21 20:03:25: Data Loading time: 0.00007 s
04/21 20:03:25: Loss R: 0.0127
04/21 20:03:25: Loss G: 19.9711
04/21 20:03:25: bpp: 0.3217
04/21 20:03:25: Sum Loss: 20.5469
04/21 20:03:25: Loss (s-m-l): [0.0006, 0.0375, 0.0]
04/21 20:03:25: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/21 20:06:21: 
Iteration: 43500
04/21 20:06:21: Running time: 1273.23 min
04/21 20:06:21: Data Loading time: 0.00007 s
04/21 20:06:21: Loss R: 0.0124
04/21 20:06:21: Loss G: 19.7158
04/21 20:06:21: bpp: 0.3221
04/21 20:06:21: Sum Loss: 20.2861
04/21 20:06:21: Loss (s-m-l): [0.0006, 0.0366, 0.0]
04/21 20:06:21: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/21 20:09:21: 
Iteration: 43600
04/21 20:09:21: Running time: 1276.23 min
04/21 20:09:21: Data Loading time: 0.00007 s
04/21 20:09:21: Loss R: 0.0125
04/21 20:09:21: Loss G: 19.4892
04/21 20:09:21: bpp: 0.3210
04/21 20:09:21: Sum Loss: 20.0600
04/21 20:09:21: Loss (s-m-l): [0.0006, 0.0369, 0.0]
04/21 20:09:21: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/21 20:12:21: 
Iteration: 43700
04/21 20:12:21: Running time: 1279.23 min
04/21 20:12:21: Data Loading time: 0.00007 s
04/21 20:12:21: Loss R: 0.0128
04/21 20:12:21: Loss G: 19.3763
04/21 20:12:21: bpp: 0.3220
04/21 20:12:21: Sum Loss: 19.9546
04/21 20:12:21: Loss (s-m-l): [0.0006, 0.0378, 0.0]
04/21 20:12:21: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/21 20:15:14: 
Iteration: 43800
04/21 20:15:14: Running time: 1282.12 min
04/21 20:15:14: Data Loading time: 0.00007 s
04/21 20:15:14: Loss R: 0.0123
04/21 20:15:14: Loss G: 19.8727
04/21 20:15:14: bpp: 0.3240
04/21 20:15:14: Sum Loss: 20.4431
04/21 20:15:14: Loss (s-m-l): [0.0006, 0.0364, 0.0]
04/21 20:15:14: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/21 20:18:10: 
Iteration: 43900
04/21 20:18:10: Running time: 1285.05 min
04/21 20:18:10: Data Loading time: 0.00007 s
04/21 20:18:10: Loss R: 0.0124
04/21 20:18:10: Loss G: 19.0976
04/21 20:18:10: bpp: 0.3247
04/21 20:18:10: Sum Loss: 19.6703
04/21 20:18:10: Loss (s-m-l): [0.0006, 0.0366, 0.0]
04/21 20:18:10: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/21 20:21:09: 
Iteration: 44000
04/21 20:21:09: Running time: 1288.03 min
04/21 20:21:09: Data Loading time: 0.00007 s
04/21 20:21:09: Loss R: 0.0128
04/21 20:21:09: Loss G: 19.6584
04/21 20:21:09: bpp: 0.3190
04/21 20:21:09: Sum Loss: 20.2340
04/21 20:21:09: Loss (s-m-l): [0.0006, 0.0379, 0.0]
04/21 20:21:09: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/21 20:21:09: 
==========Evaluation: iter 44000==========
04/21 20:21:09: save checkpoints: ckpts/tp/tp44000
04/21 20:24:07: 
Iteration: 44100
04/21 20:24:07: Running time: 1291.00 min
04/21 20:24:07: Data Loading time: 0.00008 s
04/21 20:24:07: Loss R: 0.0124
04/21 20:24:07: Loss G: 19.1208
04/21 20:24:07: bpp: 0.3204
04/21 20:24:07: Sum Loss: 19.6891
04/21 20:24:07: Loss (s-m-l): [0.0006, 0.0366, 0.0]
04/21 20:24:07: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/21 20:27:04: 
Iteration: 44200
04/21 20:27:04: Running time: 1293.95 min
04/21 20:27:04: Data Loading time: 0.00007 s
04/21 20:27:04: Loss R: 0.0128
04/21 20:27:04: Loss G: 18.9007
04/21 20:27:04: bpp: 0.3196
04/21 20:27:04: Sum Loss: 19.4756
04/21 20:27:04: Loss (s-m-l): [0.0006, 0.0377, 0.0]
04/21 20:27:04: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/21 20:30:00: 
Iteration: 44300
04/21 20:30:00: Running time: 1296.88 min
04/21 20:30:00: Data Loading time: 0.00007 s
04/21 20:30:00: Loss R: 0.0127
04/21 20:30:00: Loss G: 18.7952
04/21 20:30:00: bpp: 0.3182
04/21 20:30:00: Sum Loss: 19.3665
04/21 20:30:00: Loss (s-m-l): [0.0006, 0.0373, 0.0]
04/21 20:30:00: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/21 20:32:57: 
Iteration: 44400
04/21 20:32:57: Running time: 1299.84 min
04/21 20:32:57: Data Loading time: 0.00007 s
04/21 20:32:57: Loss R: 0.0120
04/21 20:32:57: Loss G: 18.4693
04/21 20:32:57: bpp: 0.3243
04/21 20:32:57: Sum Loss: 19.0329
04/21 20:32:57: Loss (s-m-l): [0.0006, 0.0353, 0.0]
04/21 20:32:57: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9858, 1.0, 0.9858], [1.0, 1.0, 1.0]]
04/21 20:35:53: 
Iteration: 44500
04/21 20:35:53: Running time: 1302.77 min
04/21 20:35:53: Data Loading time: 0.00007 s
04/21 20:35:53: Loss R: 0.0128
04/21 20:35:53: Loss G: 18.7920
04/21 20:35:53: bpp: 0.3226
04/21 20:35:53: Sum Loss: 19.3701
04/21 20:35:53: Loss (s-m-l): [0.0006, 0.0377, 0.0]
04/21 20:35:53: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/21 20:38:52: 
Iteration: 44600
04/21 20:38:52: Running time: 1305.76 min
04/21 20:38:52: Data Loading time: 0.00009 s
04/21 20:38:52: Loss R: 0.0122
04/21 20:38:52: Loss G: 18.3379
04/21 20:38:52: bpp: 0.3214
04/21 20:38:52: Sum Loss: 18.9034
04/21 20:38:52: Loss (s-m-l): [0.0006, 0.036, 0.0]
04/21 20:38:52: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9857, 1.0, 0.9857], [1.0, 1.0, 1.0]]
04/21 20:41:48: 
Iteration: 44700
04/21 20:41:48: Running time: 1308.68 min
04/21 20:41:48: Data Loading time: 0.00007 s
04/21 20:41:48: Loss R: 0.0128
04/21 20:41:48: Loss G: 19.2015
04/21 20:41:48: bpp: 0.3216
04/21 20:41:48: Sum Loss: 19.7798
04/21 20:41:48: Loss (s-m-l): [0.0006, 0.0379, 0.0]
04/21 20:41:48: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9848, 1.0, 0.9848], [1.0, 1.0, 1.0]]
04/21 20:44:48: 
Iteration: 44800
04/21 20:44:48: Running time: 1311.68 min
04/21 20:44:48: Data Loading time: 0.00007 s
04/21 20:44:48: Loss R: 0.0126
04/21 20:44:48: Loss G: 20.1441
04/21 20:44:48: bpp: 0.3210
04/21 20:44:48: Sum Loss: 20.7172
04/21 20:44:48: Loss (s-m-l): [0.0006, 0.0372, 0.0]
04/21 20:44:48: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/21 20:47:45: 
Iteration: 44900
04/21 20:47:45: Running time: 1314.63 min
04/21 20:47:45: Data Loading time: 0.00007 s
04/21 20:47:45: Loss R: 0.0125
04/21 20:47:45: Loss G: 19.6051
04/21 20:47:45: bpp: 0.3203
04/21 20:47:45: Sum Loss: 20.1755
04/21 20:47:45: Loss (s-m-l): [0.0006, 0.0369, 0.0]
04/21 20:47:45: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9854, 1.0, 0.9854], [1.0, 1.0, 1.0]]
04/21 20:50:39: 
Iteration: 45000
04/21 20:50:39: Running time: 1317.53 min
04/21 20:50:39: Data Loading time: 0.00007 s
04/21 20:50:39: Loss R: 0.0128
04/21 20:50:39: Loss G: 19.6720
04/21 20:50:39: bpp: 0.3221
04/21 20:50:39: Sum Loss: 20.2495
04/21 20:50:39: Loss (s-m-l): [0.0006, 0.0377, 0.0]
04/21 20:50:39: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/21 20:53:34: 
Iteration: 45100
04/21 20:53:34: Running time: 1320.45 min
04/21 20:53:34: Data Loading time: 0.00007 s
04/21 20:53:34: Loss R: 0.0132
04/21 20:53:34: Loss G: 20.3568
04/21 20:53:34: bpp: 0.3183
04/21 20:53:34: Sum Loss: 20.9391
04/21 20:53:34: Loss (s-m-l): [0.0006, 0.039, 0.0]
04/21 20:53:34: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9844, 1.0, 0.9844], [1.0, 1.0, 1.0]]
04/21 20:56:31: 
Iteration: 45200
04/21 20:56:31: Running time: 1323.40 min
04/21 20:56:31: Data Loading time: 0.00007 s
04/21 20:56:31: Loss R: 0.0118
04/21 20:56:31: Loss G: 19.2038
04/21 20:56:31: bpp: 0.3227
04/21 20:56:31: Sum Loss: 19.7623
04/21 20:56:31: Loss (s-m-l): [0.0006, 0.0348, 0.0]
04/21 20:56:31: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9863, 1.0, 0.9863], [1.0, 1.0, 1.0]]
04/21 20:59:30: 
Iteration: 45300
04/21 20:59:30: Running time: 1326.39 min
04/21 20:59:30: Data Loading time: 0.00007 s
04/21 20:59:30: Loss R: 0.0125
04/21 20:59:30: Loss G: 19.3334
04/21 20:59:30: bpp: 0.3215
04/21 20:59:30: Sum Loss: 19.9057
04/21 20:59:30: Loss (s-m-l): [0.0006, 0.037, 0.0]
04/21 20:59:30: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9854, 1.0, 0.9854], [1.0, 1.0, 1.0]]
04/21 21:02:24: 
Iteration: 45400
04/21 21:02:24: Running time: 1329.28 min
04/21 21:02:24: Data Loading time: 0.00007 s
04/21 21:02:24: Loss R: 0.0126
04/21 21:02:24: Loss G: 19.2038
04/21 21:02:24: bpp: 0.3202
04/21 21:02:24: Sum Loss: 19.7759
04/21 21:02:24: Loss (s-m-l): [0.0006, 0.0372, 0.0]
04/21 21:02:24: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/21 21:05:18: 
Iteration: 45500
04/21 21:05:18: Running time: 1332.19 min
04/21 21:05:18: Data Loading time: 0.00007 s
04/21 21:05:18: Loss R: 0.0125
04/21 21:05:18: Loss G: 18.3932
04/21 21:05:18: bpp: 0.3219
04/21 21:05:18: Sum Loss: 18.9651
04/21 21:05:18: Loss (s-m-l): [0.0006, 0.0369, 0.0]
04/21 21:05:18: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9854, 1.0, 0.9854], [1.0, 1.0, 1.0]]
04/21 21:08:14: 
Iteration: 45600
04/21 21:08:14: Running time: 1335.12 min
04/21 21:08:14: Data Loading time: 0.00007 s
04/21 21:08:14: Loss R: 0.0128
04/21 21:08:14: Loss G: 18.8405
04/21 21:08:14: bpp: 0.3217
04/21 21:08:14: Sum Loss: 19.4189
04/21 21:08:14: Loss (s-m-l): [0.0006, 0.0379, 0.0]
04/21 21:08:14: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/21 21:11:13: 
Iteration: 45700
04/21 21:11:13: Running time: 1338.10 min
04/21 21:11:13: Data Loading time: 0.00007 s
04/21 21:11:13: Loss R: 0.0124
04/21 21:11:13: Loss G: 18.9591
04/21 21:11:13: bpp: 0.3207
04/21 21:11:13: Sum Loss: 19.5271
04/21 21:11:13: Loss (s-m-l): [0.0006, 0.0365, 0.0]
04/21 21:11:13: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/21 21:14:10: 
Iteration: 45800
04/21 21:14:10: Running time: 1341.06 min
04/21 21:14:10: Data Loading time: 0.00008 s
04/21 21:14:10: Loss R: 0.0121
04/21 21:14:10: Loss G: 18.5168
04/21 21:14:10: bpp: 0.3248
04/21 21:14:10: Sum Loss: 19.0837
04/21 21:14:10: Loss (s-m-l): [0.0006, 0.0357, 0.0]
04/21 21:14:10: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9858, 1.0, 0.9858], [1.0, 1.0, 1.0]]
04/21 21:17:06: 
Iteration: 45900
04/21 21:17:06: Running time: 1343.98 min
04/21 21:17:06: Data Loading time: 0.00007 s
04/21 21:17:06: Loss R: 0.0119
04/21 21:17:06: Loss G: 18.7168
04/21 21:17:06: bpp: 0.3222
04/21 21:17:06: Sum Loss: 19.2770
04/21 21:17:06: Loss (s-m-l): [0.0006, 0.0351, 0.0]
04/21 21:17:06: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9861, 1.0, 0.9861], [1.0, 1.0, 1.0]]
04/21 21:20:01: 
Iteration: 46000
04/21 21:20:01: Running time: 1346.90 min
04/21 21:20:01: Data Loading time: 0.00007 s
04/21 21:20:01: Loss R: 0.0124
04/21 21:20:01: Loss G: 18.5164
04/21 21:20:01: bpp: 0.3198
04/21 21:20:01: Sum Loss: 19.0839
04/21 21:20:01: Loss (s-m-l): [0.0006, 0.0366, 0.0]
04/21 21:20:01: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/21 21:20:01: 
==========Evaluation: iter 46000==========
04/21 21:20:01: save checkpoints: ckpts/tp/tp46000
04/21 21:22:59: 
Iteration: 46100
04/21 21:22:59: Running time: 1349.88 min
04/21 21:22:59: Data Loading time: 0.00007 s
04/21 21:22:59: Loss R: 0.0126
04/21 21:22:59: Loss G: 18.5065
04/21 21:22:59: bpp: 0.3210
04/21 21:22:59: Sum Loss: 19.0790
04/21 21:22:59: Loss (s-m-l): [0.0006, 0.0371, 0.0]
04/21 21:22:59: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9854, 1.0, 0.9854], [1.0, 1.0, 1.0]]
04/21 21:25:52: 
Iteration: 46200
04/21 21:25:52: Running time: 1352.75 min
04/21 21:25:52: Data Loading time: 0.00007 s
04/21 21:25:52: Loss R: 0.0128
04/21 21:25:52: Loss G: 17.9069
04/21 21:25:52: bpp: 0.3247
04/21 21:25:52: Sum Loss: 18.4883
04/21 21:25:52: Loss (s-m-l): [0.0006, 0.0379, 0.0]
04/21 21:25:52: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/21 21:28:47: 
Iteration: 46300
04/21 21:28:47: Running time: 1355.67 min
04/21 21:28:47: Data Loading time: 0.00007 s
04/21 21:28:47: Loss R: 0.0124
04/21 21:28:47: Loss G: 18.5139
04/21 21:28:47: bpp: 0.3247
04/21 21:28:47: Sum Loss: 19.0866
04/21 21:28:47: Loss (s-m-l): [0.0006, 0.0366, 0.0]
04/21 21:28:47: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/21 21:31:43: 
Iteration: 46400
04/21 21:31:43: Running time: 1358.59 min
04/21 21:31:43: Data Loading time: 0.00007 s
04/21 21:31:43: Loss R: 0.0130
04/21 21:31:43: Loss G: 18.6657
04/21 21:31:43: bpp: 0.3237
04/21 21:31:43: Sum Loss: 19.2486
04/21 21:31:43: Loss (s-m-l): [0.0006, 0.0383, 0.0]
04/21 21:31:43: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9847, 1.0, 0.9847], [1.0, 1.0, 1.0]]
04/21 21:34:38: 
Iteration: 46500
04/21 21:34:38: Running time: 1361.52 min
04/21 21:34:38: Data Loading time: 0.00007 s
04/21 21:34:38: Loss R: 0.0124
04/21 21:34:38: Loss G: 19.1442
04/21 21:34:38: bpp: 0.3222
04/21 21:34:38: Sum Loss: 19.7148
04/21 21:34:38: Loss (s-m-l): [0.0006, 0.0367, 0.0]
04/21 21:34:38: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9854, 1.0, 0.9854], [1.0, 1.0, 1.0]]
04/21 21:37:35: 
Iteration: 46600
04/21 21:37:35: Running time: 1364.46 min
04/21 21:37:35: Data Loading time: 0.00008 s
04/21 21:37:35: Loss R: 0.0129
04/21 21:37:35: Loss G: 19.8353
04/21 21:37:35: bpp: 0.3209
04/21 21:37:35: Sum Loss: 20.4151
04/21 21:37:35: Loss (s-m-l): [0.0006, 0.0382, 0.0]
04/21 21:37:35: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9848, 1.0, 0.9848], [1.0, 1.0, 1.0]]
04/21 21:40:29: 
Iteration: 46700
04/21 21:40:29: Running time: 1367.37 min
04/21 21:40:29: Data Loading time: 0.00007 s
04/21 21:40:29: Loss R: 0.0122
04/21 21:40:29: Loss G: 19.7042
04/21 21:40:29: bpp: 0.3214
04/21 21:40:29: Sum Loss: 20.2694
04/21 21:40:29: Loss (s-m-l): [0.0006, 0.036, 0.0]
04/21 21:40:29: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9857, 1.0, 0.9857], [1.0, 1.0, 1.0]]
04/21 21:43:28: 
Iteration: 46800
04/21 21:43:28: Running time: 1370.35 min
04/21 21:43:28: Data Loading time: 0.00007 s
04/21 21:43:28: Loss R: 0.0126
04/21 21:43:28: Loss G: 20.3085
04/21 21:43:28: bpp: 0.3173
04/21 21:43:28: Sum Loss: 20.8777
04/21 21:43:28: Loss (s-m-l): [0.0006, 0.0372, 0.0]
04/21 21:43:28: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/21 21:46:26: 
Iteration: 46900
04/21 21:46:26: Running time: 1373.31 min
04/21 21:46:26: Data Loading time: 0.00007 s
04/21 21:46:26: Loss R: 0.0122
04/21 21:46:26: Loss G: 19.4980
04/21 21:46:26: bpp: 0.3219
04/21 21:46:26: Sum Loss: 20.0636
04/21 21:46:26: Loss (s-m-l): [0.0006, 0.036, 0.0]
04/21 21:46:26: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9857, 1.0, 0.9857], [1.0, 1.0, 1.0]]
04/21 21:49:23: 
Iteration: 47000
04/21 21:49:23: Running time: 1376.26 min
04/21 21:49:23: Data Loading time: 0.00007 s
04/21 21:49:23: Loss R: 0.0127
04/21 21:49:23: Loss G: 19.8015
04/21 21:49:23: bpp: 0.3200
04/21 21:49:23: Sum Loss: 20.3749
04/21 21:49:23: Loss (s-m-l): [0.0006, 0.0374, 0.0]
04/21 21:49:23: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/21 21:52:20: 
Iteration: 47100
04/21 21:52:20: Running time: 1379.22 min
04/21 21:52:20: Data Loading time: 0.00007 s
04/21 21:52:20: Loss R: 0.0125
04/21 21:52:20: Loss G: 19.2390
04/21 21:52:20: bpp: 0.3208
04/21 21:52:20: Sum Loss: 19.8093
04/21 21:52:20: Loss (s-m-l): [0.0006, 0.0368, 0.0]
04/21 21:52:20: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9854, 1.0, 0.9854], [1.0, 1.0, 1.0]]
04/21 21:55:18: 
Iteration: 47200
04/21 21:55:18: Running time: 1382.19 min
04/21 21:55:18: Data Loading time: 0.00007 s
04/21 21:55:18: Loss R: 0.0128
04/21 21:55:18: Loss G: 18.7968
04/21 21:55:18: bpp: 0.3202
04/21 21:55:18: Sum Loss: 19.3727
04/21 21:55:18: Loss (s-m-l): [0.0006, 0.0378, 0.0]
04/21 21:55:18: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/21 21:58:16: 
Iteration: 47300
04/21 21:58:16: Running time: 1385.14 min
04/21 21:58:16: Data Loading time: 0.00007 s
04/21 21:58:16: Loss R: 0.0121
04/21 21:58:16: Loss G: 19.2050
04/21 21:58:16: bpp: 0.3214
04/21 21:58:16: Sum Loss: 19.7679
04/21 21:58:16: Loss (s-m-l): [0.0006, 0.0356, 0.0]
04/21 21:58:16: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9859, 1.0, 0.9859], [1.0, 1.0, 1.0]]
04/21 22:01:16: 
Iteration: 47400
04/21 22:01:16: Running time: 1388.16 min
04/21 22:01:16: Data Loading time: 0.00007 s
04/21 22:01:16: Loss R: 0.0128
04/21 22:01:16: Loss G: 19.3683
04/21 22:01:16: bpp: 0.3209
04/21 22:01:16: Sum Loss: 19.9461
04/21 22:01:16: Loss (s-m-l): [0.0006, 0.0379, 0.0]
04/21 22:01:16: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/21 22:04:15: 
Iteration: 47500
04/21 22:04:15: Running time: 1391.13 min
04/21 22:04:15: Data Loading time: 0.00007 s
04/21 22:04:15: Loss R: 0.0122
04/21 22:04:15: Loss G: 19.3994
04/21 22:04:15: bpp: 0.3197
04/21 22:04:15: Sum Loss: 19.9633
04/21 22:04:15: Loss (s-m-l): [0.0006, 0.036, 0.0]
04/21 22:04:15: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9856, 1.0, 0.9856], [1.0, 1.0, 1.0]]
04/21 22:07:11: 
Iteration: 47600
04/21 22:07:11: Running time: 1394.06 min
04/21 22:07:11: Data Loading time: 0.00007 s
04/21 22:07:11: Loss R: 0.0120
04/21 22:07:11: Loss G: 19.2185
04/21 22:07:11: bpp: 0.3233
04/21 22:07:11: Sum Loss: 19.7808
04/21 22:07:11: Loss (s-m-l): [0.0006, 0.0353, 0.0]
04/21 22:07:11: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.986, 1.0, 0.986], [1.0, 1.0, 1.0]]
04/21 22:10:05: 
Iteration: 47700
04/21 22:10:05: Running time: 1396.96 min
04/21 22:10:05: Data Loading time: 0.00007 s
04/21 22:10:05: Loss R: 0.0124
04/21 22:10:05: Loss G: 19.5746
04/21 22:10:05: bpp: 0.3194
04/21 22:10:05: Sum Loss: 20.1416
04/21 22:10:05: Loss (s-m-l): [0.0006, 0.0366, 0.0]
04/21 22:10:05: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/21 22:13:01: 
Iteration: 47800
04/21 22:13:01: Running time: 1399.91 min
04/21 22:13:01: Data Loading time: 0.00007 s
04/21 22:13:01: Loss R: 0.0122
04/21 22:13:01: Loss G: 18.8954
04/21 22:13:01: bpp: 0.3219
04/21 22:13:01: Sum Loss: 19.4613
04/21 22:13:01: Loss (s-m-l): [0.0006, 0.036, 0.0]
04/21 22:13:01: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9857, 1.0, 0.9857], [1.0, 1.0, 1.0]]
04/21 22:15:59: 
Iteration: 47900
04/21 22:15:59: Running time: 1402.87 min
04/21 22:15:59: Data Loading time: 0.00007 s
04/21 22:15:59: Loss R: 0.0125
04/21 22:15:59: Loss G: 18.7760
04/21 22:15:59: bpp: 0.3216
04/21 22:15:59: Sum Loss: 19.3477
04/21 22:15:59: Loss (s-m-l): [0.0006, 0.0369, 0.0]
04/21 22:15:59: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9854, 1.0, 0.9854], [1.0, 1.0, 1.0]]
04/21 22:18:54: 
Iteration: 48000
04/21 22:18:54: Running time: 1405.78 min
04/21 22:18:54: Data Loading time: 0.00007 s
04/21 22:18:54: Loss R: 0.0123
04/21 22:18:54: Loss G: 18.7973
04/21 22:18:54: bpp: 0.3216
04/21 22:18:54: Sum Loss: 19.3657
04/21 22:18:54: Loss (s-m-l): [0.0006, 0.0364, 0.0]
04/21 22:18:54: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/21 22:18:54: 
==========Evaluation: iter 48000==========
04/21 22:18:54: save checkpoints: ckpts/tp/tp48000
04/21 22:18:54: LR: [1.5625e-06, 1.5625e-06, 1.5625e-06]
04/21 22:21:51: 
Iteration: 48100
04/21 22:21:51: Running time: 1408.74 min
04/21 22:21:51: Data Loading time: 0.00007 s
04/21 22:21:51: Loss R: 0.0124
04/21 22:21:51: Loss G: 18.7595
04/21 22:21:51: bpp: 0.3245
04/21 22:21:51: Sum Loss: 19.3313
04/21 22:21:51: Loss (s-m-l): [0.0006, 0.0365, 0.0]
04/21 22:21:51: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/21 22:24:51: 
Iteration: 48200
04/21 22:24:51: Running time: 1411.74 min
04/21 22:24:51: Data Loading time: 0.00007 s
04/21 22:24:51: Loss R: 0.0122
04/21 22:24:51: Loss G: 19.1520
04/21 22:24:51: bpp: 0.3213
04/21 22:24:51: Sum Loss: 19.7165
04/21 22:24:51: Loss (s-m-l): [0.0006, 0.0359, 0.0]
04/21 22:24:51: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9858, 1.0, 0.9858], [1.0, 1.0, 1.0]]
04/21 22:27:52: 
Iteration: 48300
04/21 22:27:52: Running time: 1414.75 min
04/21 22:27:52: Data Loading time: 0.00007 s
04/21 22:27:52: Loss R: 0.0129
04/21 22:27:52: Loss G: 19.4730
04/21 22:27:52: bpp: 0.3226
04/21 22:27:52: Sum Loss: 20.0545
04/21 22:27:52: Loss (s-m-l): [0.0006, 0.0382, 0.0]
04/21 22:27:52: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9847, 1.0, 0.9847], [1.0, 1.0, 1.0]]
04/21 22:30:44: 
Iteration: 48400
04/21 22:30:44: Running time: 1417.62 min
04/21 22:30:44: Data Loading time: 0.00007 s
04/21 22:30:44: Loss R: 0.0133
04/21 22:30:44: Loss G: 19.5046
04/21 22:30:44: bpp: 0.3208
04/21 22:30:44: Sum Loss: 20.0921
04/21 22:30:44: Loss (s-m-l): [0.0006, 0.0394, 0.0]
04/21 22:30:44: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9843, 1.0, 0.9843], [1.0, 1.0, 1.0]]
04/21 22:33:39: 
Iteration: 48500
04/21 22:33:39: Running time: 1420.54 min
04/21 22:33:39: Data Loading time: 0.00007 s
04/21 22:33:39: Loss R: 0.0125
04/21 22:33:39: Loss G: 19.2157
04/21 22:33:39: bpp: 0.3208
04/21 22:33:39: Sum Loss: 19.7866
04/21 22:33:39: Loss (s-m-l): [0.0006, 0.0369, 0.0]
04/21 22:33:39: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/21 22:36:36: 
Iteration: 48600
04/21 22:36:36: Running time: 1423.48 min
04/21 22:36:36: Data Loading time: 0.00007 s
04/21 22:36:36: Loss R: 0.0125
04/21 22:36:36: Loss G: 18.9727
04/21 22:36:36: bpp: 0.3213
04/21 22:36:36: Sum Loss: 19.5449
04/21 22:36:36: Loss (s-m-l): [0.0006, 0.037, 0.0]
04/21 22:36:36: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/21 22:39:32: 
Iteration: 48700
04/21 22:39:32: Running time: 1426.42 min
04/21 22:39:32: Data Loading time: 0.00007 s
04/21 22:39:32: Loss R: 0.0129
04/21 22:39:32: Loss G: 19.4455
04/21 22:39:32: bpp: 0.3213
04/21 22:39:32: Sum Loss: 20.0251
04/21 22:39:32: Loss (s-m-l): [0.0006, 0.0381, 0.0]
04/21 22:39:32: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/21 22:42:31: 
Iteration: 48800
04/21 22:42:31: Running time: 1429.40 min
04/21 22:42:31: Data Loading time: 0.00007 s
04/21 22:42:31: Loss R: 0.0132
04/21 22:42:31: Loss G: 19.1765
04/21 22:42:31: bpp: 0.3220
04/21 22:42:31: Sum Loss: 19.7622
04/21 22:42:31: Loss (s-m-l): [0.0006, 0.039, 0.0]
04/21 22:42:31: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9843, 1.0, 0.9843], [1.0, 1.0, 1.0]]
04/21 22:45:27: 
Iteration: 48900
04/21 22:45:27: Running time: 1432.34 min
04/21 22:45:27: Data Loading time: 0.00009 s
04/21 22:45:27: Loss R: 0.0120
04/21 22:45:27: Loss G: 19.5365
04/21 22:45:27: bpp: 0.3209
04/21 22:45:27: Sum Loss: 20.0976
04/21 22:45:27: Loss (s-m-l): [0.0006, 0.0355, 0.0]
04/21 22:45:27: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9859, 1.0, 0.9859], [1.0, 1.0, 1.0]]
04/21 22:48:25: 
Iteration: 49000
04/21 22:48:25: Running time: 1435.29 min
04/21 22:48:25: Data Loading time: 0.00007 s
04/21 22:48:25: Loss R: 0.0130
04/21 22:48:25: Loss G: 19.7684
04/21 22:48:25: bpp: 0.3191
04/21 22:48:25: Sum Loss: 20.3475
04/21 22:48:25: Loss (s-m-l): [0.0006, 0.0384, 0.0]
04/21 22:48:25: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9848, 1.0, 0.9848], [1.0, 1.0, 1.0]]
04/21 22:51:17: 
Iteration: 49100
04/21 22:51:17: Running time: 1438.17 min
04/21 22:51:17: Data Loading time: 0.00007 s
04/21 22:51:17: Loss R: 0.0125
04/21 22:51:17: Loss G: 19.6038
04/21 22:51:17: bpp: 0.3218
04/21 22:51:17: Sum Loss: 20.1761
04/21 22:51:17: Loss (s-m-l): [0.0006, 0.037, 0.0]
04/21 22:51:17: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/21 22:54:16: 
Iteration: 49200
04/21 22:54:16: Running time: 1441.14 min
04/21 22:54:16: Data Loading time: 0.00007 s
04/21 22:54:16: Loss R: 0.0123
04/21 22:54:16: Loss G: 19.5068
04/21 22:54:16: bpp: 0.3200
04/21 22:54:16: Sum Loss: 20.0733
04/21 22:54:16: Loss (s-m-l): [0.0006, 0.0364, 0.0]
04/21 22:54:16: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9856, 1.0, 0.9856], [1.0, 1.0, 1.0]]
04/21 22:57:11: 
Iteration: 49300
04/21 22:57:11: Running time: 1444.07 min
04/21 22:57:11: Data Loading time: 0.00007 s
04/21 22:57:11: Loss R: 0.0125
04/21 22:57:11: Loss G: 19.7385
04/21 22:57:11: bpp: 0.3194
04/21 22:57:11: Sum Loss: 20.3084
04/21 22:57:11: Loss (s-m-l): [0.0006, 0.037, 0.0]
04/21 22:57:11: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/21 23:00:07: 
Iteration: 49400
04/21 23:00:07: Running time: 1446.99 min
04/21 23:00:07: Data Loading time: 0.00007 s
04/21 23:00:07: Loss R: 0.0119
04/21 23:00:07: Loss G: 19.5346
04/21 23:00:07: bpp: 0.3220
04/21 23:00:07: Sum Loss: 20.0950
04/21 23:00:07: Loss (s-m-l): [0.0006, 0.0352, 0.0]
04/21 23:00:07: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9861, 1.0, 0.9861], [1.0, 1.0, 1.0]]
04/21 23:03:03: 
Iteration: 49500
04/21 23:03:03: Running time: 1449.93 min
04/21 23:03:03: Data Loading time: 0.00007 s
04/21 23:03:03: Loss R: 0.0127
04/21 23:03:03: Loss G: 18.9927
04/21 23:03:03: bpp: 0.3223
04/21 23:03:03: Sum Loss: 19.5695
04/21 23:03:03: Loss (s-m-l): [0.0006, 0.0375, 0.0]
04/21 23:03:03: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/21 23:05:57: 
Iteration: 49600
04/21 23:05:57: Running time: 1452.84 min
04/21 23:05:57: Data Loading time: 0.00007 s
04/21 23:05:57: Loss R: 0.0128
04/21 23:05:57: Loss G: 19.1273
04/21 23:05:57: bpp: 0.3235
04/21 23:05:57: Sum Loss: 19.7070
04/21 23:05:57: Loss (s-m-l): [0.0006, 0.0378, 0.0]
04/21 23:05:57: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/21 23:08:55: 
Iteration: 49700
04/21 23:08:55: Running time: 1455.79 min
04/21 23:08:55: Data Loading time: 0.00007 s
04/21 23:08:55: Loss R: 0.0123
04/21 23:08:55: Loss G: 19.2840
04/21 23:08:55: bpp: 0.3214
04/21 23:08:55: Sum Loss: 19.8512
04/21 23:08:55: Loss (s-m-l): [0.0006, 0.0363, 0.0]
04/21 23:08:55: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9856, 1.0, 0.9856], [1.0, 1.0, 1.0]]
04/21 23:11:52: 
Iteration: 49800
04/21 23:11:52: Running time: 1458.75 min
04/21 23:11:52: Data Loading time: 0.00007 s
04/21 23:11:52: Loss R: 0.0123
04/21 23:11:52: Loss G: 19.1477
04/21 23:11:52: bpp: 0.3215
04/21 23:11:52: Sum Loss: 19.7147
04/21 23:11:52: Loss (s-m-l): [0.0006, 0.0362, 0.0]
04/21 23:11:52: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9856, 1.0, 0.9856], [1.0, 1.0, 1.0]]
04/21 23:14:48: 
Iteration: 49900
04/21 23:14:48: Running time: 1461.68 min
04/21 23:14:48: Data Loading time: 0.00007 s
04/21 23:14:48: Loss R: 0.0126
04/21 23:14:48: Loss G: 19.1605
04/21 23:14:48: bpp: 0.3228
04/21 23:14:48: Sum Loss: 19.7362
04/21 23:14:48: Loss (s-m-l): [0.0006, 0.0373, 0.0]
04/21 23:14:48: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/21 23:17:46: 
Iteration: 50000
04/21 23:17:46: Running time: 1464.65 min
04/21 23:17:46: Data Loading time: 0.00007 s
04/21 23:17:46: Loss R: 0.0126
04/21 23:17:46: Loss G: 18.6590
04/21 23:17:46: bpp: 0.3226
04/21 23:17:46: Sum Loss: 19.2336
04/21 23:17:46: Loss (s-m-l): [0.0006, 0.0372, 0.0]
04/21 23:17:46: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/21 23:17:46: 
==========Evaluation: iter 50000==========
04/21 23:17:46: save checkpoints: ckpts/tp/tp50000
04/21 23:20:43: 
Iteration: 50100
04/21 23:20:43: Running time: 1467.61 min
04/21 23:20:43: Data Loading time: 0.00007 s
04/21 23:20:43: Loss R: 0.0126
04/21 23:20:43: Loss G: 18.9595
04/21 23:20:43: bpp: 0.3211
04/21 23:20:43: Sum Loss: 19.5323
04/21 23:20:43: Loss (s-m-l): [0.0006, 0.0372, 0.0]
04/21 23:20:43: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/21 23:23:41: 
Iteration: 50200
04/21 23:23:41: Running time: 1470.57 min
04/21 23:23:41: Data Loading time: 0.00007 s
04/21 23:23:41: Loss R: 0.0125
04/21 23:23:41: Loss G: 19.2015
04/21 23:23:41: bpp: 0.3202
04/21 23:23:41: Sum Loss: 19.7714
04/21 23:23:41: Loss (s-m-l): [0.0006, 0.0368, 0.0]
04/21 23:23:41: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9854, 1.0, 0.9854], [1.0, 1.0, 1.0]]
04/21 23:26:37: 
Iteration: 50300
04/21 23:26:37: Running time: 1473.50 min
04/21 23:26:37: Data Loading time: 0.00007 s
04/21 23:26:37: Loss R: 0.0126
04/21 23:26:37: Loss G: 19.2351
04/21 23:26:37: bpp: 0.3244
04/21 23:26:37: Sum Loss: 19.8108
04/21 23:26:37: Loss (s-m-l): [0.0006, 0.0371, 0.0]
04/21 23:26:37: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/21 23:29:31: 
Iteration: 50400
04/21 23:29:31: Running time: 1476.40 min
04/21 23:29:31: Data Loading time: 0.00007 s
04/21 23:29:31: Loss R: 0.0124
04/21 23:29:31: Loss G: 19.5890
04/21 23:29:31: bpp: 0.3221
04/21 23:29:31: Sum Loss: 20.1588
04/21 23:29:31: Loss (s-m-l): [0.0006, 0.0366, 0.0]
04/21 23:29:31: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/21 23:32:28: 
Iteration: 50500
04/21 23:32:28: Running time: 1479.35 min
04/21 23:32:28: Data Loading time: 0.00008 s
04/21 23:32:28: Loss R: 0.0131
04/21 23:32:28: Loss G: 19.7048
04/21 23:32:28: bpp: 0.3197
04/21 23:32:28: Sum Loss: 20.2859
04/21 23:32:28: Loss (s-m-l): [0.0006, 0.0386, 0.0]
04/21 23:32:28: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9847, 1.0, 0.9847], [1.0, 1.0, 1.0]]
04/21 23:35:26: 
Iteration: 50600
04/21 23:35:26: Running time: 1482.31 min
04/21 23:35:26: Data Loading time: 0.00007 s
04/21 23:35:26: Loss R: 0.0125
04/21 23:35:26: Loss G: 18.9371
04/21 23:35:26: bpp: 0.3244
04/21 23:35:26: Sum Loss: 19.5121
04/21 23:35:26: Loss (s-m-l): [0.0006, 0.037, 0.0]
04/21 23:35:26: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/21 23:38:22: 
Iteration: 50700
04/21 23:38:22: Running time: 1485.25 min
04/21 23:38:22: Data Loading time: 0.00007 s
04/21 23:38:22: Loss R: 0.0120
04/21 23:38:22: Loss G: 19.6861
04/21 23:38:22: bpp: 0.3220
04/21 23:38:22: Sum Loss: 20.2491
04/21 23:38:22: Loss (s-m-l): [0.0006, 0.0355, 0.0]
04/21 23:38:22: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9859, 1.0, 0.9859], [1.0, 1.0, 1.0]]
04/21 23:41:15: 
Iteration: 50800
04/21 23:41:15: Running time: 1488.14 min
04/21 23:41:15: Data Loading time: 0.00007 s
04/21 23:41:15: Loss R: 0.0129
04/21 23:41:15: Loss G: 19.8544
04/21 23:41:15: bpp: 0.3191
04/21 23:41:15: Sum Loss: 20.4311
04/21 23:41:15: Loss (s-m-l): [0.0006, 0.038, 0.0]
04/21 23:41:15: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/21 23:44:09: 
Iteration: 50900
04/21 23:44:09: Running time: 1491.03 min
04/21 23:44:09: Data Loading time: 0.00007 s
04/21 23:44:09: Loss R: 0.0121
04/21 23:44:09: Loss G: 19.8031
04/21 23:44:09: bpp: 0.3226
04/21 23:44:09: Sum Loss: 20.3674
04/21 23:44:09: Loss (s-m-l): [0.0006, 0.0356, 0.0]
04/21 23:44:09: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9859, 1.0, 0.9859], [1.0, 1.0, 1.0]]
04/21 23:47:08: 
Iteration: 51000
04/21 23:47:08: Running time: 1494.01 min
04/21 23:47:08: Data Loading time: 0.00007 s
04/21 23:47:08: Loss R: 0.0124
04/21 23:47:08: Loss G: 19.5172
04/21 23:47:08: bpp: 0.3193
04/21 23:47:08: Sum Loss: 20.0840
04/21 23:47:08: Loss (s-m-l): [0.0006, 0.0365, 0.0]
04/21 23:47:08: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/21 23:50:04: 
Iteration: 51100
04/21 23:50:04: Running time: 1496.95 min
04/21 23:50:04: Data Loading time: 0.00007 s
04/21 23:50:04: Loss R: 0.0122
04/21 23:50:04: Loss G: 19.1966
04/21 23:50:04: bpp: 0.3208
04/21 23:50:04: Sum Loss: 19.7610
04/21 23:50:04: Loss (s-m-l): [0.0006, 0.0359, 0.0]
04/21 23:50:04: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9858, 1.0, 0.9858], [1.0, 1.0, 1.0]]
04/21 23:52:58: 
Iteration: 51200
04/21 23:52:58: Running time: 1499.84 min
04/21 23:52:58: Data Loading time: 0.00007 s
04/21 23:52:58: Loss R: 0.0123
04/21 23:52:58: Loss G: 19.4456
04/21 23:52:58: bpp: 0.3213
04/21 23:52:58: Sum Loss: 20.0132
04/21 23:52:58: Loss (s-m-l): [0.0006, 0.0363, 0.0]
04/21 23:52:58: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9857, 1.0, 0.9857], [1.0, 1.0, 1.0]]
04/21 23:55:53: 
Iteration: 51300
04/21 23:55:53: Running time: 1502.77 min
04/21 23:55:53: Data Loading time: 0.00007 s
04/21 23:55:53: Loss R: 0.0123
04/21 23:55:53: Loss G: 19.2135
04/21 23:55:53: bpp: 0.3223
04/21 23:55:53: Sum Loss: 19.7828
04/21 23:55:53: Loss (s-m-l): [0.0006, 0.0365, 0.0]
04/21 23:55:53: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9854, 1.0, 0.9854], [1.0, 1.0, 1.0]]
04/21 23:58:51: 
Iteration: 51400
04/21 23:58:51: Running time: 1505.74 min
04/21 23:58:51: Data Loading time: 0.00007 s
04/21 23:58:51: Loss R: 0.0128
04/21 23:58:51: Loss G: 19.3276
04/21 23:58:51: bpp: 0.3237
04/21 23:58:51: Sum Loss: 19.9070
04/21 23:58:51: Loss (s-m-l): [0.0006, 0.0378, 0.0]
04/21 23:58:51: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/22 00:01:52: 
Iteration: 51500
04/22 00:01:52: Running time: 1508.75 min
04/22 00:01:52: Data Loading time: 0.00012 s
04/22 00:01:52: Loss R: 0.0122
04/22 00:01:52: Loss G: 19.7591
04/22 00:01:52: bpp: 0.3205
04/22 00:01:52: Sum Loss: 20.3236
04/22 00:01:52: Loss (s-m-l): [0.0006, 0.036, 0.0]
04/22 00:01:52: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9858, 1.0, 0.9858], [1.0, 1.0, 1.0]]
04/22 00:04:51: 
Iteration: 51600
04/22 00:04:51: Running time: 1511.74 min
04/22 00:04:51: Data Loading time: 0.00007 s
04/22 00:04:51: Loss R: 0.0123
04/22 00:04:51: Loss G: 19.3475
04/22 00:04:51: bpp: 0.3182
04/22 00:04:51: Sum Loss: 19.9125
04/22 00:04:51: Loss (s-m-l): [0.0006, 0.0364, 0.0]
04/22 00:04:51: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9856, 1.0, 0.9856], [1.0, 1.0, 1.0]]
04/22 00:07:48: 
Iteration: 51700
04/22 00:07:48: Running time: 1514.68 min
04/22 00:07:48: Data Loading time: 0.00007 s
04/22 00:07:48: Loss R: 0.0128
04/22 00:07:48: Loss G: 19.6606
04/22 00:07:48: bpp: 0.3235
04/22 00:07:48: Sum Loss: 20.2392
04/22 00:07:48: Loss (s-m-l): [0.0006, 0.0377, 0.0]
04/22 00:07:48: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9848, 1.0, 0.9848], [1.0, 1.0, 1.0]]
04/22 00:10:49: 
Iteration: 51800
04/22 00:10:49: Running time: 1517.70 min
04/22 00:10:49: Data Loading time: 0.00009 s
04/22 00:10:49: Loss R: 0.0123
04/22 00:10:49: Loss G: 19.7907
04/22 00:10:49: bpp: 0.3242
04/22 00:10:49: Sum Loss: 20.3611
04/22 00:10:49: Loss (s-m-l): [0.0006, 0.0363, 0.0]
04/22 00:10:49: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9856, 1.0, 0.9856], [1.0, 1.0, 1.0]]
04/22 00:13:42: 
Iteration: 51900
04/22 00:13:42: Running time: 1520.58 min
04/22 00:13:42: Data Loading time: 0.00007 s
04/22 00:13:42: Loss R: 0.0119
04/22 00:13:42: Loss G: 19.8849
04/22 00:13:42: bpp: 0.3226
04/22 00:13:42: Sum Loss: 20.4463
04/22 00:13:42: Loss (s-m-l): [0.0006, 0.0352, 0.0]
04/22 00:13:42: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.986, 1.0, 0.986], [1.0, 1.0, 1.0]]
04/22 00:16:37: 
Iteration: 52000
04/22 00:16:37: Running time: 1523.49 min
04/22 00:16:37: Data Loading time: 0.00008 s
04/22 00:16:37: Loss R: 0.0131
04/22 00:16:37: Loss G: 19.6606
04/22 00:16:37: bpp: 0.3217
04/22 00:16:37: Sum Loss: 20.2444
04/22 00:16:37: Loss (s-m-l): [0.0006, 0.0387, 0.0]
04/22 00:16:37: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9845, 1.0, 0.9845], [1.0, 1.0, 1.0]]
04/22 00:16:37: 
==========Evaluation: iter 52000==========
04/22 00:16:37: save checkpoints: ckpts/tp/tp52000
04/22 00:19:31: 
Iteration: 52100
04/22 00:19:31: Running time: 1526.40 min
04/22 00:19:31: Data Loading time: 0.00012 s
04/22 00:19:31: Loss R: 0.0124
04/22 00:19:31: Loss G: 19.6909
04/22 00:19:31: bpp: 0.3191
04/22 00:19:31: Sum Loss: 20.2574
04/22 00:19:31: Loss (s-m-l): [0.0006, 0.0365, 0.0]
04/22 00:19:31: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9857, 1.0, 0.9857], [1.0, 1.0, 1.0]]
04/22 00:22:29: 
Iteration: 52200
04/22 00:22:29: Running time: 1529.37 min
04/22 00:22:29: Data Loading time: 0.00007 s
04/22 00:22:29: Loss R: 0.0124
04/22 00:22:29: Loss G: 19.1657
04/22 00:22:29: bpp: 0.3204
04/22 00:22:29: Sum Loss: 19.7347
04/22 00:22:29: Loss (s-m-l): [0.0006, 0.0367, 0.0]
04/22 00:22:29: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9854, 1.0, 0.9854], [1.0, 1.0, 1.0]]
04/22 00:25:23: 
Iteration: 52300
04/22 00:25:23: Running time: 1532.27 min
04/22 00:25:23: Data Loading time: 0.00007 s
04/22 00:25:23: Loss R: 0.0121
04/22 00:25:23: Loss G: 19.5321
04/22 00:25:23: bpp: 0.3198
04/22 00:25:23: Sum Loss: 20.0937
04/22 00:25:23: Loss (s-m-l): [0.0006, 0.0357, 0.0]
04/22 00:25:23: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9859, 1.0, 0.9859], [1.0, 1.0, 1.0]]
04/22 00:28:22: 
Iteration: 52400
04/22 00:28:22: Running time: 1535.25 min
04/22 00:28:22: Data Loading time: 0.00007 s
04/22 00:28:22: Loss R: 0.0126
04/22 00:28:22: Loss G: 19.0398
04/22 00:28:22: bpp: 0.3222
04/22 00:28:22: Sum Loss: 19.6141
04/22 00:28:22: Loss (s-m-l): [0.0006, 0.0372, 0.0]
04/22 00:28:22: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/22 00:31:17: 
Iteration: 52500
04/22 00:31:17: Running time: 1538.17 min
04/22 00:31:17: Data Loading time: 0.00007 s
04/22 00:31:17: Loss R: 0.0127
04/22 00:31:17: Loss G: 18.9877
04/22 00:31:17: bpp: 0.3211
04/22 00:31:17: Sum Loss: 19.5631
04/22 00:31:17: Loss (s-m-l): [0.0006, 0.0375, 0.0]
04/22 00:31:17: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/22 00:34:15: 
Iteration: 52600
04/22 00:34:15: Running time: 1541.14 min
04/22 00:34:15: Data Loading time: 0.00007 s
04/22 00:34:15: Loss R: 0.0126
04/22 00:34:15: Loss G: 18.8039
04/22 00:34:15: bpp: 0.3208
04/22 00:34:15: Sum Loss: 19.3765
04/22 00:34:15: Loss (s-m-l): [0.0006, 0.0372, 0.0]
04/22 00:34:15: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/22 00:37:12: 
Iteration: 52700
04/22 00:37:12: Running time: 1544.08 min
04/22 00:37:12: Data Loading time: 0.00007 s
04/22 00:37:12: Loss R: 0.0126
04/22 00:37:12: Loss G: 18.7095
04/22 00:37:12: bpp: 0.3184
04/22 00:37:12: Sum Loss: 19.2802
04/22 00:37:12: Loss (s-m-l): [0.0006, 0.0372, 0.0]
04/22 00:37:12: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/22 00:40:06: 
Iteration: 52800
04/22 00:40:06: Running time: 1546.98 min
04/22 00:40:06: Data Loading time: 0.00007 s
04/22 00:40:06: Loss R: 0.0125
04/22 00:40:06: Loss G: 18.9060
04/22 00:40:06: bpp: 0.3215
04/22 00:40:06: Sum Loss: 19.4782
04/22 00:40:06: Loss (s-m-l): [0.0006, 0.037, 0.0]
04/22 00:40:06: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/22 00:43:00: 
Iteration: 52900
04/22 00:43:00: Running time: 1549.88 min
04/22 00:43:00: Data Loading time: 0.00007 s
04/22 00:43:00: Loss R: 0.0128
04/22 00:43:00: Loss G: 18.9050
04/22 00:43:00: bpp: 0.3220
04/22 00:43:00: Sum Loss: 19.4840
04/22 00:43:00: Loss (s-m-l): [0.0006, 0.0379, 0.0]
04/22 00:43:00: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/22 00:45:55: 
Iteration: 53000
04/22 00:45:55: Running time: 1552.80 min
04/22 00:45:55: Data Loading time: 0.00007 s
04/22 00:45:55: Loss R: 0.0128
04/22 00:45:55: Loss G: 19.4807
04/22 00:45:55: bpp: 0.3223
04/22 00:45:55: Sum Loss: 20.0585
04/22 00:45:55: Loss (s-m-l): [0.0006, 0.0377, 0.0]
04/22 00:45:55: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/22 00:48:49: 
Iteration: 53100
04/22 00:48:49: Running time: 1555.71 min
04/22 00:48:49: Data Loading time: 0.00007 s
04/22 00:48:49: Loss R: 0.0123
04/22 00:48:49: Loss G: 19.7263
04/22 00:48:49: bpp: 0.3228
04/22 00:48:49: Sum Loss: 20.2960
04/22 00:48:49: Loss (s-m-l): [0.0006, 0.0364, 0.0]
04/22 00:48:49: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9854, 1.0, 0.9854], [1.0, 1.0, 1.0]]
04/22 00:51:44: 
Iteration: 53200
04/22 00:51:44: Running time: 1558.63 min
04/22 00:51:44: Data Loading time: 0.00007 s
04/22 00:51:44: Loss R: 0.0122
04/22 00:51:44: Loss G: 19.9815
04/22 00:51:44: bpp: 0.3187
04/22 00:51:44: Sum Loss: 20.5433
04/22 00:51:44: Loss (s-m-l): [0.0006, 0.0359, 0.0]
04/22 00:51:44: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9859, 1.0, 0.9859], [1.0, 1.0, 1.0]]
04/22 00:54:40: 
Iteration: 53300
04/22 00:54:40: Running time: 1561.54 min
04/22 00:54:40: Data Loading time: 0.00007 s
04/22 00:54:40: Loss R: 0.0128
04/22 00:54:40: Loss G: 19.2924
04/22 00:54:40: bpp: 0.3204
04/22 00:54:40: Sum Loss: 19.8695
04/22 00:54:40: Loss (s-m-l): [0.0006, 0.0379, 0.0]
04/22 00:54:40: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/22 00:57:40: 
Iteration: 53400
04/22 00:57:40: Running time: 1564.55 min
04/22 00:57:40: Data Loading time: 0.00007 s
04/22 00:57:40: Loss R: 0.0126
04/22 00:57:40: Loss G: 19.4121
04/22 00:57:40: bpp: 0.3202
04/22 00:57:40: Sum Loss: 19.9836
04/22 00:57:40: Loss (s-m-l): [0.0006, 0.0371, 0.0]
04/22 00:57:40: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/22 01:00:32: 
Iteration: 53500
04/22 01:00:32: Running time: 1567.42 min
04/22 01:00:32: Data Loading time: 0.00007 s
04/22 01:00:32: Loss R: 0.0127
04/22 01:00:32: Loss G: 19.2463
04/22 01:00:32: bpp: 0.3230
04/22 01:00:32: Sum Loss: 19.8231
04/22 01:00:32: Loss (s-m-l): [0.0006, 0.0375, 0.0]
04/22 01:00:32: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/22 01:03:28: 
Iteration: 53600
04/22 01:03:28: Running time: 1570.36 min
04/22 01:03:28: Data Loading time: 0.00007 s
04/22 01:03:28: Loss R: 0.0125
04/22 01:03:28: Loss G: 19.3543
04/22 01:03:28: bpp: 0.3232
04/22 01:03:28: Sum Loss: 19.9285
04/22 01:03:28: Loss (s-m-l): [0.0006, 0.037, 0.0]
04/22 01:03:28: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/22 01:06:20: 
Iteration: 53700
04/22 01:06:20: Running time: 1573.22 min
04/22 01:06:20: Data Loading time: 0.00007 s
04/22 01:06:20: Loss R: 0.0126
04/22 01:06:20: Loss G: 19.9444
04/22 01:06:20: bpp: 0.3240
04/22 01:06:20: Sum Loss: 20.5211
04/22 01:06:20: Loss (s-m-l): [0.0006, 0.0373, 0.0]
04/22 01:06:20: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/22 01:09:17: 
Iteration: 53800
04/22 01:09:17: Running time: 1576.16 min
04/22 01:09:17: Data Loading time: 0.00007 s
04/22 01:09:17: Loss R: 0.0121
04/22 01:09:17: Loss G: 19.8696
04/22 01:09:17: bpp: 0.3210
04/22 01:09:17: Sum Loss: 20.4333
04/22 01:09:17: Loss (s-m-l): [0.0006, 0.0358, 0.0]
04/22 01:09:17: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9859, 1.0, 0.9859], [1.0, 1.0, 1.0]]
04/22 01:12:16: 
Iteration: 53900
04/22 01:12:16: Running time: 1579.15 min
04/22 01:12:16: Data Loading time: 0.00007 s
04/22 01:12:16: Loss R: 0.0122
04/22 01:12:16: Loss G: 19.6771
04/22 01:12:16: bpp: 0.3214
04/22 01:12:16: Sum Loss: 20.2418
04/22 01:12:16: Loss (s-m-l): [0.0006, 0.0359, 0.0]
04/22 01:12:16: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9858, 1.0, 0.9858], [1.0, 1.0, 1.0]]
04/22 01:15:10: 
Iteration: 54000
04/22 01:15:10: Running time: 1582.04 min
04/22 01:15:10: Data Loading time: 0.00007 s
04/22 01:15:10: Loss R: 0.0123
04/22 01:15:10: Loss G: 19.3082
04/22 01:15:10: bpp: 0.3232
04/22 01:15:10: Sum Loss: 19.8770
04/22 01:15:10: Loss (s-m-l): [0.0006, 0.0362, 0.0]
04/22 01:15:10: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9856, 1.0, 0.9856], [1.0, 1.0, 1.0]]
04/22 01:15:10: 
==========Evaluation: iter 54000==========
04/22 01:15:10: save checkpoints: ckpts/tp/tp54000
04/22 01:15:10: LR: [7.8125e-07, 7.8125e-07, 7.8125e-07]
04/22 01:18:07: 
Iteration: 54100
04/22 01:18:07: Running time: 1585.00 min
04/22 01:18:07: Data Loading time: 0.00007 s
04/22 01:18:07: Loss R: 0.0123
04/22 01:18:07: Loss G: 19.3073
04/22 01:18:07: bpp: 0.3198
04/22 01:18:07: Sum Loss: 19.8732
04/22 01:18:07: Loss (s-m-l): [0.0006, 0.0363, 0.0]
04/22 01:18:07: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9856, 1.0, 0.9856], [1.0, 1.0, 1.0]]
04/22 01:21:00: 
Iteration: 54200
04/22 01:21:00: Running time: 1587.89 min
04/22 01:21:00: Data Loading time: 0.00007 s
04/22 01:21:00: Loss R: 0.0126
04/22 01:21:00: Loss G: 18.9739
04/22 01:21:00: bpp: 0.3226
04/22 01:21:00: Sum Loss: 19.5476
04/22 01:21:00: Loss (s-m-l): [0.0006, 0.0371, 0.0]
04/22 01:21:00: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/22 01:23:58: 
Iteration: 54300
04/22 01:23:58: Running time: 1590.85 min
04/22 01:23:58: Data Loading time: 0.00009 s
04/22 01:23:58: Loss R: 0.0125
04/22 01:23:58: Loss G: 19.0524
04/22 01:23:58: bpp: 0.3240
04/22 01:23:58: Sum Loss: 19.6256
04/22 01:23:58: Loss (s-m-l): [0.0006, 0.0368, 0.0]
04/22 01:23:58: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/22 01:26:53: 
Iteration: 54400
04/22 01:26:53: Running time: 1593.76 min
04/22 01:26:53: Data Loading time: 0.00008 s
04/22 01:26:53: Loss R: 0.0126
04/22 01:26:53: Loss G: 19.8614
04/22 01:26:53: bpp: 0.3200
04/22 01:26:53: Sum Loss: 20.4335
04/22 01:26:53: Loss (s-m-l): [0.0006, 0.0372, 0.0]
04/22 01:26:53: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/22 01:29:52: 
Iteration: 54500
04/22 01:29:52: Running time: 1596.74 min
04/22 01:29:52: Data Loading time: 0.00007 s
04/22 01:29:52: Loss R: 0.0127
04/22 01:29:52: Loss G: 19.3672
04/22 01:29:52: bpp: 0.3216
04/22 01:29:52: Sum Loss: 19.9436
04/22 01:29:52: Loss (s-m-l): [0.0006, 0.0376, 0.0]
04/22 01:29:52: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/22 01:32:49: 
Iteration: 54600
04/22 01:32:49: Running time: 1599.70 min
04/22 01:32:49: Data Loading time: 0.00010 s
04/22 01:32:49: Loss R: 0.0125
04/22 01:32:49: Loss G: 19.5191
04/22 01:32:49: bpp: 0.3187
04/22 01:32:49: Sum Loss: 20.0880
04/22 01:32:49: Loss (s-m-l): [0.0006, 0.0369, 0.0]
04/22 01:32:49: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/22 01:35:45: 
Iteration: 54700
04/22 01:35:45: Running time: 1602.63 min
04/22 01:35:45: Data Loading time: 0.00007 s
04/22 01:35:45: Loss R: 0.0123
04/22 01:35:45: Loss G: 19.7217
04/22 01:35:45: bpp: 0.3212
04/22 01:35:45: Sum Loss: 20.2894
04/22 01:35:45: Loss (s-m-l): [0.0006, 0.0364, 0.0]
04/22 01:35:45: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/22 01:38:44: 
Iteration: 54800
04/22 01:38:44: Running time: 1605.61 min
04/22 01:38:44: Data Loading time: 0.00007 s
04/22 01:38:44: Loss R: 0.0125
04/22 01:38:44: Loss G: 19.2060
04/22 01:38:44: bpp: 0.3191
04/22 01:38:44: Sum Loss: 19.7743
04/22 01:38:44: Loss (s-m-l): [0.0006, 0.0368, 0.0]
04/22 01:38:44: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9854, 1.0, 0.9854], [1.0, 1.0, 1.0]]
04/22 01:41:32: 
Iteration: 54900
04/22 01:41:32: Running time: 1608.42 min
04/22 01:41:32: Data Loading time: 0.00007 s
04/22 01:41:32: Loss R: 0.0124
04/22 01:41:32: Loss G: 19.6525
04/22 01:41:32: bpp: 0.3234
04/22 01:41:32: Sum Loss: 20.2231
04/22 01:41:32: Loss (s-m-l): [0.0006, 0.0365, 0.0]
04/22 01:41:32: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/22 01:44:29: 
Iteration: 55000
04/22 01:44:29: Running time: 1611.37 min
04/22 01:44:29: Data Loading time: 0.00009 s
04/22 01:44:29: Loss R: 0.0131
04/22 01:44:29: Loss G: 19.7247
04/22 01:44:29: bpp: 0.3191
04/22 01:44:29: Sum Loss: 20.3051
04/22 01:44:29: Loss (s-m-l): [0.0006, 0.0386, 0.0]
04/22 01:44:29: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9845, 1.0, 0.9845], [1.0, 1.0, 1.0]]
04/22 01:47:27: 
Iteration: 55100
04/22 01:47:27: Running time: 1614.34 min
04/22 01:47:27: Data Loading time: 0.00008 s
04/22 01:47:27: Loss R: 0.0127
04/22 01:47:27: Loss G: 19.6336
04/22 01:47:27: bpp: 0.3234
04/22 01:47:27: Sum Loss: 20.2115
04/22 01:47:27: Loss (s-m-l): [0.0006, 0.0376, 0.0]
04/22 01:47:27: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/22 01:50:25: 
Iteration: 55200
04/22 01:50:25: Running time: 1617.29 min
04/22 01:50:25: Data Loading time: 0.00007 s
04/22 01:50:25: Loss R: 0.0125
04/22 01:50:25: Loss G: 19.5688
04/22 01:50:25: bpp: 0.3216
04/22 01:50:25: Sum Loss: 20.1401
04/22 01:50:25: Loss (s-m-l): [0.0006, 0.0368, 0.0]
04/22 01:50:25: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/22 01:53:20: 
Iteration: 55300
04/22 01:53:20: Running time: 1620.22 min
04/22 01:53:20: Data Loading time: 0.00007 s
04/22 01:53:20: Loss R: 0.0123
04/22 01:53:20: Loss G: 19.7969
04/22 01:53:20: bpp: 0.3207
04/22 01:53:20: Sum Loss: 20.3638
04/22 01:53:20: Loss (s-m-l): [0.0006, 0.0363, 0.0]
04/22 01:53:20: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9856, 1.0, 0.9856], [1.0, 1.0, 1.0]]
04/22 01:56:16: 
Iteration: 55400
04/22 01:56:16: Running time: 1623.15 min
04/22 01:56:16: Data Loading time: 0.00007 s
04/22 01:56:16: Loss R: 0.0117
04/22 01:56:16: Loss G: 19.5216
04/22 01:56:16: bpp: 0.3213
04/22 01:56:16: Sum Loss: 20.0766
04/22 01:56:16: Loss (s-m-l): [0.0006, 0.0345, 0.0]
04/22 01:56:16: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9864, 1.0, 0.9864], [1.0, 1.0, 1.0]]
04/22 01:59:12: 
Iteration: 55500
04/22 01:59:12: Running time: 1626.08 min
04/22 01:59:12: Data Loading time: 0.00007 s
04/22 01:59:12: Loss R: 0.0126
04/22 01:59:12: Loss G: 19.3083
04/22 01:59:12: bpp: 0.3216
04/22 01:59:12: Sum Loss: 19.8812
04/22 01:59:12: Loss (s-m-l): [0.0006, 0.0371, 0.0]
04/22 01:59:12: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/22 02:02:10: 
Iteration: 55600
04/22 02:02:10: Running time: 1629.04 min
04/22 02:02:10: Data Loading time: 0.00007 s
04/22 02:02:10: Loss R: 0.0126
04/22 02:02:10: Loss G: 19.4630
04/22 02:02:10: bpp: 0.3197
04/22 02:02:10: Sum Loss: 20.0347
04/22 02:02:10: Loss (s-m-l): [0.0006, 0.0372, 0.0]
04/22 02:02:10: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/22 02:05:03: 
Iteration: 55700
04/22 02:05:03: Running time: 1631.93 min
04/22 02:05:03: Data Loading time: 0.00007 s
04/22 02:05:03: Loss R: 0.0121
04/22 02:05:03: Loss G: 19.5689
04/22 02:05:03: bpp: 0.3228
04/22 02:05:03: Sum Loss: 20.1343
04/22 02:05:03: Loss (s-m-l): [0.0006, 0.0358, 0.0]
04/22 02:05:03: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9858, 1.0, 0.9858], [1.0, 1.0, 1.0]]
04/22 02:07:57: 
Iteration: 55800
04/22 02:07:57: Running time: 1634.84 min
04/22 02:07:57: Data Loading time: 0.00010 s
04/22 02:07:57: Loss R: 0.0124
04/22 02:07:57: Loss G: 19.3175
04/22 02:07:57: bpp: 0.3216
04/22 02:07:57: Sum Loss: 19.8872
04/22 02:07:57: Loss (s-m-l): [0.0006, 0.0366, 0.0]
04/22 02:07:57: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/22 02:10:55: 
Iteration: 55900
04/22 02:10:55: Running time: 1637.81 min
04/22 02:10:55: Data Loading time: 0.00007 s
04/22 02:10:55: Loss R: 0.0126
04/22 02:10:55: Loss G: 18.8684
04/22 02:10:55: bpp: 0.3206
04/22 02:10:55: Sum Loss: 19.4409
04/22 02:10:55: Loss (s-m-l): [0.0006, 0.0371, 0.0]
04/22 02:10:55: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/22 02:13:51: 
Iteration: 56000
04/22 02:13:51: Running time: 1640.73 min
04/22 02:13:51: Data Loading time: 0.00007 s
04/22 02:13:51: Loss R: 0.0125
04/22 02:13:51: Loss G: 19.1281
04/22 02:13:51: bpp: 0.3227
04/22 02:13:51: Sum Loss: 19.7013
04/22 02:13:51: Loss (s-m-l): [0.0006, 0.037, 0.0]
04/22 02:13:51: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/22 02:13:51: 
==========Evaluation: iter 56000==========
04/22 02:13:51: save checkpoints: ckpts/tp/tp56000
04/22 02:16:47: 
Iteration: 56100
04/22 02:16:47: Running time: 1643.68 min
04/22 02:16:47: Data Loading time: 0.00007 s
04/22 02:16:47: Loss R: 0.0127
04/22 02:16:47: Loss G: 19.0893
04/22 02:16:47: bpp: 0.3207
04/22 02:16:47: Sum Loss: 19.6648
04/22 02:16:47: Loss (s-m-l): [0.0007, 0.0375, 0.0]
04/22 02:16:47: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/22 02:19:45: 
Iteration: 56200
04/22 02:19:45: Running time: 1646.64 min
04/22 02:19:45: Data Loading time: 0.00007 s
04/22 02:19:45: Loss R: 0.0127
04/22 02:19:45: Loss G: 19.6006
04/22 02:19:45: bpp: 0.3182
04/22 02:19:45: Sum Loss: 20.1735
04/22 02:19:45: Loss (s-m-l): [0.0006, 0.0376, 0.0]
04/22 02:19:45: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/22 02:22:42: 
Iteration: 56300
04/22 02:22:42: Running time: 1649.58 min
04/22 02:22:42: Data Loading time: 0.00007 s
04/22 02:22:42: Loss R: 0.0122
04/22 02:22:42: Loss G: 19.1187
04/22 02:22:42: bpp: 0.3224
04/22 02:22:42: Sum Loss: 19.6841
04/22 02:22:42: Loss (s-m-l): [0.0006, 0.0359, 0.0]
04/22 02:22:42: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9857, 1.0, 0.9857], [1.0, 1.0, 1.0]]
04/22 02:25:39: 
Iteration: 56400
04/22 02:25:39: Running time: 1652.54 min
04/22 02:25:39: Data Loading time: 0.00007 s
04/22 02:25:39: Loss R: 0.0125
04/22 02:25:39: Loss G: 19.1554
04/22 02:25:39: bpp: 0.3209
04/22 02:25:39: Sum Loss: 19.7260
04/22 02:25:39: Loss (s-m-l): [0.0006, 0.0369, 0.0]
04/22 02:25:39: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/22 02:28:35: 
Iteration: 56500
04/22 02:28:35: Running time: 1655.47 min
04/22 02:28:35: Data Loading time: 0.00007 s
04/22 02:28:35: Loss R: 0.0119
04/22 02:28:35: Loss G: 19.3656
04/22 02:28:35: bpp: 0.3206
04/22 02:28:35: Sum Loss: 19.9244
04/22 02:28:35: Loss (s-m-l): [0.0006, 0.0351, 0.0]
04/22 02:28:35: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9861, 1.0, 0.9861], [1.0, 1.0, 1.0]]
04/22 02:31:29: 
Iteration: 56600
04/22 02:31:29: Running time: 1658.37 min
04/22 02:31:29: Data Loading time: 0.00007 s
04/22 02:31:29: Loss R: 0.0125
04/22 02:31:29: Loss G: 19.3284
04/22 02:31:29: bpp: 0.3213
04/22 02:31:29: Sum Loss: 19.9000
04/22 02:31:29: Loss (s-m-l): [0.0006, 0.0369, 0.0]
04/22 02:31:29: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9854, 1.0, 0.9854], [1.0, 1.0, 1.0]]
04/22 02:34:23: 
Iteration: 56700
04/22 02:34:23: Running time: 1661.27 min
04/22 02:34:23: Data Loading time: 0.00007 s
04/22 02:34:23: Loss R: 0.0124
04/22 02:34:23: Loss G: 19.2121
04/22 02:34:23: bpp: 0.3228
04/22 02:34:23: Sum Loss: 19.7823
04/22 02:34:23: Loss (s-m-l): [0.0006, 0.0365, 0.0]
04/22 02:34:23: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9854, 1.0, 0.9854], [1.0, 1.0, 1.0]]
04/22 02:37:19: 
Iteration: 56800
04/22 02:37:19: Running time: 1664.21 min
04/22 02:37:19: Data Loading time: 0.00007 s
04/22 02:37:19: Loss R: 0.0128
04/22 02:37:19: Loss G: 19.5143
04/22 02:37:19: bpp: 0.3200
04/22 02:37:19: Sum Loss: 20.0898
04/22 02:37:19: Loss (s-m-l): [0.0006, 0.0377, 0.0]
04/22 02:37:19: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/22 02:40:14: 
Iteration: 56900
04/22 02:40:14: Running time: 1667.13 min
04/22 02:40:14: Data Loading time: 0.00007 s
04/22 02:40:14: Loss R: 0.0127
04/22 02:40:14: Loss G: 19.6395
04/22 02:40:14: bpp: 0.3202
04/22 02:40:14: Sum Loss: 20.2133
04/22 02:40:14: Loss (s-m-l): [0.0006, 0.0374, 0.0]
04/22 02:40:14: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/22 02:43:10: 
Iteration: 57000
04/22 02:43:10: Running time: 1670.04 min
04/22 02:43:10: Data Loading time: 0.00007 s
04/22 02:43:10: Loss R: 0.0119
04/22 02:43:10: Loss G: 19.3169
04/22 02:43:10: bpp: 0.3228
04/22 02:43:10: Sum Loss: 19.8787
04/22 02:43:10: Loss (s-m-l): [0.0006, 0.0353, 0.0]
04/22 02:43:10: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.986, 1.0, 0.986], [1.0, 1.0, 1.0]]
04/22 02:46:04: 
Iteration: 57100
04/22 02:46:04: Running time: 1672.95 min
04/22 02:46:04: Data Loading time: 0.00010 s
04/22 02:46:04: Loss R: 0.0123
04/22 02:46:04: Loss G: 19.2610
04/22 02:46:04: bpp: 0.3224
04/22 02:46:04: Sum Loss: 19.8292
04/22 02:46:04: Loss (s-m-l): [0.0006, 0.0363, 0.0]
04/22 02:46:04: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9856, 1.0, 0.9856], [1.0, 1.0, 1.0]]
04/22 02:48:58: 
Iteration: 57200
04/22 02:48:58: Running time: 1675.85 min
04/22 02:48:58: Data Loading time: 0.00007 s
04/22 02:48:58: Loss R: 0.0122
04/22 02:48:58: Loss G: 19.8565
04/22 02:48:58: bpp: 0.3208
04/22 02:48:58: Sum Loss: 20.4219
04/22 02:48:58: Loss (s-m-l): [0.0006, 0.0361, 0.0]
04/22 02:48:58: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9856, 1.0, 0.9856], [1.0, 1.0, 1.0]]
04/22 02:51:56: 
Iteration: 57300
04/22 02:51:56: Running time: 1678.82 min
04/22 02:51:56: Data Loading time: 0.00007 s
04/22 02:51:56: Loss R: 0.0125
04/22 02:51:56: Loss G: 19.3164
04/22 02:51:56: bpp: 0.3230
04/22 02:51:56: Sum Loss: 19.8889
04/22 02:51:56: Loss (s-m-l): [0.0006, 0.0368, 0.0]
04/22 02:51:56: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/22 02:54:54: 
Iteration: 57400
04/22 02:54:54: Running time: 1681.79 min
04/22 02:54:54: Data Loading time: 0.00007 s
04/22 02:54:54: Loss R: 0.0132
04/22 02:54:54: Loss G: 19.4529
04/22 02:54:54: bpp: 0.3219
04/22 02:54:54: Sum Loss: 20.0386
04/22 02:54:54: Loss (s-m-l): [0.0006, 0.039, 0.0]
04/22 02:54:54: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9845, 1.0, 0.9845], [1.0, 1.0, 1.0]]
04/22 02:57:51: 
Iteration: 57500
04/22 02:57:51: Running time: 1684.74 min
04/22 02:57:51: Data Loading time: 0.00007 s
04/22 02:57:51: Loss R: 0.0125
04/22 02:57:51: Loss G: 19.4237
04/22 02:57:51: bpp: 0.3203
04/22 02:57:51: Sum Loss: 19.9949
04/22 02:57:51: Loss (s-m-l): [0.0006, 0.037, 0.0]
04/22 02:57:51: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9854, 1.0, 0.9854], [1.0, 1.0, 1.0]]
04/22 03:00:39: 
Iteration: 57600
04/22 03:00:39: Running time: 1687.54 min
04/22 03:00:39: Data Loading time: 0.00009 s
04/22 03:00:39: Loss R: 0.0120
04/22 03:00:39: Loss G: 19.0342
04/22 03:00:39: bpp: 0.3245
04/22 03:00:39: Sum Loss: 19.5988
04/22 03:00:39: Loss (s-m-l): [0.0005, 0.0355, 0.0]
04/22 03:00:39: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9859, 1.0, 0.9859], [1.0, 1.0, 1.0]]
04/22 03:03:37: 
Iteration: 57700
04/22 03:03:37: Running time: 1690.50 min
04/22 03:03:37: Data Loading time: 0.00007 s
04/22 03:03:37: Loss R: 0.0124
04/22 03:03:37: Loss G: 19.4873
04/22 03:03:37: bpp: 0.3195
04/22 03:03:37: Sum Loss: 20.0543
04/22 03:03:37: Loss (s-m-l): [0.0006, 0.0365, 0.0]
04/22 03:03:37: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/22 03:06:35: 
Iteration: 57800
04/22 03:06:35: Running time: 1693.46 min
04/22 03:06:35: Data Loading time: 0.00010 s
04/22 03:06:35: Loss R: 0.0128
04/22 03:06:35: Loss G: 19.2791
04/22 03:06:35: bpp: 0.3213
04/22 03:06:35: Sum Loss: 19.8572
04/22 03:06:35: Loss (s-m-l): [0.0006, 0.0379, 0.0]
04/22 03:06:35: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9848, 1.0, 0.9848], [1.0, 1.0, 1.0]]
04/22 03:09:30: 
Iteration: 57900
04/22 03:09:30: Running time: 1696.39 min
04/22 03:09:30: Data Loading time: 0.00007 s
04/22 03:09:30: Loss R: 0.0121
04/22 03:09:30: Loss G: 18.9539
04/22 03:09:30: bpp: 0.3228
04/22 03:09:30: Sum Loss: 19.5192
04/22 03:09:30: Loss (s-m-l): [0.0006, 0.0358, 0.0]
04/22 03:09:30: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9857, 1.0, 0.9857], [1.0, 1.0, 1.0]]
04/22 03:12:24: 
Iteration: 58000
04/22 03:12:24: Running time: 1699.29 min
04/22 03:12:24: Data Loading time: 0.00007 s
04/22 03:12:24: Loss R: 0.0125
04/22 03:12:24: Loss G: 19.2295
04/22 03:12:24: bpp: 0.3204
04/22 03:12:24: Sum Loss: 19.8000
04/22 03:12:24: Loss (s-m-l): [0.0006, 0.0369, 0.0]
04/22 03:12:24: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9854, 1.0, 0.9854], [1.0, 1.0, 1.0]]
04/22 03:12:25: 
==========Evaluation: iter 58000==========
04/22 03:12:25: save checkpoints: ckpts/tp/tp58000
04/22 03:15:21: 
Iteration: 58100
04/22 03:15:21: Running time: 1702.24 min
04/22 03:15:21: Data Loading time: 0.00007 s
04/22 03:15:21: Loss R: 0.0126
04/22 03:15:21: Loss G: 19.0420
04/22 03:15:21: bpp: 0.3206
04/22 03:15:21: Sum Loss: 19.6137
04/22 03:15:21: Loss (s-m-l): [0.0006, 0.0371, 0.0]
04/22 03:15:21: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/22 03:18:18: 
Iteration: 58200
04/22 03:18:18: Running time: 1705.18 min
04/22 03:18:18: Data Loading time: 0.00008 s
04/22 03:18:18: Loss R: 0.0123
04/22 03:18:18: Loss G: 19.3226
04/22 03:18:18: bpp: 0.3222
04/22 03:18:18: Sum Loss: 19.8903
04/22 03:18:18: Loss (s-m-l): [0.0006, 0.0362, 0.0]
04/22 03:18:18: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9856, 1.0, 0.9856], [1.0, 1.0, 1.0]]
04/22 03:21:13: 
Iteration: 58300
04/22 03:21:13: Running time: 1708.10 min
04/22 03:21:13: Data Loading time: 0.00007 s
04/22 03:21:13: Loss R: 0.0126
04/22 03:21:13: Loss G: 19.5949
04/22 03:21:13: bpp: 0.3189
04/22 03:21:13: Sum Loss: 20.1655
04/22 03:21:13: Loss (s-m-l): [0.0006, 0.0371, 0.0]
04/22 03:21:13: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/22 03:24:06: 
Iteration: 58400
04/22 03:24:06: Running time: 1710.99 min
04/22 03:24:06: Data Loading time: 0.00007 s
04/22 03:24:06: Loss R: 0.0126
04/22 03:24:06: Loss G: 19.3738
04/22 03:24:06: bpp: 0.3226
04/22 03:24:06: Sum Loss: 19.9479
04/22 03:24:06: Loss (s-m-l): [0.0006, 0.0371, 0.0]
04/22 03:24:06: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/22 03:27:03: 
Iteration: 58500
04/22 03:27:03: Running time: 1713.93 min
04/22 03:27:03: Data Loading time: 0.00012 s
04/22 03:27:03: Loss R: 0.0127
04/22 03:27:03: Loss G: 19.6909
04/22 03:27:03: bpp: 0.3190
04/22 03:27:03: Sum Loss: 20.2645
04/22 03:27:03: Loss (s-m-l): [0.0006, 0.0376, 0.0]
04/22 03:27:03: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/22 03:29:59: 
Iteration: 58600
04/22 03:29:59: Running time: 1716.86 min
04/22 03:29:59: Data Loading time: 0.00007 s
04/22 03:29:59: Loss R: 0.0126
04/22 03:29:59: Loss G: 19.2196
04/22 03:29:59: bpp: 0.3234
04/22 03:29:59: Sum Loss: 19.7948
04/22 03:29:59: Loss (s-m-l): [0.0006, 0.0372, 0.0]
04/22 03:29:59: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/22 03:32:53: 
Iteration: 58700
04/22 03:32:53: Running time: 1719.77 min
04/22 03:32:53: Data Loading time: 0.00007 s
04/22 03:32:53: Loss R: 0.0119
04/22 03:32:53: Loss G: 19.3889
04/22 03:32:53: bpp: 0.3225
04/22 03:32:53: Sum Loss: 19.9484
04/22 03:32:53: Loss (s-m-l): [0.0006, 0.035, 0.0]
04/22 03:32:53: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9861, 1.0, 0.9861], [1.0, 1.0, 1.0]]
04/22 03:35:53: 
Iteration: 58800
04/22 03:35:53: Running time: 1722.77 min
04/22 03:35:53: Data Loading time: 0.00007 s
04/22 03:35:53: Loss R: 0.0128
04/22 03:35:53: Loss G: 19.3155
04/22 03:35:53: bpp: 0.3193
04/22 03:35:53: Sum Loss: 19.8898
04/22 03:35:53: Loss (s-m-l): [0.0006, 0.0376, 0.0]
04/22 03:35:53: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/22 03:38:47: 
Iteration: 58900
04/22 03:38:47: Running time: 1725.67 min
04/22 03:38:47: Data Loading time: 0.00007 s
04/22 03:38:47: Loss R: 0.0122
04/22 03:38:47: Loss G: 18.9578
04/22 03:38:47: bpp: 0.3225
04/22 03:38:47: Sum Loss: 19.5234
04/22 03:38:47: Loss (s-m-l): [0.0006, 0.0359, 0.0]
04/22 03:38:47: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9857, 1.0, 0.9857], [1.0, 1.0, 1.0]]
04/22 03:41:48: 
Iteration: 59000
04/22 03:41:48: Running time: 1728.68 min
04/22 03:41:48: Data Loading time: 0.00007 s
04/22 03:41:48: Loss R: 0.0122
04/22 03:41:48: Loss G: 18.8723
04/22 03:41:48: bpp: 0.3221
04/22 03:41:48: Sum Loss: 19.4386
04/22 03:41:48: Loss (s-m-l): [0.0006, 0.036, 0.0]
04/22 03:41:48: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9857, 1.0, 0.9857], [1.0, 1.0, 1.0]]
04/22 03:44:45: 
Iteration: 59100
04/22 03:44:45: Running time: 1731.63 min
04/22 03:44:45: Data Loading time: 0.00007 s
04/22 03:44:45: Loss R: 0.0123
04/22 03:44:45: Loss G: 18.9471
04/22 03:44:45: bpp: 0.3224
04/22 03:44:45: Sum Loss: 19.5148
04/22 03:44:45: Loss (s-m-l): [0.0006, 0.0362, 0.0]
04/22 03:44:45: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9856, 1.0, 0.9856], [1.0, 1.0, 1.0]]
04/22 03:47:41: 
Iteration: 59200
04/22 03:47:41: Running time: 1734.57 min
04/22 03:47:41: Data Loading time: 0.00007 s
04/22 03:47:41: Loss R: 0.0123
04/22 03:47:41: Loss G: 19.2291
04/22 03:47:41: bpp: 0.3217
04/22 03:47:41: Sum Loss: 19.7971
04/22 03:47:41: Loss (s-m-l): [0.0006, 0.0363, 0.0]
04/22 03:47:41: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9857, 1.0, 0.9857], [1.0, 1.0, 1.0]]
04/22 03:50:34: 
Iteration: 59300
04/22 03:50:34: Running time: 1737.44 min
04/22 03:50:34: Data Loading time: 0.00007 s
04/22 03:50:34: Loss R: 0.0124
04/22 03:50:34: Loss G: 19.6412
04/22 03:50:34: bpp: 0.3206
04/22 03:50:34: Sum Loss: 20.2095
04/22 03:50:34: Loss (s-m-l): [0.0006, 0.0365, 0.0]
04/22 03:50:34: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9854, 1.0, 0.9854], [1.0, 1.0, 1.0]]
04/22 03:53:31: 
Iteration: 59400
04/22 03:53:31: Running time: 1740.40 min
04/22 03:53:31: Data Loading time: 0.00007 s
04/22 03:53:31: Loss R: 0.0123
04/22 03:53:31: Loss G: 19.1975
04/22 03:53:31: bpp: 0.3218
04/22 03:53:31: Sum Loss: 19.7659
04/22 03:53:31: Loss (s-m-l): [0.0006, 0.0364, 0.0]
04/22 03:53:31: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9857, 1.0, 0.9857], [1.0, 1.0, 1.0]]
04/22 03:56:25: 
Iteration: 59500
04/22 03:56:25: Running time: 1743.31 min
04/22 03:56:25: Data Loading time: 0.00007 s
04/22 03:56:25: Loss R: 0.0120
04/22 03:56:25: Loss G: 19.2716
04/22 03:56:25: bpp: 0.3228
04/22 03:56:25: Sum Loss: 19.8338
04/22 03:56:25: Loss (s-m-l): [0.0006, 0.0353, 0.0]
04/22 03:56:25: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.986, 1.0, 0.986], [1.0, 1.0, 1.0]]
04/22 03:59:22: 
Iteration: 59600
04/22 03:59:22: Running time: 1746.25 min
04/22 03:59:22: Data Loading time: 0.00007 s
04/22 03:59:22: Loss R: 0.0117
04/22 03:59:22: Loss G: 19.1653
04/22 03:59:22: bpp: 0.3224
04/22 03:59:22: Sum Loss: 19.7210
04/22 03:59:22: Loss (s-m-l): [0.0006, 0.0344, 0.0]
04/22 03:59:22: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9864, 1.0, 0.9864], [1.0, 1.0, 1.0]]
04/22 04:02:19: 
Iteration: 59700
04/22 04:02:19: Running time: 1749.20 min
04/22 04:02:19: Data Loading time: 0.00007 s
04/22 04:02:19: Loss R: 0.0134
04/22 04:02:19: Loss G: 18.8243
04/22 04:02:19: bpp: 0.3199
04/22 04:02:19: Sum Loss: 19.4119
04/22 04:02:19: Loss (s-m-l): [0.0006, 0.0395, 0.0]
04/22 04:02:19: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9843, 1.0, 0.9843], [1.0, 1.0, 1.0]]
04/22 04:05:15: 
Iteration: 59800
04/22 04:05:15: Running time: 1752.13 min
04/22 04:05:15: Data Loading time: 0.00007 s
04/22 04:05:15: Loss R: 0.0127
04/22 04:05:15: Loss G: 19.0788
04/22 04:05:15: bpp: 0.3245
04/22 04:05:15: Sum Loss: 19.6580
04/22 04:05:15: Loss (s-m-l): [0.0006, 0.0376, 0.0]
04/22 04:05:15: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/22 04:08:15: 
Iteration: 59900
04/22 04:08:15: Running time: 1755.13 min
04/22 04:08:15: Data Loading time: 0.00007 s
04/22 04:08:15: Loss R: 0.0121
04/22 04:08:15: Loss G: 19.1209
04/22 04:08:15: bpp: 0.3196
04/22 04:08:15: Sum Loss: 19.6817
04/22 04:08:15: Loss (s-m-l): [0.0006, 0.0356, 0.0]
04/22 04:08:15: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9859, 1.0, 0.9859], [1.0, 1.0, 1.0]]
04/22 04:11:14: 
Iteration: 60000
04/22 04:11:14: Running time: 1758.12 min
04/22 04:11:14: Data Loading time: 0.00007 s
04/22 04:11:14: Loss R: 0.0129
04/22 04:11:14: Loss G: 19.1156
04/22 04:11:14: bpp: 0.3198
04/22 04:11:14: Sum Loss: 19.6943
04/22 04:11:14: Loss (s-m-l): [0.0006, 0.0382, 0.0]
04/22 04:11:14: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9848, 1.0, 0.9848], [1.0, 1.0, 1.0]]
04/22 04:11:14: 
==========Evaluation: iter 60000==========
04/22 04:11:14: save checkpoints: ckpts/tp/tp60000
04/22 04:11:14: LR: [3.90625e-07, 3.90625e-07, 3.90625e-07]
04/22 04:14:10: 
Iteration: 60100
04/22 04:14:10: Running time: 1761.05 min
04/22 04:14:10: Data Loading time: 0.00007 s
04/22 04:14:10: Loss R: 0.0126
04/22 04:14:10: Loss G: 19.3326
04/22 04:14:10: bpp: 0.3210
04/22 04:14:10: Sum Loss: 19.9049
04/22 04:14:10: Loss (s-m-l): [0.0006, 0.0371, 0.0]
04/22 04:14:10: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/22 04:17:04: 
Iteration: 60200
04/22 04:17:04: Running time: 1763.96 min
04/22 04:17:04: Data Loading time: 0.00007 s
04/22 04:17:04: Loss R: 0.0127
04/22 04:17:04: Loss G: 19.0995
04/22 04:17:04: bpp: 0.3229
04/22 04:17:04: Sum Loss: 19.6761
04/22 04:17:04: Loss (s-m-l): [0.0006, 0.0375, 0.0]
04/22 04:17:04: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/22 04:20:00: 
Iteration: 60300
04/22 04:20:00: Running time: 1766.88 min
04/22 04:20:00: Data Loading time: 0.00007 s
04/22 04:20:00: Loss R: 0.0121
04/22 04:20:00: Loss G: 19.1101
04/22 04:20:00: bpp: 0.3229
04/22 04:20:00: Sum Loss: 19.6759
04/22 04:20:00: Loss (s-m-l): [0.0006, 0.0358, 0.0]
04/22 04:20:00: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9859, 1.0, 0.9859], [1.0, 1.0, 1.0]]
04/22 04:22:57: 
Iteration: 60400
04/22 04:22:57: Running time: 1769.83 min
04/22 04:22:57: Data Loading time: 0.00007 s
04/22 04:22:57: Loss R: 0.0125
04/22 04:22:57: Loss G: 19.3851
04/22 04:22:57: bpp: 0.3199
04/22 04:22:57: Sum Loss: 19.9557
04/22 04:22:57: Loss (s-m-l): [0.0006, 0.037, 0.0]
04/22 04:22:57: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/22 04:25:51: 
Iteration: 60500
04/22 04:25:51: Running time: 1772.73 min
04/22 04:25:51: Data Loading time: 0.00007 s
04/22 04:25:51: Loss R: 0.0127
04/22 04:25:51: Loss G: 19.1926
04/22 04:25:51: bpp: 0.3209
04/22 04:25:51: Sum Loss: 19.7669
04/22 04:25:51: Loss (s-m-l): [0.0006, 0.0374, 0.0]
04/22 04:25:51: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/22 04:28:49: 
Iteration: 60600
04/22 04:28:49: Running time: 1775.71 min
04/22 04:28:49: Data Loading time: 0.00008 s
04/22 04:28:49: Loss R: 0.0122
04/22 04:28:49: Loss G: 19.1339
04/22 04:28:49: bpp: 0.3196
04/22 04:28:49: Sum Loss: 19.6966
04/22 04:28:49: Loss (s-m-l): [0.0006, 0.0359, 0.0]
04/22 04:28:49: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9858, 1.0, 0.9858], [1.0, 1.0, 1.0]]
04/22 04:31:47: 
Iteration: 60700
04/22 04:31:47: Running time: 1778.67 min
04/22 04:31:47: Data Loading time: 0.00007 s
04/22 04:31:47: Loss R: 0.0131
04/22 04:31:47: Loss G: 19.1148
04/22 04:31:47: bpp: 0.3208
04/22 04:31:47: Sum Loss: 19.6983
04/22 04:31:47: Loss (s-m-l): [0.0006, 0.0388, 0.0]
04/22 04:31:47: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9845, 1.0, 0.9845], [1.0, 1.0, 1.0]]
04/22 04:34:42: 
Iteration: 60800
04/22 04:34:42: Running time: 1781.58 min
04/22 04:34:42: Data Loading time: 0.00007 s
04/22 04:34:42: Loss R: 0.0127
04/22 04:34:42: Loss G: 19.1097
04/22 04:34:42: bpp: 0.3229
04/22 04:34:42: Sum Loss: 19.6863
04/22 04:34:42: Loss (s-m-l): [0.0006, 0.0374, 0.0]
04/22 04:34:42: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/22 04:37:39: 
Iteration: 60900
04/22 04:37:39: Running time: 1784.54 min
04/22 04:37:39: Data Loading time: 0.00007 s
04/22 04:37:39: Loss R: 0.0123
04/22 04:37:39: Loss G: 19.2482
04/22 04:37:39: bpp: 0.3192
04/22 04:37:39: Sum Loss: 19.8143
04/22 04:37:39: Loss (s-m-l): [0.0006, 0.0364, 0.0]
04/22 04:37:39: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9856, 1.0, 0.9856], [1.0, 1.0, 1.0]]
04/22 04:40:35: 
Iteration: 61000
04/22 04:40:35: Running time: 1787.47 min
04/22 04:40:35: Data Loading time: 0.00007 s
04/22 04:40:35: Loss R: 0.0121
04/22 04:40:35: Loss G: 19.1150
04/22 04:40:35: bpp: 0.3237
04/22 04:40:35: Sum Loss: 19.6803
04/22 04:40:35: Loss (s-m-l): [0.0006, 0.0357, 0.0]
04/22 04:40:35: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9857, 1.0, 0.9857], [1.0, 1.0, 1.0]]
04/22 04:43:31: 
Iteration: 61100
04/22 04:43:31: Running time: 1790.41 min
04/22 04:43:31: Data Loading time: 0.00007 s
04/22 04:43:31: Loss R: 0.0126
04/22 04:43:31: Loss G: 19.2430
04/22 04:43:31: bpp: 0.3221
04/22 04:43:31: Sum Loss: 19.8165
04/22 04:43:31: Loss (s-m-l): [0.0006, 0.0371, 0.0]
04/22 04:43:31: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/22 04:46:27: 
Iteration: 61200
04/22 04:46:27: Running time: 1793.34 min
04/22 04:46:27: Data Loading time: 0.00010 s
04/22 04:46:27: Loss R: 0.0126
04/22 04:46:27: Loss G: 19.3470
04/22 04:46:27: bpp: 0.3189
04/22 04:46:27: Sum Loss: 19.9180
04/22 04:46:27: Loss (s-m-l): [0.0006, 0.0372, 0.0]
04/22 04:46:27: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/22 04:49:22: 
Iteration: 61300
04/22 04:49:22: Running time: 1796.25 min
04/22 04:49:22: Data Loading time: 0.00007 s
04/22 04:49:22: Loss R: 0.0117
04/22 04:49:22: Loss G: 18.6680
04/22 04:49:22: bpp: 0.3241
04/22 04:49:22: Sum Loss: 19.2262
04/22 04:49:22: Loss (s-m-l): [0.0006, 0.0345, 0.0]
04/22 04:49:22: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9863, 1.0, 0.9863], [1.0, 1.0, 1.0]]
04/22 04:52:18: 
Iteration: 61400
04/22 04:52:18: Running time: 1799.18 min
04/22 04:52:18: Data Loading time: 0.00007 s
04/22 04:52:18: Loss R: 0.0125
04/22 04:52:18: Loss G: 19.1009
04/22 04:52:18: bpp: 0.3200
04/22 04:52:18: Sum Loss: 19.6708
04/22 04:52:18: Loss (s-m-l): [0.0006, 0.0369, 0.0]
04/22 04:52:18: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9854, 1.0, 0.9854], [1.0, 1.0, 1.0]]
04/22 04:55:13: 
Iteration: 61500
04/22 04:55:13: Running time: 1802.10 min
04/22 04:55:13: Data Loading time: 0.00007 s
04/22 04:55:13: Loss R: 0.0121
04/22 04:55:13: Loss G: 19.0743
04/22 04:55:13: bpp: 0.3202
04/22 04:55:13: Sum Loss: 19.6371
04/22 04:55:13: Loss (s-m-l): [0.0006, 0.0358, 0.0]
04/22 04:55:13: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9859, 1.0, 0.9859], [1.0, 1.0, 1.0]]
04/22 04:58:08: 
Iteration: 61600
04/22 04:58:08: Running time: 1805.01 min
04/22 04:58:08: Data Loading time: 0.00007 s
04/22 04:58:08: Loss R: 0.0124
04/22 04:58:08: Loss G: 19.0965
04/22 04:58:08: bpp: 0.3217
04/22 04:58:08: Sum Loss: 19.6658
04/22 04:58:08: Loss (s-m-l): [0.0006, 0.0365, 0.0]
04/22 04:58:08: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/22 05:01:03: 
Iteration: 61700
04/22 05:01:03: Running time: 1807.93 min
04/22 05:01:03: Data Loading time: 0.00007 s
04/22 05:01:03: Loss R: 0.0128
04/22 05:01:03: Loss G: 18.6059
04/22 05:01:03: bpp: 0.3228
04/22 05:01:03: Sum Loss: 19.1841
04/22 05:01:03: Loss (s-m-l): [0.0006, 0.0377, 0.0]
04/22 05:01:03: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/22 05:04:01: 
Iteration: 61800
04/22 05:04:01: Running time: 1810.90 min
04/22 05:04:01: Data Loading time: 0.00007 s
04/22 05:04:01: Loss R: 0.0124
04/22 05:04:01: Loss G: 18.9952
04/22 05:04:01: bpp: 0.3205
04/22 05:04:01: Sum Loss: 19.5646
04/22 05:04:01: Loss (s-m-l): [0.0006, 0.0367, 0.0]
04/22 05:04:01: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9854, 1.0, 0.9854], [1.0, 1.0, 1.0]]
04/22 05:06:58: 
Iteration: 61900
04/22 05:06:58: Running time: 1813.85 min
04/22 05:06:58: Data Loading time: 0.00007 s
04/22 05:06:58: Loss R: 0.0128
04/22 05:06:58: Loss G: 18.9752
04/22 05:06:58: bpp: 0.3210
04/22 05:06:58: Sum Loss: 19.5514
04/22 05:06:58: Loss (s-m-l): [0.0006, 0.0377, 0.0]
04/22 05:06:58: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/22 05:09:48: 
Iteration: 62000
04/22 05:09:48: Running time: 1816.69 min
04/22 05:09:48: Data Loading time: 0.00007 s
04/22 05:09:48: Loss R: 0.0127
04/22 05:09:48: Loss G: 19.3865
04/22 05:09:48: bpp: 0.3221
04/22 05:09:48: Sum Loss: 19.9622
04/22 05:09:48: Loss (s-m-l): [0.0006, 0.0374, 0.0]
04/22 05:09:48: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/22 05:09:48: 
==========Evaluation: iter 62000==========
04/22 05:09:48: save checkpoints: ckpts/tp/tp62000
04/22 05:12:50: 
Iteration: 62100
04/22 05:12:50: Running time: 1819.72 min
04/22 05:12:50: Data Loading time: 0.00007 s
04/22 05:12:50: Loss R: 0.0127
04/22 05:12:50: Loss G: 19.0444
04/22 05:12:50: bpp: 0.3211
04/22 05:12:50: Sum Loss: 19.6196
04/22 05:12:50: Loss (s-m-l): [0.0006, 0.0375, 0.0]
04/22 05:12:50: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/22 05:15:43: 
Iteration: 62200
04/22 05:15:43: Running time: 1822.60 min
04/22 05:15:43: Data Loading time: 0.00007 s
04/22 05:15:43: Loss R: 0.0123
04/22 05:15:43: Loss G: 19.7064
04/22 05:15:43: bpp: 0.3199
04/22 05:15:43: Sum Loss: 20.2721
04/22 05:15:43: Loss (s-m-l): [0.0006, 0.0363, 0.0]
04/22 05:15:43: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9857, 1.0, 0.9857], [1.0, 1.0, 1.0]]
04/22 05:18:36: 
Iteration: 62300
04/22 05:18:36: Running time: 1825.48 min
04/22 05:18:36: Data Loading time: 0.00007 s
04/22 05:18:36: Loss R: 0.0122
04/22 05:18:36: Loss G: 18.9245
04/22 05:18:36: bpp: 0.3246
04/22 05:18:36: Sum Loss: 19.4940
04/22 05:18:36: Loss (s-m-l): [0.0006, 0.0361, 0.0]
04/22 05:18:36: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9856, 1.0, 0.9856], [1.0, 1.0, 1.0]]
04/22 05:21:28: 
Iteration: 62400
04/22 05:21:28: Running time: 1828.34 min
04/22 05:21:28: Data Loading time: 0.00008 s
04/22 05:21:28: Loss R: 0.0123
04/22 05:21:28: Loss G: 19.1689
04/22 05:21:28: bpp: 0.3213
04/22 05:21:28: Sum Loss: 19.7371
04/22 05:21:28: Loss (s-m-l): [0.0006, 0.0364, 0.0]
04/22 05:21:28: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/22 05:24:26: 
Iteration: 62500
04/22 05:24:26: Running time: 1831.31 min
04/22 05:24:26: Data Loading time: 0.00007 s
04/22 05:24:26: Loss R: 0.0124
04/22 05:24:26: Loss G: 18.8971
04/22 05:24:26: bpp: 0.3222
04/22 05:24:26: Sum Loss: 19.4675
04/22 05:24:26: Loss (s-m-l): [0.0006, 0.0366, 0.0]
04/22 05:24:26: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9854, 1.0, 0.9854], [1.0, 1.0, 1.0]]
04/22 05:27:20: 
Iteration: 62600
04/22 05:27:20: Running time: 1834.22 min
04/22 05:27:20: Data Loading time: 0.00007 s
04/22 05:27:20: Loss R: 0.0125
04/22 05:27:20: Loss G: 19.5284
04/22 05:27:20: bpp: 0.3187
04/22 05:27:20: Sum Loss: 20.0966
04/22 05:27:20: Loss (s-m-l): [0.0006, 0.0368, 0.0]
04/22 05:27:20: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9854, 1.0, 0.9854], [1.0, 1.0, 1.0]]
04/22 05:30:16: 
Iteration: 62700
04/22 05:30:16: Running time: 1837.14 min
04/22 05:30:16: Data Loading time: 0.00007 s
04/22 05:30:16: Loss R: 0.0120
04/22 05:30:16: Loss G: 19.2226
04/22 05:30:16: bpp: 0.3204
04/22 05:30:16: Sum Loss: 19.7825
04/22 05:30:16: Loss (s-m-l): [0.0006, 0.0353, 0.0]
04/22 05:30:16: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9861, 1.0, 0.9861], [1.0, 1.0, 1.0]]
04/22 05:33:16: 
Iteration: 62800
04/22 05:33:16: Running time: 1840.16 min
04/22 05:33:16: Data Loading time: 0.00008 s
04/22 05:33:16: Loss R: 0.0127
04/22 05:33:16: Loss G: 18.8037
04/22 05:33:16: bpp: 0.3195
04/22 05:33:16: Sum Loss: 19.3771
04/22 05:33:16: Loss (s-m-l): [0.0006, 0.0374, 0.0]
04/22 05:33:16: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/22 05:36:14: 
Iteration: 62900
04/22 05:36:14: Running time: 1843.11 min
04/22 05:36:14: Data Loading time: 0.00007 s
04/22 05:36:14: Loss R: 0.0126
04/22 05:36:14: Loss G: 18.6719
04/22 05:36:14: bpp: 0.3202
04/22 05:36:14: Sum Loss: 19.2447
04/22 05:36:14: Loss (s-m-l): [0.0006, 0.0373, 0.0]
04/22 05:36:14: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/22 05:39:10: 
Iteration: 63000
04/22 05:39:10: Running time: 1846.05 min
04/22 05:39:10: Data Loading time: 0.00007 s
04/22 05:39:10: Loss R: 0.0124
04/22 05:39:10: Loss G: 18.9130
04/22 05:39:10: bpp: 0.3235
04/22 05:39:10: Sum Loss: 19.4852
04/22 05:39:10: Loss (s-m-l): [0.0006, 0.0367, 0.0]
04/22 05:39:10: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/22 05:42:05: 
Iteration: 63100
04/22 05:42:05: Running time: 1848.97 min
04/22 05:42:05: Data Loading time: 0.00007 s
04/22 05:42:05: Loss R: 0.0125
04/22 05:42:05: Loss G: 19.2364
04/22 05:42:05: bpp: 0.3213
04/22 05:42:05: Sum Loss: 19.8082
04/22 05:42:05: Loss (s-m-l): [0.0006, 0.037, 0.0]
04/22 05:42:05: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/22 05:44:58: 
Iteration: 63200
04/22 05:44:58: Running time: 1851.85 min
04/22 05:44:58: Data Loading time: 0.00007 s
04/22 05:44:58: Loss R: 0.0124
04/22 05:44:58: Loss G: 19.1443
04/22 05:44:58: bpp: 0.3229
04/22 05:44:58: Sum Loss: 19.7144
04/22 05:44:58: Loss (s-m-l): [0.0006, 0.0365, 0.0]
04/22 05:44:58: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9854, 1.0, 0.9854], [1.0, 1.0, 1.0]]
04/22 05:47:56: 
Iteration: 63300
04/22 05:47:56: Running time: 1854.81 min
04/22 05:47:56: Data Loading time: 0.00007 s
04/22 05:47:56: Loss R: 0.0120
04/22 05:47:56: Loss G: 19.0412
04/22 05:47:56: bpp: 0.3215
04/22 05:47:56: Sum Loss: 19.6036
04/22 05:47:56: Loss (s-m-l): [0.0006, 0.0356, 0.0]
04/22 05:47:56: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.986, 1.0, 0.986], [1.0, 1.0, 1.0]]
04/22 05:50:50: 
Iteration: 63400
04/22 05:50:50: Running time: 1857.72 min
04/22 05:50:50: Data Loading time: 0.00007 s
04/22 05:50:50: Loss R: 0.0130
04/22 05:50:50: Loss G: 19.2936
04/22 05:50:50: bpp: 0.3217
04/22 05:50:50: Sum Loss: 19.8763
04/22 05:50:50: Loss (s-m-l): [0.0006, 0.0386, 0.0]
04/22 05:50:50: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9846, 1.0, 0.9846], [1.0, 1.0, 1.0]]
04/22 05:53:44: 
Iteration: 63500
04/22 05:53:44: Running time: 1860.62 min
04/22 05:53:44: Data Loading time: 0.00007 s
04/22 05:53:44: Loss R: 0.0125
04/22 05:53:44: Loss G: 18.9628
04/22 05:53:44: bpp: 0.3240
04/22 05:53:44: Sum Loss: 19.5377
04/22 05:53:44: Loss (s-m-l): [0.0006, 0.037, 0.0]
04/22 05:53:44: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/22 05:56:36: 
Iteration: 63600
04/22 05:56:36: Running time: 1863.49 min
04/22 05:56:36: Data Loading time: 0.00007 s
04/22 05:56:36: Loss R: 0.0125
04/22 05:56:36: Loss G: 18.9386
04/22 05:56:36: bpp: 0.3241
04/22 05:56:36: Sum Loss: 19.5122
04/22 05:56:36: Loss (s-m-l): [0.0006, 0.0368, 0.0]
04/22 05:56:36: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9854, 1.0, 0.9854], [1.0, 1.0, 1.0]]
04/22 05:59:35: 
Iteration: 63700
04/22 05:59:35: Running time: 1866.47 min
04/22 05:59:35: Data Loading time: 0.00007 s
04/22 05:59:35: Loss R: 0.0124
04/22 05:59:35: Loss G: 19.2902
04/22 05:59:35: bpp: 0.3199
04/22 05:59:35: Sum Loss: 19.8589
04/22 05:59:35: Loss (s-m-l): [0.0006, 0.0367, 0.0]
04/22 05:59:35: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/22 06:02:34: 
Iteration: 63800
04/22 06:02:34: Running time: 1869.45 min
04/22 06:02:34: Data Loading time: 0.00007 s
04/22 06:02:34: Loss R: 0.0123
04/22 06:02:34: Loss G: 19.4965
04/22 06:02:34: bpp: 0.3205
04/22 06:02:34: Sum Loss: 20.0623
04/22 06:02:34: Loss (s-m-l): [0.0006, 0.0362, 0.0]
04/22 06:02:34: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9857, 1.0, 0.9857], [1.0, 1.0, 1.0]]
04/22 06:05:26: 
Iteration: 63900
04/22 06:05:26: Running time: 1872.32 min
04/22 06:05:26: Data Loading time: 0.00007 s
04/22 06:05:26: Loss R: 0.0120
04/22 06:05:26: Loss G: 19.4664
04/22 06:05:26: bpp: 0.3236
04/22 06:05:26: Sum Loss: 20.0301
04/22 06:05:26: Loss (s-m-l): [0.0006, 0.0355, 0.0]
04/22 06:05:26: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9859, 1.0, 0.9859], [1.0, 1.0, 1.0]]
04/22 06:08:26: 
Iteration: 64000
04/22 06:08:26: Running time: 1875.31 min
04/22 06:08:26: Data Loading time: 0.00007 s
04/22 06:08:26: Loss R: 0.0125
04/22 06:08:26: Loss G: 19.2175
04/22 06:08:26: bpp: 0.3207
04/22 06:08:26: Sum Loss: 19.7889
04/22 06:08:26: Loss (s-m-l): [0.0006, 0.037, 0.0]
04/22 06:08:26: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/22 06:08:26: 
==========Evaluation: iter 64000==========
04/22 06:08:26: save checkpoints: ckpts/tp/tp64000
04/22 06:11:24: 
Iteration: 64100
04/22 06:11:24: Running time: 1878.28 min
04/22 06:11:24: Data Loading time: 0.00007 s
04/22 06:11:24: Loss R: 0.0121
04/22 06:11:24: Loss G: 19.3543
04/22 06:11:24: bpp: 0.3191
04/22 06:11:24: Sum Loss: 19.9159
04/22 06:11:24: Loss (s-m-l): [0.0006, 0.0358, 0.0]
04/22 06:11:24: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9861, 1.0, 0.9861], [1.0, 1.0, 1.0]]
04/22 06:14:18: 
Iteration: 64200
04/22 06:14:18: Running time: 1881.18 min
04/22 06:14:18: Data Loading time: 0.00007 s
04/22 06:14:18: Loss R: 0.0122
04/22 06:14:18: Loss G: 19.2937
04/22 06:14:18: bpp: 0.3229
04/22 06:14:18: Sum Loss: 19.8604
04/22 06:14:18: Loss (s-m-l): [0.0006, 0.0359, 0.0]
04/22 06:14:18: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9856, 1.0, 0.9856], [1.0, 1.0, 1.0]]
04/22 06:17:16: 
Iteration: 64300
04/22 06:17:16: Running time: 1884.16 min
04/22 06:17:16: Data Loading time: 0.00007 s
04/22 06:17:16: Loss R: 0.0127
04/22 06:17:16: Loss G: 18.8306
04/22 06:17:16: bpp: 0.3225
04/22 06:17:16: Sum Loss: 19.4064
04/22 06:17:16: Loss (s-m-l): [0.0006, 0.0374, 0.0]
04/22 06:17:16: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/22 06:20:13: 
Iteration: 64400
04/22 06:20:13: Running time: 1887.10 min
04/22 06:20:13: Data Loading time: 0.00007 s
04/22 06:20:13: Loss R: 0.0126
04/22 06:20:13: Loss G: 18.7605
04/22 06:20:13: bpp: 0.3228
04/22 06:20:13: Sum Loss: 19.3360
04/22 06:20:13: Loss (s-m-l): [0.0006, 0.0373, 0.0]
04/22 06:20:13: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/22 06:23:10: 
Iteration: 64500
04/22 06:23:10: Running time: 1890.05 min
04/22 06:23:10: Data Loading time: 0.00007 s
04/22 06:23:10: Loss R: 0.0130
04/22 06:23:10: Loss G: 19.3901
04/22 06:23:10: bpp: 0.3193
04/22 06:23:10: Sum Loss: 19.9692
04/22 06:23:10: Loss (s-m-l): [0.0006, 0.0384, 0.0]
04/22 06:23:10: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/22 06:26:06: 
Iteration: 64600
04/22 06:26:06: Running time: 1892.99 min
04/22 06:26:06: Data Loading time: 0.00007 s
04/22 06:26:06: Loss R: 0.0121
04/22 06:26:06: Loss G: 19.0924
04/22 06:26:06: bpp: 0.3212
04/22 06:26:06: Sum Loss: 19.6549
04/22 06:26:06: Loss (s-m-l): [0.0006, 0.0356, 0.0]
04/22 06:26:06: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9859, 1.0, 0.9859], [1.0, 1.0, 1.0]]
04/22 06:29:04: 
Iteration: 64700
04/22 06:29:04: Running time: 1895.95 min
04/22 06:29:04: Data Loading time: 0.00007 s
04/22 06:29:04: Loss R: 0.0127
04/22 06:29:04: Loss G: 19.1902
04/22 06:29:04: bpp: 0.3193
04/22 06:29:04: Sum Loss: 19.7637
04/22 06:29:04: Loss (s-m-l): [0.0006, 0.0375, 0.0]
04/22 06:29:04: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/22 06:31:59: 
Iteration: 64800
04/22 06:31:59: Running time: 1898.86 min
04/22 06:31:59: Data Loading time: 0.00007 s
04/22 06:31:59: Loss R: 0.0122
04/22 06:31:59: Loss G: 19.3555
04/22 06:31:59: bpp: 0.3196
04/22 06:31:59: Sum Loss: 19.9189
04/22 06:31:59: Loss (s-m-l): [0.0006, 0.036, 0.0]
04/22 06:31:59: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9858, 1.0, 0.9858], [1.0, 1.0, 1.0]]
04/22 06:34:52: 
Iteration: 64900
04/22 06:34:52: Running time: 1901.75 min
04/22 06:34:52: Data Loading time: 0.00007 s
04/22 06:34:52: Loss R: 0.0126
04/22 06:34:52: Loss G: 19.1221
04/22 06:34:52: bpp: 0.3224
04/22 06:34:52: Sum Loss: 19.6959
04/22 06:34:52: Loss (s-m-l): [0.0006, 0.0371, 0.0]
04/22 06:34:52: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/22 06:37:46: 
Iteration: 65000
04/22 06:37:46: Running time: 1904.66 min
04/22 06:37:46: Data Loading time: 0.00007 s
04/22 06:37:46: Loss R: 0.0125
04/22 06:37:46: Loss G: 19.6678
04/22 06:37:46: bpp: 0.3201
04/22 06:37:46: Sum Loss: 20.2386
04/22 06:37:46: Loss (s-m-l): [0.0006, 0.037, 0.0]
04/22 06:37:46: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/22 06:40:41: 
Iteration: 65100
04/22 06:40:41: Running time: 1907.56 min
04/22 06:40:41: Data Loading time: 0.00007 s
04/22 06:40:41: Loss R: 0.0121
04/22 06:40:41: Loss G: 19.0432
04/22 06:40:41: bpp: 0.3222
04/22 06:40:41: Sum Loss: 19.6067
04/22 06:40:41: Loss (s-m-l): [0.0006, 0.0356, 0.0]
04/22 06:40:41: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9859, 1.0, 0.9859], [1.0, 1.0, 1.0]]
04/22 06:43:33: 
Iteration: 65200
04/22 06:43:33: Running time: 1910.43 min
04/22 06:43:33: Data Loading time: 0.00007 s
04/22 06:43:33: Loss R: 0.0132
04/22 06:43:33: Loss G: 19.3936
04/22 06:43:33: bpp: 0.3199
04/22 06:43:33: Sum Loss: 19.9772
04/22 06:43:33: Loss (s-m-l): [0.0006, 0.0389, 0.0]
04/22 06:43:33: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9846, 1.0, 0.9846], [1.0, 1.0, 1.0]]
04/22 06:46:27: 
Iteration: 65300
04/22 06:46:27: Running time: 1913.33 min
04/22 06:46:27: Data Loading time: 0.00007 s
04/22 06:46:27: Loss R: 0.0123
04/22 06:46:27: Loss G: 19.3475
04/22 06:46:27: bpp: 0.3221
04/22 06:46:27: Sum Loss: 19.9158
04/22 06:46:27: Loss (s-m-l): [0.0006, 0.0363, 0.0]
04/22 06:46:27: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9856, 1.0, 0.9856], [1.0, 1.0, 1.0]]
04/22 06:49:20: 
Iteration: 65400
04/22 06:49:20: Running time: 1916.21 min
04/22 06:49:20: Data Loading time: 0.00007 s
04/22 06:49:20: Loss R: 0.0127
04/22 06:49:20: Loss G: 19.3947
04/22 06:49:20: bpp: 0.3202
04/22 06:49:20: Sum Loss: 19.9686
04/22 06:49:20: Loss (s-m-l): [0.0006, 0.0374, 0.0]
04/22 06:49:20: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/22 06:52:15: 
Iteration: 65500
04/22 06:52:15: Running time: 1919.13 min
04/22 06:52:15: Data Loading time: 0.00007 s
04/22 06:52:15: Loss R: 0.0123
04/22 06:52:15: Loss G: 19.6681
04/22 06:52:15: bpp: 0.3224
04/22 06:52:15: Sum Loss: 20.2360
04/22 06:52:15: Loss (s-m-l): [0.0006, 0.0363, 0.0]
04/22 06:52:15: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/22 06:55:09: 
Iteration: 65600
04/22 06:55:09: Running time: 1922.04 min
04/22 06:55:09: Data Loading time: 0.00007 s
04/22 06:55:09: Loss R: 0.0120
04/22 06:55:09: Loss G: 19.2868
04/22 06:55:09: bpp: 0.3233
04/22 06:55:09: Sum Loss: 19.8492
04/22 06:55:09: Loss (s-m-l): [0.0006, 0.0353, 0.0]
04/22 06:55:09: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.986, 1.0, 0.986], [1.0, 1.0, 1.0]]
04/22 06:58:05: 
Iteration: 65700
04/22 06:58:05: Running time: 1924.97 min
04/22 06:58:05: Data Loading time: 0.00007 s
04/22 06:58:05: Loss R: 0.0125
04/22 06:58:05: Loss G: 19.0177
04/22 06:58:05: bpp: 0.3233
04/22 06:58:05: Sum Loss: 19.5918
04/22 06:58:05: Loss (s-m-l): [0.0006, 0.037, 0.0]
04/22 06:58:05: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/22 07:01:03: 
Iteration: 65800
04/22 07:01:03: Running time: 1927.94 min
04/22 07:01:03: Data Loading time: 0.00007 s
04/22 07:01:03: Loss R: 0.0128
04/22 07:01:03: Loss G: 19.2049
04/22 07:01:03: bpp: 0.3216
04/22 07:01:03: Sum Loss: 19.7818
04/22 07:01:03: Loss (s-m-l): [0.0006, 0.0377, 0.0]
04/22 07:01:03: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/22 07:03:56: 
Iteration: 65900
04/22 07:03:56: Running time: 1930.82 min
04/22 07:03:56: Data Loading time: 0.00007 s
04/22 07:03:56: Loss R: 0.0126
04/22 07:03:56: Loss G: 19.0184
04/22 07:03:56: bpp: 0.3219
04/22 07:03:56: Sum Loss: 19.5918
04/22 07:03:56: Loss (s-m-l): [0.0006, 0.0371, 0.0]
04/22 07:03:56: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/22 07:06:56: 
Iteration: 66000
04/22 07:06:56: Running time: 1933.82 min
04/22 07:06:56: Data Loading time: 0.00007 s
04/22 07:06:56: Loss R: 0.0122
04/22 07:06:56: Loss G: 19.5030
04/22 07:06:56: bpp: 0.3194
04/22 07:06:56: Sum Loss: 20.0657
04/22 07:06:56: Loss (s-m-l): [0.0006, 0.0359, 0.0]
04/22 07:06:56: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9858, 1.0, 0.9858], [1.0, 1.0, 1.0]]
04/22 07:06:56: 
==========Evaluation: iter 66000==========
04/22 07:06:56: save checkpoints: ckpts/tp/tp66000
04/22 07:06:56: LR: [1.953125e-07, 1.953125e-07, 1.953125e-07]
04/22 07:09:54: 
Iteration: 66100
04/22 07:09:54: Running time: 1936.79 min
04/22 07:09:54: Data Loading time: 0.00007 s
04/22 07:09:54: Loss R: 0.0124
04/22 07:09:54: Loss G: 19.6209
04/22 07:09:54: bpp: 0.3182
04/22 07:09:54: Sum Loss: 20.1880
04/22 07:09:54: Loss (s-m-l): [0.0006, 0.0367, 0.0]
04/22 07:09:54: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/22 07:12:48: 
Iteration: 66200
04/22 07:12:48: Running time: 1939.68 min
04/22 07:12:48: Data Loading time: 0.00007 s
04/22 07:12:48: Loss R: 0.0122
04/22 07:12:48: Loss G: 19.3214
04/22 07:12:48: bpp: 0.3223
04/22 07:12:48: Sum Loss: 19.8885
04/22 07:12:48: Loss (s-m-l): [0.0006, 0.0362, 0.0]
04/22 07:12:48: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9856, 1.0, 0.9856], [1.0, 1.0, 1.0]]
04/22 07:15:47: 
Iteration: 66300
04/22 07:15:47: Running time: 1942.66 min
04/22 07:15:47: Data Loading time: 0.00007 s
04/22 07:15:47: Loss R: 0.0124
04/22 07:15:47: Loss G: 19.2523
04/22 07:15:47: bpp: 0.3214
04/22 07:15:47: Sum Loss: 19.8215
04/22 07:15:47: Loss (s-m-l): [0.0006, 0.0365, 0.0]
04/22 07:15:47: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9854, 1.0, 0.9854], [1.0, 1.0, 1.0]]
04/22 07:18:42: 
Iteration: 66400
04/22 07:18:42: Running time: 1945.58 min
04/22 07:18:42: Data Loading time: 0.00007 s
04/22 07:18:42: Loss R: 0.0123
04/22 07:18:42: Loss G: 19.0939
04/22 07:18:42: bpp: 0.3204
04/22 07:18:42: Sum Loss: 19.6604
04/22 07:18:42: Loss (s-m-l): [0.0006, 0.0363, 0.0]
04/22 07:18:42: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9856, 1.0, 0.9856], [1.0, 1.0, 1.0]]
04/22 07:21:35: 
Iteration: 66500
04/22 07:21:35: Running time: 1948.46 min
04/22 07:21:35: Data Loading time: 0.00007 s
04/22 07:21:35: Loss R: 0.0120
04/22 07:21:35: Loss G: 19.3965
04/22 07:21:35: bpp: 0.3233
04/22 07:21:35: Sum Loss: 19.9602
04/22 07:21:35: Loss (s-m-l): [0.0005, 0.0355, 0.0]
04/22 07:21:35: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9858, 1.0, 0.9858], [1.0, 1.0, 1.0]]
04/22 07:24:29: 
Iteration: 66600
04/22 07:24:29: Running time: 1951.37 min
04/22 07:24:29: Data Loading time: 0.00007 s
04/22 07:24:29: Loss R: 0.0131
04/22 07:24:29: Loss G: 19.6269
04/22 07:24:29: bpp: 0.3199
04/22 07:24:29: Sum Loss: 20.2092
04/22 07:24:29: Loss (s-m-l): [0.0006, 0.0387, 0.0]
04/22 07:24:29: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9846, 1.0, 0.9846], [1.0, 1.0, 1.0]]
04/22 07:27:25: 
Iteration: 66700
04/22 07:27:25: Running time: 1954.29 min
04/22 07:27:25: Data Loading time: 0.00008 s
04/22 07:27:25: Loss R: 0.0123
04/22 07:27:25: Loss G: 19.1173
04/22 07:27:25: bpp: 0.3212
04/22 07:27:25: Sum Loss: 19.6840
04/22 07:27:25: Loss (s-m-l): [0.0006, 0.0362, 0.0]
04/22 07:27:25: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9857, 1.0, 0.9857], [1.0, 1.0, 1.0]]
04/22 07:30:19: 
Iteration: 66800
04/22 07:30:19: Running time: 1957.20 min
04/22 07:30:19: Data Loading time: 0.00007 s
04/22 07:30:19: Loss R: 0.0128
04/22 07:30:19: Loss G: 19.8827
04/22 07:30:19: bpp: 0.3205
04/22 07:30:19: Sum Loss: 20.4597
04/22 07:30:19: Loss (s-m-l): [0.0006, 0.0378, 0.0]
04/22 07:30:19: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/22 07:33:17: 
Iteration: 66900
04/22 07:33:17: Running time: 1960.18 min
04/22 07:33:17: Data Loading time: 0.00007 s
04/22 07:33:17: Loss R: 0.0123
04/22 07:33:17: Loss G: 19.1572
04/22 07:33:17: bpp: 0.3233
04/22 07:33:17: Sum Loss: 19.7263
04/22 07:33:17: Loss (s-m-l): [0.0006, 0.0363, 0.0]
04/22 07:33:17: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/22 07:36:13: 
Iteration: 67000
04/22 07:36:13: Running time: 1963.09 min
04/22 07:36:13: Data Loading time: 0.00008 s
04/22 07:36:13: Loss R: 0.0122
04/22 07:36:13: Loss G: 19.3700
04/22 07:36:13: bpp: 0.3209
04/22 07:36:13: Sum Loss: 19.9354
04/22 07:36:13: Loss (s-m-l): [0.0006, 0.0361, 0.0]
04/22 07:36:13: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9859, 1.0, 0.9859], [1.0, 1.0, 1.0]]
04/22 07:39:12: 
Iteration: 67100
04/22 07:39:12: Running time: 1966.08 min
04/22 07:39:12: Data Loading time: 0.00007 s
04/22 07:39:12: Loss R: 0.0125
04/22 07:39:12: Loss G: 19.1729
04/22 07:39:12: bpp: 0.3197
04/22 07:39:12: Sum Loss: 19.7418
04/22 07:39:12: Loss (s-m-l): [0.0006, 0.0368, 0.0]
04/22 07:39:12: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9854, 1.0, 0.9854], [1.0, 1.0, 1.0]]
04/22 07:42:08: 
Iteration: 67200
04/22 07:42:08: Running time: 1969.02 min
04/22 07:42:08: Data Loading time: 0.00007 s
04/22 07:42:08: Loss R: 0.0129
04/22 07:42:08: Loss G: 19.0577
04/22 07:42:08: bpp: 0.3218
04/22 07:42:08: Sum Loss: 19.6384
04/22 07:42:08: Loss (s-m-l): [0.0007, 0.0382, 0.0]
04/22 07:42:08: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9847, 1.0, 0.9847], [1.0, 1.0, 1.0]]
04/22 07:45:06: 
Iteration: 67300
04/22 07:45:06: Running time: 1971.98 min
04/22 07:45:06: Data Loading time: 0.00007 s
04/22 07:45:06: Loss R: 0.0122
04/22 07:45:06: Loss G: 19.0922
04/22 07:45:06: bpp: 0.3235
04/22 07:45:06: Sum Loss: 19.6604
04/22 07:45:06: Loss (s-m-l): [0.0006, 0.0361, 0.0]
04/22 07:45:06: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9857, 1.0, 0.9857], [1.0, 1.0, 1.0]]
04/22 07:48:01: 
Iteration: 67400
04/22 07:48:01: Running time: 1974.90 min
04/22 07:48:01: Data Loading time: 0.00007 s
04/22 07:48:01: Loss R: 0.0119
04/22 07:48:01: Loss G: 19.2057
04/22 07:48:01: bpp: 0.3216
04/22 07:48:01: Sum Loss: 19.7659
04/22 07:48:01: Loss (s-m-l): [0.0006, 0.0352, 0.0]
04/22 07:48:01: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9861, 1.0, 0.9861], [1.0, 1.0, 1.0]]
04/22 07:51:00: 
Iteration: 67500
04/22 07:51:00: Running time: 1977.89 min
04/22 07:51:00: Data Loading time: 0.00008 s
04/22 07:51:00: Loss R: 0.0127
04/22 07:51:00: Loss G: 19.1295
04/22 07:51:00: bpp: 0.3216
04/22 07:51:00: Sum Loss: 19.7040
04/22 07:51:00: Loss (s-m-l): [0.0007, 0.0373, 0.0]
04/22 07:51:00: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/22 07:53:56: 
Iteration: 67600
04/22 07:53:56: Running time: 1980.81 min
04/22 07:53:56: Data Loading time: 0.00007 s
04/22 07:53:56: Loss R: 0.0122
04/22 07:53:56: Loss G: 19.4749
04/22 07:53:56: bpp: 0.3193
04/22 07:53:56: Sum Loss: 20.0379
04/22 07:53:56: Loss (s-m-l): [0.0006, 0.036, 0.0]
04/22 07:53:56: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9858, 1.0, 0.9858], [1.0, 1.0, 1.0]]
04/22 07:56:57: 
Iteration: 67700
04/22 07:56:57: Running time: 1983.83 min
04/22 07:56:57: Data Loading time: 0.00007 s
04/22 07:56:57: Loss R: 0.0130
04/22 07:56:57: Loss G: 19.0172
04/22 07:56:57: bpp: 0.3208
04/22 07:56:57: Sum Loss: 19.5984
04/22 07:56:57: Loss (s-m-l): [0.0006, 0.0385, 0.0]
04/22 07:56:57: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9847, 1.0, 0.9847], [1.0, 1.0, 1.0]]
04/22 07:59:51: 
Iteration: 67800
04/22 07:59:51: Running time: 1986.73 min
04/22 07:59:51: Data Loading time: 0.00007 s
04/22 07:59:51: Loss R: 0.0121
04/22 07:59:51: Loss G: 19.4744
04/22 07:59:51: bpp: 0.3214
04/22 07:59:51: Sum Loss: 20.0373
04/22 07:59:51: Loss (s-m-l): [0.0006, 0.0356, 0.0]
04/22 07:59:51: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9859, 1.0, 0.9859], [1.0, 1.0, 1.0]]
04/22 08:02:42: 
Iteration: 67900
04/22 08:02:42: Running time: 1989.59 min
04/22 08:02:42: Data Loading time: 0.00007 s
04/22 08:02:42: Loss R: 0.0119
04/22 08:02:42: Loss G: 19.1117
04/22 08:02:42: bpp: 0.3228
04/22 08:02:42: Sum Loss: 19.6732
04/22 08:02:42: Loss (s-m-l): [0.0006, 0.0352, 0.0]
04/22 08:02:42: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9861, 1.0, 0.9861], [1.0, 1.0, 1.0]]
04/22 08:05:40: 
Iteration: 68000
04/22 08:05:40: Running time: 1992.54 min
04/22 08:05:40: Data Loading time: 0.00007 s
04/22 08:05:40: Loss R: 0.0121
04/22 08:05:40: Loss G: 18.9066
04/22 08:05:40: bpp: 0.3218
04/22 08:05:40: Sum Loss: 19.4702
04/22 08:05:40: Loss (s-m-l): [0.0006, 0.0357, 0.0]
04/22 08:05:40: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9858, 1.0, 0.9858], [1.0, 1.0, 1.0]]
04/22 08:05:40: 
==========Evaluation: iter 68000==========
04/22 08:05:40: save checkpoints: ckpts/tp/tp68000
04/22 08:08:38: 
Iteration: 68100
04/22 08:08:38: Running time: 1995.51 min
04/22 08:08:38: Data Loading time: 0.00007 s
04/22 08:08:38: Loss R: 0.0127
04/22 08:08:38: Loss G: 19.3116
04/22 08:08:38: bpp: 0.3190
04/22 08:08:38: Sum Loss: 19.8851
04/22 08:08:38: Loss (s-m-l): [0.0006, 0.0376, 0.0]
04/22 08:08:38: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/22 08:11:36: 
Iteration: 68200
04/22 08:11:36: Running time: 1998.49 min
04/22 08:11:36: Data Loading time: 0.00007 s
04/22 08:11:36: Loss R: 0.0127
04/22 08:11:36: Loss G: 19.1704
04/22 08:11:36: bpp: 0.3225
04/22 08:11:36: Sum Loss: 19.7466
04/22 08:11:36: Loss (s-m-l): [0.0006, 0.0375, 0.0]
04/22 08:11:36: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/22 08:14:35: 
Iteration: 68300
04/22 08:14:35: Running time: 2001.47 min
04/22 08:14:35: Data Loading time: 0.00007 s
04/22 08:14:35: Loss R: 0.0126
04/22 08:14:35: Loss G: 18.9935
04/22 08:14:35: bpp: 0.3216
04/22 08:14:35: Sum Loss: 19.5674
04/22 08:14:35: Loss (s-m-l): [0.0006, 0.0372, 0.0]
04/22 08:14:35: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/22 08:17:32: 
Iteration: 68400
04/22 08:17:32: Running time: 2004.41 min
04/22 08:17:32: Data Loading time: 0.00007 s
04/22 08:17:32: Loss R: 0.0121
04/22 08:17:32: Loss G: 18.7357
04/22 08:17:32: bpp: 0.3244
04/22 08:17:32: Sum Loss: 19.3015
04/22 08:17:32: Loss (s-m-l): [0.0006, 0.0357, 0.0]
04/22 08:17:32: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9857, 1.0, 0.9857], [1.0, 1.0, 1.0]]
04/22 08:20:29: 
Iteration: 68500
04/22 08:20:29: Running time: 2007.37 min
04/22 08:20:29: Data Loading time: 0.00007 s
04/22 08:20:29: Loss R: 0.0124
04/22 08:20:29: Loss G: 19.6267
04/22 08:20:29: bpp: 0.3175
04/22 08:20:29: Sum Loss: 20.1917
04/22 08:20:29: Loss (s-m-l): [0.0006, 0.0365, 0.0]
04/22 08:20:29: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/22 08:23:24: 
Iteration: 68600
04/22 08:23:24: Running time: 2010.29 min
04/22 08:23:24: Data Loading time: 0.00008 s
04/22 08:23:24: Loss R: 0.0124
04/22 08:23:24: Loss G: 19.2946
04/22 08:23:24: bpp: 0.3210
04/22 08:23:24: Sum Loss: 19.8636
04/22 08:23:24: Loss (s-m-l): [0.0007, 0.0365, 0.0]
04/22 08:23:24: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/22 08:26:17: 
Iteration: 68700
04/22 08:26:17: Running time: 2013.18 min
04/22 08:26:17: Data Loading time: 0.00007 s
04/22 08:26:17: Loss R: 0.0121
04/22 08:26:17: Loss G: 19.3400
04/22 08:26:17: bpp: 0.3241
04/22 08:26:17: Sum Loss: 19.9052
04/22 08:26:17: Loss (s-m-l): [0.0006, 0.0356, 0.0]
04/22 08:26:17: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9858, 1.0, 0.9858], [1.0, 1.0, 1.0]]
04/22 08:29:16: 
Iteration: 68800
04/22 08:29:16: Running time: 2016.15 min
04/22 08:29:16: Data Loading time: 0.00007 s
04/22 08:29:16: Loss R: 0.0123
04/22 08:29:16: Loss G: 18.7674
04/22 08:29:16: bpp: 0.3240
04/22 08:29:16: Sum Loss: 19.3373
04/22 08:29:16: Loss (s-m-l): [0.0006, 0.0363, 0.0]
04/22 08:29:16: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/22 08:32:13: 
Iteration: 68900
04/22 08:32:13: Running time: 2019.10 min
04/22 08:32:13: Data Loading time: 0.00007 s
04/22 08:32:13: Loss R: 0.0126
04/22 08:32:13: Loss G: 19.2109
04/22 08:32:13: bpp: 0.3206
04/22 08:32:13: Sum Loss: 19.7837
04/22 08:32:13: Loss (s-m-l): [0.0006, 0.0372, 0.0]
04/22 08:32:13: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/22 08:35:11: 
Iteration: 69000
04/22 08:35:11: Running time: 2022.06 min
04/22 08:35:11: Data Loading time: 0.00007 s
04/22 08:35:11: Loss R: 0.0127
04/22 08:35:11: Loss G: 19.3077
04/22 08:35:11: bpp: 0.3193
04/22 08:35:11: Sum Loss: 19.8816
04/22 08:35:11: Loss (s-m-l): [0.0006, 0.0376, 0.0]
04/22 08:35:11: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/22 08:38:06: 
Iteration: 69100
04/22 08:38:06: Running time: 2024.99 min
04/22 08:38:06: Data Loading time: 0.00007 s
04/22 08:38:06: Loss R: 0.0125
04/22 08:38:06: Loss G: 19.1543
04/22 08:38:06: bpp: 0.3232
04/22 08:38:06: Sum Loss: 19.7270
04/22 08:38:06: Loss (s-m-l): [0.0006, 0.0369, 0.0]
04/22 08:38:06: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/22 08:41:03: 
Iteration: 69200
04/22 08:41:03: Running time: 2027.93 min
04/22 08:41:03: Data Loading time: 0.00008 s
04/22 08:41:03: Loss R: 0.0129
04/22 08:41:03: Loss G: 18.8960
04/22 08:41:03: bpp: 0.3180
04/22 08:41:03: Sum Loss: 19.4720
04/22 08:41:03: Loss (s-m-l): [0.0006, 0.0381, 0.0]
04/22 08:41:03: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/22 08:43:56: 
Iteration: 69300
04/22 08:43:56: Running time: 2030.82 min
04/22 08:43:56: Data Loading time: 0.00007 s
04/22 08:43:56: Loss R: 0.0121
04/22 08:43:56: Loss G: 19.4218
04/22 08:43:56: bpp: 0.3190
04/22 08:43:56: Sum Loss: 19.9824
04/22 08:43:56: Loss (s-m-l): [0.0006, 0.0357, 0.0]
04/22 08:43:56: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.986, 1.0, 0.986], [1.0, 1.0, 1.0]]
04/22 08:46:46: 
Iteration: 69400
04/22 08:46:46: Running time: 2033.64 min
04/22 08:46:46: Data Loading time: 0.00007 s
04/22 08:46:46: Loss R: 0.0121
04/22 08:46:46: Loss G: 19.4210
04/22 08:46:46: bpp: 0.3227
04/22 08:46:46: Sum Loss: 19.9856
04/22 08:46:46: Loss (s-m-l): [0.0006, 0.0357, 0.0]
04/22 08:46:46: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9858, 1.0, 0.9858], [1.0, 1.0, 1.0]]
04/22 08:49:40: 
Iteration: 69500
04/22 08:49:40: Running time: 2036.54 min
04/22 08:49:40: Data Loading time: 0.00007 s
04/22 08:49:40: Loss R: 0.0124
04/22 08:49:40: Loss G: 19.3361
04/22 08:49:40: bpp: 0.3177
04/22 08:49:40: Sum Loss: 19.9011
04/22 08:49:40: Loss (s-m-l): [0.0006, 0.0365, 0.0]
04/22 08:49:40: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/22 08:52:36: 
Iteration: 69600
04/22 08:52:36: Running time: 2039.48 min
04/22 08:52:36: Data Loading time: 0.00007 s
04/22 08:52:36: Loss R: 0.0128
04/22 08:52:36: Loss G: 19.0204
04/22 08:52:36: bpp: 0.3223
04/22 08:52:36: Sum Loss: 19.5990
04/22 08:52:36: Loss (s-m-l): [0.0007, 0.0378, 0.0]
04/22 08:52:36: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/22 08:55:33: 
Iteration: 69700
04/22 08:55:33: Running time: 2042.43 min
04/22 08:55:33: Data Loading time: 0.00007 s
04/22 08:55:33: Loss R: 0.0128
04/22 08:55:33: Loss G: 19.4697
04/22 08:55:33: bpp: 0.3175
04/22 08:55:33: Sum Loss: 20.0423
04/22 08:55:33: Loss (s-m-l): [0.0006, 0.0376, 0.0]
04/22 08:55:33: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/22 08:58:28: 
Iteration: 69800
04/22 08:58:28: Running time: 2045.35 min
04/22 08:58:28: Data Loading time: 0.00007 s
04/22 08:58:28: Loss R: 0.0125
04/22 08:58:28: Loss G: 19.1656
04/22 08:58:28: bpp: 0.3254
04/22 08:58:28: Sum Loss: 19.7417
04/22 08:58:28: Loss (s-m-l): [0.0006, 0.037, 0.0]
04/22 08:58:28: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/22 09:01:26: 
Iteration: 69900
04/22 09:01:26: Running time: 2048.31 min
04/22 09:01:26: Data Loading time: 0.00007 s
04/22 09:01:26: Loss R: 0.0129
04/22 09:01:26: Loss G: 19.1307
04/22 09:01:26: bpp: 0.3207
04/22 09:01:26: Sum Loss: 19.7097
04/22 09:01:26: Loss (s-m-l): [0.0006, 0.0381, 0.0]
04/22 09:01:26: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9848, 1.0, 0.9848], [1.0, 1.0, 1.0]]
04/22 09:04:23: 
Iteration: 70000
04/22 09:04:23: Running time: 2051.27 min
04/22 09:04:23: Data Loading time: 0.00007 s
04/22 09:04:23: Loss R: 0.0122
04/22 09:04:23: Loss G: 19.1099
04/22 09:04:23: bpp: 0.3226
04/22 09:04:23: Sum Loss: 19.6770
04/22 09:04:23: Loss (s-m-l): [0.0006, 0.0361, 0.0]
04/22 09:04:23: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9856, 1.0, 0.9856], [1.0, 1.0, 1.0]]
04/22 09:04:23: 
==========Evaluation: iter 70000==========
04/22 09:04:23: save checkpoints: ckpts/tp/tp70000
04/22 09:07:19: 
Iteration: 70100
04/22 09:07:19: Running time: 2054.20 min
04/22 09:07:19: Data Loading time: 0.00007 s
04/22 09:07:19: Loss R: 0.0122
04/22 09:07:19: Loss G: 19.1697
04/22 09:07:19: bpp: 0.3229
04/22 09:07:19: Sum Loss: 19.7370
04/22 09:07:19: Loss (s-m-l): [0.0006, 0.0361, 0.0]
04/22 09:07:19: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9858, 1.0, 0.9858], [1.0, 1.0, 1.0]]
04/22 09:10:18: 
Iteration: 70200
04/22 09:10:18: Running time: 2057.19 min
04/22 09:10:18: Data Loading time: 0.00007 s
04/22 09:10:18: Loss R: 0.0122
04/22 09:10:18: Loss G: 19.2292
04/22 09:10:18: bpp: 0.3208
04/22 09:10:18: Sum Loss: 19.7946
04/22 09:10:18: Loss (s-m-l): [0.0006, 0.0361, 0.0]
04/22 09:10:18: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9857, 1.0, 0.9857], [1.0, 1.0, 1.0]]
04/22 09:13:15: 
Iteration: 70300
04/22 09:13:15: Running time: 2060.13 min
04/22 09:13:15: Data Loading time: 0.00007 s
04/22 09:13:15: Loss R: 0.0124
04/22 09:13:15: Loss G: 19.2504
04/22 09:13:15: bpp: 0.3206
04/22 09:13:15: Sum Loss: 19.8184
04/22 09:13:15: Loss (s-m-l): [0.0006, 0.0366, 0.0]
04/22 09:13:15: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/22 09:16:15: 
Iteration: 70400
04/22 09:16:15: Running time: 2063.14 min
04/22 09:16:15: Data Loading time: 0.00007 s
04/22 09:16:15: Loss R: 0.0122
04/22 09:16:15: Loss G: 19.0894
04/22 09:16:15: bpp: 0.3225
04/22 09:16:15: Sum Loss: 19.6566
04/22 09:16:15: Loss (s-m-l): [0.0006, 0.0361, 0.0]
04/22 09:16:15: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9856, 1.0, 0.9856], [1.0, 1.0, 1.0]]
04/22 09:19:08: 
Iteration: 70500
04/22 09:19:08: Running time: 2066.02 min
04/22 09:19:08: Data Loading time: 0.00007 s
04/22 09:19:08: Loss R: 0.0127
04/22 09:19:08: Loss G: 18.9866
04/22 09:19:08: bpp: 0.3229
04/22 09:19:08: Sum Loss: 19.5632
04/22 09:19:08: Loss (s-m-l): [0.0006, 0.0375, 0.0]
04/22 09:19:08: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/22 09:22:05: 
Iteration: 70600
04/22 09:22:05: Running time: 2068.96 min
04/22 09:22:05: Data Loading time: 0.00007 s
04/22 09:22:05: Loss R: 0.0121
04/22 09:22:05: Loss G: 19.3872
04/22 09:22:05: bpp: 0.3188
04/22 09:22:05: Sum Loss: 19.9477
04/22 09:22:05: Loss (s-m-l): [0.0006, 0.0357, 0.0]
04/22 09:22:05: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.986, 1.0, 0.986], [1.0, 1.0, 1.0]]
04/22 09:24:56: 
Iteration: 70700
04/22 09:24:56: Running time: 2071.82 min
04/22 09:24:56: Data Loading time: 0.00007 s
04/22 09:24:56: Loss R: 0.0125
04/22 09:24:56: Loss G: 19.2353
04/22 09:24:56: bpp: 0.3231
04/22 09:24:56: Sum Loss: 19.8083
04/22 09:24:56: Loss (s-m-l): [0.0006, 0.0369, 0.0]
04/22 09:24:56: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/22 09:27:51: 
Iteration: 70800
04/22 09:27:51: Running time: 2074.73 min
04/22 09:27:51: Data Loading time: 0.00007 s
04/22 09:27:51: Loss R: 0.0121
04/22 09:27:51: Loss G: 19.0634
04/22 09:27:51: bpp: 0.3231
04/22 09:27:51: Sum Loss: 19.6286
04/22 09:27:51: Loss (s-m-l): [0.0006, 0.0357, 0.0]
04/22 09:27:51: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9858, 1.0, 0.9858], [1.0, 1.0, 1.0]]
04/22 09:30:48: 
Iteration: 70900
04/22 09:30:48: Running time: 2077.68 min
04/22 09:30:48: Data Loading time: 0.00011 s
04/22 09:30:48: Loss R: 0.0124
04/22 09:30:48: Loss G: 19.2130
04/22 09:30:48: bpp: 0.3197
04/22 09:30:48: Sum Loss: 19.7808
04/22 09:30:48: Loss (s-m-l): [0.0006, 0.0366, 0.0]
04/22 09:30:48: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/22 09:33:44: 
Iteration: 71000
04/22 09:33:44: Running time: 2080.62 min
04/22 09:33:44: Data Loading time: 0.00007 s
04/22 09:33:44: Loss R: 0.0132
04/22 09:33:44: Loss G: 19.0017
04/22 09:33:44: bpp: 0.3244
04/22 09:33:44: Sum Loss: 19.5897
04/22 09:33:44: Loss (s-m-l): [0.0006, 0.0389, 0.0]
04/22 09:33:44: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9843, 1.0, 0.9843], [1.0, 1.0, 1.0]]
04/22 09:36:41: 
Iteration: 71100
04/22 09:36:41: Running time: 2083.57 min
04/22 09:36:41: Data Loading time: 0.00007 s
04/22 09:36:41: Loss R: 0.0127
04/22 09:36:41: Loss G: 19.5933
04/22 09:36:41: bpp: 0.3227
04/22 09:36:41: Sum Loss: 20.1693
04/22 09:36:41: Loss (s-m-l): [0.0006, 0.0374, 0.0]
04/22 09:36:41: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/22 09:39:39: 
Iteration: 71200
04/22 09:39:39: Running time: 2086.53 min
04/22 09:39:39: Data Loading time: 0.00007 s
04/22 09:39:39: Loss R: 0.0119
04/22 09:39:39: Loss G: 19.2359
04/22 09:39:39: bpp: 0.3206
04/22 09:39:39: Sum Loss: 19.7941
04/22 09:39:39: Loss (s-m-l): [0.0005, 0.0351, 0.0]
04/22 09:39:39: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9862, 1.0, 0.9862], [1.0, 1.0, 1.0]]
04/22 09:42:34: 
Iteration: 71300
04/22 09:42:34: Running time: 2089.46 min
04/22 09:42:34: Data Loading time: 0.00007 s
04/22 09:42:34: Loss R: 0.0123
04/22 09:42:34: Loss G: 19.1590
04/22 09:42:34: bpp: 0.3198
04/22 09:42:34: Sum Loss: 19.7240
04/22 09:42:34: Loss (s-m-l): [0.0006, 0.0362, 0.0]
04/22 09:42:34: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9856, 1.0, 0.9856], [1.0, 1.0, 1.0]]
04/22 09:45:29: 
Iteration: 71400
04/22 09:45:29: Running time: 2092.38 min
04/22 09:45:29: Data Loading time: 0.00007 s
04/22 09:45:29: Loss R: 0.0127
04/22 09:45:29: Loss G: 19.3407
04/22 09:45:29: bpp: 0.3198
04/22 09:45:29: Sum Loss: 19.9136
04/22 09:45:29: Loss (s-m-l): [0.0006, 0.0373, 0.0]
04/22 09:45:29: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/22 09:48:22: 
Iteration: 71500
04/22 09:48:22: Running time: 2095.25 min
04/22 09:48:22: Data Loading time: 0.00007 s
04/22 09:48:22: Loss R: 0.0122
04/22 09:48:22: Loss G: 19.0275
04/22 09:48:22: bpp: 0.3244
04/22 09:48:22: Sum Loss: 19.5951
04/22 09:48:22: Loss (s-m-l): [0.0006, 0.0359, 0.0]
04/22 09:48:22: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9857, 1.0, 0.9857], [1.0, 1.0, 1.0]]
04/22 09:51:20: 
Iteration: 71600
04/22 09:51:20: Running time: 2098.22 min
04/22 09:51:20: Data Loading time: 0.00007 s
04/22 09:51:20: Loss R: 0.0126
04/22 09:51:20: Loss G: 19.0723
04/22 09:51:20: bpp: 0.3213
04/22 09:51:20: Sum Loss: 19.6454
04/22 09:51:20: Loss (s-m-l): [0.0006, 0.0371, 0.0]
04/22 09:51:20: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/22 09:54:18: 
Iteration: 71700
04/22 09:54:18: Running time: 2101.19 min
04/22 09:54:18: Data Loading time: 0.00007 s
04/22 09:54:18: Loss R: 0.0130
04/22 09:54:18: Loss G: 19.4001
04/22 09:54:18: bpp: 0.3184
04/22 09:54:18: Sum Loss: 19.9780
04/22 09:54:18: Loss (s-m-l): [0.0007, 0.0382, 0.0]
04/22 09:54:18: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9849, 1.0, 0.9849], [1.0, 1.0, 1.0]]
04/22 09:57:14: 
Iteration: 71800
04/22 09:57:14: Running time: 2104.12 min
04/22 09:57:14: Data Loading time: 0.00007 s
04/22 09:57:14: Loss R: 0.0123
04/22 09:57:14: Loss G: 19.1494
04/22 09:57:14: bpp: 0.3226
04/22 09:57:14: Sum Loss: 19.7173
04/22 09:57:14: Loss (s-m-l): [0.0006, 0.0362, 0.0]
04/22 09:57:14: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/22 10:00:08: 
Iteration: 71900
04/22 10:00:08: Running time: 2107.02 min
04/22 10:00:08: Data Loading time: 0.00007 s
04/22 10:00:08: Loss R: 0.0121
04/22 10:00:08: Loss G: 19.0329
04/22 10:00:08: bpp: 0.3228
04/22 10:00:08: Sum Loss: 19.5975
04/22 10:00:08: Loss (s-m-l): [0.0006, 0.0357, 0.0]
04/22 10:00:08: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.986, 1.0, 0.986], [1.0, 1.0, 1.0]]
04/22 10:03:03: 
Iteration: 72000
04/22 10:03:03: Running time: 2109.93 min
04/22 10:03:03: Data Loading time: 0.00007 s
04/22 10:03:03: Loss R: 0.0127
04/22 10:03:03: Loss G: 19.6948
04/22 10:03:03: bpp: 0.3205
04/22 10:03:03: Sum Loss: 20.2691
04/22 10:03:03: Loss (s-m-l): [0.0006, 0.0375, 0.0]
04/22 10:03:03: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/22 10:03:03: 
==========Evaluation: iter 72000==========
04/22 10:03:03: save checkpoints: ckpts/tp/tp72000
04/22 10:03:03: LR: [9.765625e-08, 9.765625e-08, 9.765625e-08]
04/22 10:05:59: 
Iteration: 72100
04/22 10:05:59: Running time: 2112.86 min
04/22 10:05:59: Data Loading time: 0.00008 s
04/22 10:05:59: Loss R: 0.0123
04/22 10:05:59: Loss G: 19.1586
04/22 10:05:59: bpp: 0.3209
04/22 10:05:59: Sum Loss: 19.7261
04/22 10:05:59: Loss (s-m-l): [0.0006, 0.0364, 0.0]
04/22 10:05:59: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9856, 1.0, 0.9856], [1.0, 1.0, 1.0]]
04/22 10:09:00: 
Iteration: 72200
04/22 10:09:00: Running time: 2115.88 min
04/22 10:09:00: Data Loading time: 0.00007 s
04/22 10:09:00: Loss R: 0.0121
04/22 10:09:00: Loss G: 18.8751
04/22 10:09:00: bpp: 0.3229
04/22 10:09:00: Sum Loss: 19.4395
04/22 10:09:00: Loss (s-m-l): [0.0006, 0.0356, 0.0]
04/22 10:09:00: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9858, 1.0, 0.9858], [1.0, 1.0, 1.0]]
04/22 10:11:53: 
Iteration: 72300
04/22 10:11:53: Running time: 2118.77 min
04/22 10:11:53: Data Loading time: 0.00007 s
04/22 10:11:53: Loss R: 0.0124
04/22 10:11:53: Loss G: 19.0168
04/22 10:11:53: bpp: 0.3215
04/22 10:11:53: Sum Loss: 19.5858
04/22 10:11:53: Loss (s-m-l): [0.0006, 0.0365, 0.0]
04/22 10:11:53: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9856, 1.0, 0.9856], [1.0, 1.0, 1.0]]
04/22 10:14:53: 
Iteration: 72400
04/22 10:14:53: Running time: 2121.77 min
04/22 10:14:53: Data Loading time: 0.00007 s
04/22 10:14:53: Loss R: 0.0129
04/22 10:14:53: Loss G: 18.9461
04/22 10:14:53: bpp: 0.3203
04/22 10:14:53: Sum Loss: 19.5240
04/22 10:14:53: Loss (s-m-l): [0.0006, 0.038, 0.0]
04/22 10:14:53: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9848, 1.0, 0.9848], [1.0, 1.0, 1.0]]
04/22 10:17:51: 
Iteration: 72500
04/22 10:17:51: Running time: 2124.74 min
04/22 10:17:51: Data Loading time: 0.00007 s
04/22 10:17:51: Loss R: 0.0132
04/22 10:17:51: Loss G: 19.3667
04/22 10:17:51: bpp: 0.3186
04/22 10:17:51: Sum Loss: 19.9486
04/22 10:17:51: Loss (s-m-l): [0.0006, 0.0389, 0.0]
04/22 10:17:51: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9846, 1.0, 0.9846], [1.0, 1.0, 1.0]]
04/22 10:20:48: 
Iteration: 72600
04/22 10:20:48: Running time: 2127.68 min
04/22 10:20:48: Data Loading time: 0.00007 s
04/22 10:20:48: Loss R: 0.0125
04/22 10:20:48: Loss G: 19.3884
04/22 10:20:48: bpp: 0.3227
04/22 10:20:48: Sum Loss: 19.9605
04/22 10:20:48: Loss (s-m-l): [0.0006, 0.0368, 0.0]
04/22 10:20:48: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/22 10:23:45: 
Iteration: 72700
04/22 10:23:45: Running time: 2130.63 min
04/22 10:23:45: Data Loading time: 0.00007 s
04/22 10:23:45: Loss R: 0.0126
04/22 10:23:45: Loss G: 18.9143
04/22 10:23:45: bpp: 0.3234
04/22 10:23:45: Sum Loss: 19.4896
04/22 10:23:45: Loss (s-m-l): [0.0006, 0.0372, 0.0]
04/22 10:23:45: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/22 10:26:46: 
Iteration: 72800
04/22 10:26:46: Running time: 2133.65 min
04/22 10:26:46: Data Loading time: 0.00007 s
04/22 10:26:46: Loss R: 0.0125
04/22 10:26:46: Loss G: 19.4172
04/22 10:26:46: bpp: 0.3185
04/22 10:26:46: Sum Loss: 19.9864
04/22 10:26:46: Loss (s-m-l): [0.0006, 0.037, 0.0]
04/22 10:26:46: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9854, 1.0, 0.9854], [1.0, 1.0, 1.0]]
04/22 10:29:41: 
Iteration: 72900
04/22 10:29:41: Running time: 2136.57 min
04/22 10:29:41: Data Loading time: 0.00007 s
04/22 10:29:41: Loss R: 0.0123
04/22 10:29:41: Loss G: 19.1172
04/22 10:29:41: bpp: 0.3226
04/22 10:29:41: Sum Loss: 19.6863
04/22 10:29:41: Loss (s-m-l): [0.0006, 0.0364, 0.0]
04/22 10:29:41: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9856, 1.0, 0.9856], [1.0, 1.0, 1.0]]
04/22 10:32:38: 
Iteration: 73000
04/22 10:32:38: Running time: 2139.52 min
04/22 10:32:38: Data Loading time: 0.00007 s
04/22 10:32:38: Loss R: 0.0121
04/22 10:32:38: Loss G: 19.3890
04/22 10:32:38: bpp: 0.3220
04/22 10:32:38: Sum Loss: 19.9537
04/22 10:32:38: Loss (s-m-l): [0.0006, 0.0358, 0.0]
04/22 10:32:38: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9857, 1.0, 0.9857], [1.0, 1.0, 1.0]]
04/22 10:35:35: 
Iteration: 73100
04/22 10:35:35: Running time: 2142.47 min
04/22 10:35:35: Data Loading time: 0.00007 s
04/22 10:35:35: Loss R: 0.0120
04/22 10:35:35: Loss G: 19.0585
04/22 10:35:35: bpp: 0.3218
04/22 10:35:35: Sum Loss: 19.6211
04/22 10:35:35: Loss (s-m-l): [0.0006, 0.0355, 0.0]
04/22 10:35:35: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9859, 1.0, 0.9859], [1.0, 1.0, 1.0]]
04/22 10:38:28: 
Iteration: 73200
04/22 10:38:28: Running time: 2145.35 min
04/22 10:38:28: Data Loading time: 0.00007 s
04/22 10:38:28: Loss R: 0.0124
04/22 10:38:28: Loss G: 19.3311
04/22 10:38:28: bpp: 0.3201
04/22 10:38:28: Sum Loss: 19.8988
04/22 10:38:28: Loss (s-m-l): [0.0006, 0.0365, 0.0]
04/22 10:38:28: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9856, 1.0, 0.9856], [1.0, 1.0, 1.0]]
04/22 10:41:24: 
Iteration: 73300
04/22 10:41:24: Running time: 2148.28 min
04/22 10:41:24: Data Loading time: 0.00007 s
04/22 10:41:24: Loss R: 0.0120
04/22 10:41:24: Loss G: 19.1742
04/22 10:41:24: bpp: 0.3210
04/22 10:41:24: Sum Loss: 19.7355
04/22 10:41:24: Loss (s-m-l): [0.0006, 0.0355, 0.0]
04/22 10:41:24: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9859, 1.0, 0.9859], [1.0, 1.0, 1.0]]
04/22 10:44:15: 
Iteration: 73400
04/22 10:44:15: Running time: 2151.14 min
04/22 10:44:15: Data Loading time: 0.00007 s
04/22 10:44:15: Loss R: 0.0125
04/22 10:44:15: Loss G: 19.3426
04/22 10:44:15: bpp: 0.3205
04/22 10:44:15: Sum Loss: 19.9123
04/22 10:44:15: Loss (s-m-l): [0.0006, 0.0368, 0.0]
04/22 10:44:15: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9854, 1.0, 0.9854], [1.0, 1.0, 1.0]]
04/22 10:47:13: 
Iteration: 73500
04/22 10:47:13: Running time: 2154.09 min
04/22 10:47:13: Data Loading time: 0.00011 s
04/22 10:47:13: Loss R: 0.0119
04/22 10:47:13: Loss G: 19.4287
04/22 10:47:13: bpp: 0.3193
04/22 10:47:13: Sum Loss: 19.9862
04/22 10:47:13: Loss (s-m-l): [0.0006, 0.0351, 0.0]
04/22 10:47:13: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9862, 1.0, 0.9862], [1.0, 1.0, 1.0]]
04/22 10:50:04: 
Iteration: 73600
04/22 10:50:04: Running time: 2156.95 min
04/22 10:50:04: Data Loading time: 0.00007 s
04/22 10:50:04: Loss R: 0.0124
04/22 10:50:04: Loss G: 18.9923
04/22 10:50:04: bpp: 0.3249
04/22 10:50:04: Sum Loss: 19.5661
04/22 10:50:04: Loss (s-m-l): [0.0006, 0.0367, 0.0]
04/22 10:50:04: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9852, 1.0, 0.9852], [1.0, 1.0, 1.0]]
04/22 10:53:00: 
Iteration: 73700
04/22 10:53:00: Running time: 2159.89 min
04/22 10:53:00: Data Loading time: 0.00007 s
04/22 10:53:00: Loss R: 0.0125
04/22 10:53:00: Loss G: 19.4204
04/22 10:53:00: bpp: 0.3204
04/22 10:53:00: Sum Loss: 19.9910
04/22 10:53:00: Loss (s-m-l): [0.0006, 0.0369, 0.0]
04/22 10:53:00: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/22 10:55:58: 
Iteration: 73800
04/22 10:55:58: Running time: 2162.84 min
04/22 10:55:58: Data Loading time: 0.00007 s
04/22 10:55:58: Loss R: 0.0129
04/22 10:55:58: Loss G: 19.0183
04/22 10:55:58: bpp: 0.3223
04/22 10:55:58: Sum Loss: 19.5994
04/22 10:55:58: Loss (s-m-l): [0.0006, 0.0382, 0.0]
04/22 10:55:58: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9848, 1.0, 0.9848], [1.0, 1.0, 1.0]]
04/22 10:58:57: 
Iteration: 73900
04/22 10:58:57: Running time: 2165.84 min
04/22 10:58:57: Data Loading time: 0.00007 s
04/22 10:58:57: Loss R: 0.0129
04/22 10:58:57: Loss G: 18.8717
04/22 10:58:57: bpp: 0.3210
04/22 10:58:57: Sum Loss: 19.4502
04/22 10:58:57: Loss (s-m-l): [0.0006, 0.038, 0.0]
04/22 10:58:57: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9848, 1.0, 0.9848], [1.0, 1.0, 1.0]]
04/22 11:01:54: 
Iteration: 74000
04/22 11:01:54: Running time: 2168.78 min
04/22 11:01:54: Data Loading time: 0.00007 s
04/22 11:01:54: Loss R: 0.0122
04/22 11:01:54: Loss G: 19.4835
04/22 11:01:54: bpp: 0.3193
04/22 11:01:54: Sum Loss: 20.0473
04/22 11:01:54: Loss (s-m-l): [0.0006, 0.0361, 0.0]
04/22 11:01:54: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9858, 1.0, 0.9858], [1.0, 1.0, 1.0]]
04/22 11:01:54: 
==========Evaluation: iter 74000==========
04/22 11:01:54: save checkpoints: ckpts/tp/tp74000
04/22 11:04:50: 
Iteration: 74100
04/22 11:04:50: Running time: 2171.72 min
04/22 11:04:50: Data Loading time: 0.00007 s
04/22 11:04:50: Loss R: 0.0124
04/22 11:04:50: Loss G: 18.9180
04/22 11:04:50: bpp: 0.3209
04/22 11:04:50: Sum Loss: 19.4873
04/22 11:04:50: Loss (s-m-l): [0.0006, 0.0367, 0.0]
04/22 11:04:50: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9855, 1.0, 0.9855], [1.0, 1.0, 1.0]]
04/22 11:07:47: 
Iteration: 74200
04/22 11:07:47: Running time: 2174.66 min
04/22 11:07:47: Data Loading time: 0.00007 s
04/22 11:07:47: Loss R: 0.0127
04/22 11:07:47: Loss G: 19.2880
04/22 11:07:47: bpp: 0.3199
04/22 11:07:47: Sum Loss: 19.8623
04/22 11:07:47: Loss (s-m-l): [0.0006, 0.0376, 0.0]
04/22 11:07:47: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9851, 1.0, 0.9851], [1.0, 1.0, 1.0]]
04/22 11:10:44: 
Iteration: 74300
04/22 11:10:44: Running time: 2177.61 min
04/22 11:10:44: Data Loading time: 0.00007 s
04/22 11:10:44: Loss R: 0.0127
04/22 11:10:44: Loss G: 19.4475
04/22 11:10:44: bpp: 0.3201
04/22 11:10:44: Sum Loss: 20.0215
04/22 11:10:44: Loss (s-m-l): [0.0006, 0.0375, 0.0]
04/22 11:10:44: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.985, 1.0, 0.985], [1.0, 1.0, 1.0]]
04/22 11:13:38: 
Iteration: 74400
04/22 11:13:38: Running time: 2180.52 min
04/22 11:13:38: Data Loading time: 0.00007 s
04/22 11:13:38: Loss R: 0.0123
04/22 11:13:38: Loss G: 19.1037
04/22 11:13:38: bpp: 0.3216
04/22 11:13:38: Sum Loss: 19.6722
04/22 11:13:38: Loss (s-m-l): [0.0006, 0.0364, 0.0]
04/22 11:13:38: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9856, 1.0, 0.9856], [1.0, 1.0, 1.0]]
04/22 11:16:33: 
Iteration: 74500
04/22 11:16:33: Running time: 2183.43 min
04/22 11:16:33: Data Loading time: 0.00007 s
04/22 11:16:33: Loss R: 0.0122
04/22 11:16:33: Loss G: 19.5220
04/22 11:16:33: bpp: 0.3226
04/22 11:16:33: Sum Loss: 20.0889
04/22 11:16:33: Loss (s-m-l): [0.0006, 0.036, 0.0]
04/22 11:16:33: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9856, 1.0, 0.9856], [1.0, 1.0, 1.0]]
04/22 11:19:28: 
Iteration: 74600
04/22 11:19:28: Running time: 2186.35 min
04/22 11:19:28: Data Loading time: 0.00007 s
04/22 11:19:28: Loss R: 0.0125
04/22 11:19:28: Loss G: 19.4589
04/22 11:19:28: bpp: 0.3217
04/22 11:19:28: Sum Loss: 20.0298
04/22 11:19:28: Loss (s-m-l): [0.0006, 0.0368, 0.0]
04/22 11:19:28: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/22 11:22:30: 
Iteration: 74700
04/22 11:22:30: Running time: 2189.39 min
04/22 11:22:30: Data Loading time: 0.00364 s
04/22 11:22:30: Loss R: 0.0124
04/22 11:22:30: Loss G: 19.0356
04/22 11:22:30: bpp: 0.3228
04/22 11:22:30: Sum Loss: 19.6071
04/22 11:22:30: Loss (s-m-l): [0.0006, 0.0367, 0.0]
04/22 11:22:30: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/22 11:25:30: 
Iteration: 74800
04/22 11:25:30: Running time: 2192.39 min
04/22 11:25:30: Data Loading time: 0.00007 s
04/22 11:25:30: Loss R: 0.0126
04/22 11:25:30: Loss G: 19.3033
04/22 11:25:30: bpp: 0.3203
04/22 11:25:30: Sum Loss: 19.8756
04/22 11:25:30: Loss (s-m-l): [0.0006, 0.0372, 0.0]
04/22 11:25:30: Metrics (s-m-l): [[0.9998, 1.0, 0.9998], [0.9853, 1.0, 0.9853], [1.0, 1.0, 1.0]]
04/22 11:26:43: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=164600, init_ckpt='ckpts/tp/tp74000.pth', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/22 11:26:43: Device:cuda
04/22 11:26:43: Files length: 24641
04/22 11:26:43: Files length: 4
04/22 11:26:46: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/22 11:26:46: Load checkpoint from ckpts/tp/tp74000.pth
04/22 11:26:46: LR: [0.0008, 0.0008, 0.0008]
04/22 11:27:06: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=164600, init_ckpt='ckpts/tp/tp74000.pth', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/22 11:27:06: Device:cuda
04/22 11:27:07: Files length: 24641
04/22 11:27:07: Files length: 4
04/22 11:27:09: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/22 11:27:09: Load checkpoint from ckpts/tp/tp74000.pth
04/22 11:27:09: LR: [0.0008, 0.0008, 0.0008]
04/22 13:56:01: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=164600, init_ckpt='ckpts/tp/tp74000.pth', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/22 13:56:01: Device:cuda
04/22 13:56:01: Files length: 24641
04/22 13:56:01: Files length: 4
04/22 13:56:04: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/22 13:56:04: Load checkpoint from ckpts/tp/tp74000.pth
04/22 13:56:04: LR: [0.0008, 0.0008, 0.0008]
04/22 14:13:13: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=164600, init_ckpt='ckpts/tp/tp74000.pth', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/22 14:13:13: Device:cuda
04/22 14:13:13: Files length: 24641
04/22 14:13:13: Files length: 4
04/22 14:13:16: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/22 14:13:16: Load checkpoint from ckpts/tp/tp74000.pth
04/22 14:13:16: LR: [0.0008, 0.0008, 0.0008]
04/22 14:19:26: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=164600, init_ckpt='ckpts/tp/tp74000.pth', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/22 14:19:26: Device:cuda
04/22 14:19:26: Files length: 24641
04/22 14:19:26: Files length: 4
04/22 14:19:29: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/22 14:19:29: Load checkpoint from ckpts/tp/tp74000.pth
04/22 14:19:29: LR: [0.0008, 0.0008, 0.0008]
04/22 14:26:41: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=164600, init_ckpt='ckpts/tp/tp74000.pth', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/22 14:26:41: Device:cuda
04/22 14:26:41: Files length: 24641
04/22 14:26:41: Files length: 4
04/22 14:26:44: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/22 14:26:44: Load checkpoint from ckpts/tp/tp74000.pth
04/22 14:26:44: LR: [0.0008, 0.0008, 0.0008]
04/22 14:27:13: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=164600, init_ckpt='ckpts/tp/tp74000.pth', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/22 14:27:13: Device:cuda
04/22 14:27:13: Files length: 24641
04/22 14:27:13: Files length: 4
04/22 14:27:16: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/22 14:27:16: Load checkpoint from ckpts/tp/tp74000.pth
04/22 14:27:16: LR: [0.0008, 0.0008, 0.0008]
04/22 14:28:59: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=164600, init_ckpt='ckpts/tp/tp74000.pth', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/22 14:28:59: Device:cuda
04/22 14:28:59: Files length: 24641
04/22 14:28:59: Files length: 4
04/22 14:29:02: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/22 14:29:02: Load checkpoint from ckpts/tp/tp74000.pth
04/22 14:29:02: LR: [0.0008, 0.0008, 0.0008]
04/22 14:35:18: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=164600, init_ckpt='ckpts/tp/tp74000.pth', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/22 14:35:18: Device:cuda
04/22 14:35:18: Files length: 24641
04/22 14:35:18: Files length: 4
04/22 14:35:21: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/22 14:35:21: Load checkpoint from ckpts/tp/tp74000.pth
04/22 14:35:21: LR: [0.0008, 0.0008, 0.0008]
04/22 14:37:29: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=164600, init_ckpt='ckpts/tp/tp74000.pth', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/22 14:37:29: Device:cuda
04/22 14:37:29: Files length: 24641
04/22 14:37:29: Files length: 4
04/22 14:37:32: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/22 14:37:32: Load checkpoint from ckpts/tp/tp74000.pth
04/22 14:37:32: LR: [0.0008, 0.0008, 0.0008]
04/22 14:38:00: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=164600, init_ckpt='ckpts/tp/tp74000.pth', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/22 14:38:00: Device:cuda
04/22 14:38:00: Files length: 24641
04/22 14:38:00: Files length: 4
04/22 14:38:03: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/22 14:38:03: Load checkpoint from ckpts/tp/tp74000.pth
04/22 14:38:03: LR: [0.0008, 0.0008, 0.0008]
04/22 14:38:42: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=164600, init_ckpt='ckpts/tp/tp74000.pth', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/22 14:38:42: Device:cuda
04/22 14:38:42: Files length: 24641
04/22 14:38:42: Files length: 4
04/22 14:38:45: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/22 14:38:45: Load checkpoint from ckpts/tp/tp74000.pth
04/22 14:38:45: LR: [0.0008, 0.0008, 0.0008]
04/22 14:40:17: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=164600, init_ckpt='ckpts/tp/tp74000.pth', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/22 14:40:17: Device:cuda
04/22 14:40:17: Files length: 24641
04/22 14:40:17: Files length: 4
04/22 14:40:20: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/22 14:40:20: Load checkpoint from ckpts/tp/tp74000.pth
04/22 14:40:20: LR: [0.0008, 0.0008, 0.0008]
04/22 14:42:38: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=164600, init_ckpt='ckpts/tp/tp74000.pth', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/22 14:42:38: Device:cuda
04/22 14:42:38: Files length: 24641
04/22 14:42:38: Files length: 4
04/22 14:42:41: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/22 14:42:41: Load checkpoint from ckpts/tp/tp74000.pth
04/22 14:42:41: LR: [0.0008, 0.0008, 0.0008]
04/22 14:43:36: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=164600, init_ckpt='ckpts/tp/tp74000.pth', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/22 14:43:36: Device:cuda
04/22 14:43:36: Files length: 24641
04/22 14:43:36: Files length: 4
04/22 14:43:39: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/22 14:43:39: Load checkpoint from ckpts/tp/tp74000.pth
04/22 14:43:39: LR: [0.0008, 0.0008, 0.0008]
04/22 14:49:48: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=164600, init_ckpt='ckpts/tp/tp74000.pth', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/22 14:49:48: Device:cuda
04/22 14:49:48: Files length: 24641
04/22 14:49:48: Files length: 4
04/22 14:49:51: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/22 14:49:51: Load checkpoint from ckpts/tp/tp74000.pth
04/22 14:49:51: LR: [0.0008, 0.0008, 0.0008]
04/22 14:52:20: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=164600, init_ckpt='ckpts/tp/tp74000.pth', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/22 14:52:20: Device:cuda
04/22 14:52:20: Files length: 24641
04/22 14:52:20: Files length: 4
04/22 14:52:23: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/22 14:52:23: Load checkpoint from ckpts/tp/tp74000.pth
04/22 14:52:23: LR: [0.0008, 0.0008, 0.0008]
04/22 14:53:42: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=164600, init_ckpt='ckpts/tp/tp74000.pth', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/22 14:53:42: Device:cuda
04/22 14:53:42: Files length: 24641
04/22 14:53:42: Files length: 4
04/22 14:53:45: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/22 14:53:45: Load checkpoint from ckpts/tp/tp74000.pth
04/22 14:53:45: LR: [0.0008, 0.0008, 0.0008]
04/22 14:58:10: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=164600, init_ckpt='ckpts/tp/tp74000.pth', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/22 14:58:10: Device:cuda
04/22 14:58:10: Files length: 24641
04/22 14:58:10: Files length: 4
04/22 14:58:13: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/22 14:58:13: Load checkpoint from ckpts/tp/tp74000.pth
04/22 14:58:13: LR: [0.0008, 0.0008, 0.0008]
04/22 14:58:40: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=164600, init_ckpt='ckpts/tp/tp74000.pth', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/22 14:58:40: Device:cuda
04/22 14:58:40: Files length: 24641
04/22 14:58:40: Files length: 4
04/22 14:58:42: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/22 14:58:43: Load checkpoint from ckpts/tp/tp74000.pth
04/22 14:58:43: LR: [0.0008, 0.0008, 0.0008]
04/22 15:01:32: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=164600, init_ckpt='ckpts/tp/tp74000.pth', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/22 15:01:32: Device:cuda
04/22 15:01:32: Files length: 24641
04/22 15:01:32: Files length: 4
04/22 15:01:35: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/22 15:01:35: Load checkpoint from ckpts/tp/tp74000.pth
04/22 15:01:35: LR: [0.0008, 0.0008, 0.0008]
04/22 15:04:43: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=164600, init_ckpt='ckpts/tp/tp74000.pth', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/22 15:04:43: Device:cuda
04/22 15:04:43: Files length: 24641
04/22 15:04:43: Files length: 4
04/22 15:04:46: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/22 15:04:46: Load checkpoint from ckpts/tp/tp74000.pth
04/22 15:04:46: LR: [0.0008, 0.0008, 0.0008]
04/22 15:18:45: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=164600, init_ckpt='ckpts/tp/tp74000.pth', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/22 15:18:45: Device:cuda
04/22 15:18:45: Files length: 24641
04/22 15:18:45: Files length: 4
04/22 15:18:47: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/22 15:18:47: Load checkpoint from ckpts/tp/tp74000.pth
04/22 15:18:48: LR: [0.0008, 0.0008, 0.0008]
04/22 15:19:40: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=164600, init_ckpt='ckpts/tp/tp74000.pth', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/22 15:19:40: Device:cuda
04/22 15:19:40: Files length: 24641
04/22 15:19:40: Files length: 4
04/22 15:19:43: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/22 15:19:43: Load checkpoint from ckpts/tp/tp74000.pth
04/22 15:19:43: LR: [0.0008, 0.0008, 0.0008]
04/22 15:26:04: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=164600, init_ckpt='ckpts/tp/tp74000.pth', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/22 15:26:04: Device:cuda
04/22 15:26:04: Files length: 24641
04/22 15:26:04: Files length: 4
04/22 15:26:07: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/22 15:26:07: Load checkpoint from ckpts/tp/tp74000.pth
04/22 15:26:07: LR: [0.0008, 0.0008, 0.0008]
04/22 15:26:57: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=164600, init_ckpt='ckpts/tp/tp74000.pth', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/22 15:26:57: Device:cuda
04/22 15:26:57: Files length: 24641
04/22 15:26:57: Files length: 4
04/22 15:27:00: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/22 15:27:00: Load checkpoint from ckpts/tp/tp74000.pth
04/22 15:27:00: LR: [0.0008, 0.0008, 0.0008]
04/22 15:27:30: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=164600, init_ckpt='ckpts/tp/tp74000.pth', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/22 15:27:30: Device:cuda
04/22 15:27:30: Files length: 24641
04/22 15:27:30: Files length: 4
04/22 15:27:33: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/22 15:27:33: Load checkpoint from ckpts/tp/tp74000.pth
04/22 15:27:33: LR: [0.0008, 0.0008, 0.0008]
04/22 15:27:54: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=164600, init_ckpt='ckpts/tp/tp74000.pth', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/22 15:27:54: Device:cuda
04/22 15:27:54: Files length: 24641
04/22 15:27:54: Files length: 4
04/22 15:27:57: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/22 15:27:57: Load checkpoint from ckpts/tp/tp74000.pth
04/22 15:27:57: LR: [0.0008, 0.0008, 0.0008]
04/22 15:29:34: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=164600, init_ckpt='ckpts/tp/tp74000.pth', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/22 15:29:34: Device:cuda
04/22 15:29:34: Files length: 24641
04/22 15:29:34: Files length: 4
04/22 15:29:37: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/22 15:29:37: Load checkpoint from ckpts/tp/tp74000.pth
04/22 15:29:37: LR: [0.0008, 0.0008, 0.0008]
04/22 15:33:58: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=164600, init_ckpt='ckpts/tp/tp74000.pth', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/22 15:33:58: Device:cuda
04/22 15:33:58: Files length: 24641
04/22 15:33:58: Files length: 4
04/22 15:34:01: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/22 15:34:01: Load checkpoint from ckpts/tp/tp74000.pth
04/22 15:34:01: LR: [0.0008, 0.0008, 0.0008]
04/22 15:35:04: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=164600, init_ckpt='ckpts/tp/tp74000.pth', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/22 15:35:04: Device:cuda
04/22 15:35:04: Files length: 24641
04/22 15:35:04: Files length: 4
04/22 15:35:07: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/22 15:35:07: Load checkpoint from ckpts/tp/tp74000.pth
04/22 15:35:07: LR: [0.0008, 0.0008, 0.0008]
04/22 15:36:23: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=164600, init_ckpt='ckpts/tp/tp74000.pth', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/22 15:36:23: Device:cuda
04/22 15:36:23: Files length: 24641
04/22 15:36:23: Files length: 4
04/22 15:36:26: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/22 15:36:26: Load checkpoint from ckpts/tp/tp74000.pth
04/22 15:36:26: LR: [0.0008, 0.0008, 0.0008]
04/22 15:48:01: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=164600, init_ckpt='ckpts/tp/tp74000.pth', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/22 15:48:01: Device:cuda
04/22 15:48:01: Files length: 24641
04/22 15:48:01: Files length: 4
04/22 15:48:04: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/22 15:48:04: Load checkpoint from ckpts/tp/tp74000.pth
04/22 15:48:04: LR: [0.0008, 0.0008, 0.0008]
04/22 15:48:48: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=164600, init_ckpt='ckpts/tp/tp74000.pth', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/22 15:48:48: Device:cuda
04/22 15:48:48: Files length: 24641
04/22 15:48:48: Files length: 4
04/22 15:48:51: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/22 15:48:51: Load checkpoint from ckpts/tp/tp74000.pth
04/22 15:48:51: LR: [0.0008, 0.0008, 0.0008]
04/22 15:51:29: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=164600, init_ckpt='ckpts/tp/tp74000.pth', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/22 15:51:29: Device:cuda
04/22 15:51:29: Files length: 24641
04/22 15:51:29: Files length: 4
04/22 15:51:32: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/22 15:51:32: Load checkpoint from ckpts/tp/tp74000.pth
04/22 15:51:32: LR: [0.0008, 0.0008, 0.0008]
04/22 15:53:49: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=164600, init_ckpt='ckpts/tp/tp74000.pth', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/22 15:53:49: Device:cuda
04/22 15:53:49: Files length: 24641
04/22 15:53:49: Files length: 4
04/22 15:53:52: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/22 15:53:52: Load checkpoint from ckpts/tp/tp74000.pth
04/22 15:53:52: LR: [0.0008, 0.0008, 0.0008]
04/22 22:19:27: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=164600, init_ckpt='ckpts/tp/tp74000.pth', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/22 22:19:27: Device:cuda
04/22 22:19:27: Files length: 24641
04/22 22:19:27: Files length: 4
04/22 22:19:30: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/22 22:19:30: Load checkpoint from ckpts/tp/tp74000.pth
04/22 22:19:30: LR: [0.0008, 0.0008, 0.0008]
04/22 22:21:50: Namespace(adaptive=True, alpha=20.0, base_step=100, batch_size=16, channels=16, ckptdir='ckpts', clip_value=0, dataset='/home/zhanggai/PCGC/PCGCv2/training_dataset/', dataset_8i='testdata/8iVFB/', global_step=164600, init_ckpt='ckpts/tp/tp74000.pth', logdir='logs', lr=0.0008, lr_gamma=0.5, lr_step=6000.0, max_norm=1.0, model='PCCModel', num_test=1024, prefix='tp', reset=False, target_format='sp_tensor', test_step=2000)
04/22 22:21:50: Device:cuda
04/22 22:21:50: Files length: 24641
04/22 22:21:50: Files length: 4
04/22 22:21:53: PCC(
  (encoder): Encoder(
    (block_test_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_en1): Sequential(
      (0): MinkowskiConvolution(in=8, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_en1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=16, out=8, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(8, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=8, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=2, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=8, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=2, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=2, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block_test_de1): Sequential(
      (0): MinkowskiConvolutionTranspose(in=8, out=4, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(4, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_test_de1): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=4, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=1, out=2, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=4, out=1, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=1, out=1, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=1, out=2, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_en): Sequential(
      (0): MinkowskiConvolution(in=4, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_en): Sequential(
      (0): MinkowskiConvolution(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_en): Sequential(
      (0): MinkowskiConvolution(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_en): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (conv3_en): MinkowskiConvolution(in=32, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
  )
  (decoder): Decoder(
    (pre_deconv): MinkowskiConvolutionTranspose(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block0_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=64, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=64, out=64, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block0_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=64, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=16, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=64, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=16, out=32, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block0_cls): MinkowskiConvolution(in=64, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block1_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=64, out=32, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=32, out=32, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block1_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=32, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=8, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=32, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=8, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=8, out=16, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block1_cls): MinkowskiConvolution(in=32, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (block2_de): Sequential(
      (0): MinkowskiConvolutionTranspose(in=32, out=16, kernel_size=[2, 2, 2], stride=[2, 2, 2], dilation=[1, 1, 1])
      (1): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): MinkowskiELU()
      (3): MinkowskiConvolution(in=16, out=16, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
      (4): MinkowskiBatchNorm(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): MinkowskiELU()
    )
    (res_block2_de): Sequential(
      (0): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (1): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
      (2): InceptionResNet(
        (conv0_0): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv0_1): MinkowskiConvolution(in=4, out=8, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_0): MinkowskiConvolution(in=16, out=4, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_1): MinkowskiConvolution(in=4, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
        (conv1_2): MinkowskiConvolution(in=4, out=8, kernel_size=[1, 1, 1], stride=[1, 1, 1], dilation=[1, 1, 1])
        (relu): MinkowskiReLU()
      )
    )
    (block2_cls): MinkowskiConvolution(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (conv3_de): MinkowskiConvolutionTranspose(in=16, out=4, kernel_size=[3, 3, 3], stride=[1, 1, 1], dilation=[1, 1, 1])
    (pruning): MinkowskiPruning()
  )
  (entropy_bottleneck): EntropyBottleneck(
    (_matrices): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x3 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x3 (GPU 0)]
    )
    (_biases): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
    (_factors): ParameterList(
        (0): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (1): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (2): Parameter containing: [torch.cuda.FloatTensor of size 16x3x1 (GPU 0)]
        (3): Parameter containing: [torch.cuda.FloatTensor of size 16x1x1 (GPU 0)]
    )
  )
)
04/22 22:21:53: Load checkpoint from ckpts/tp/tp74000.pth
04/22 22:21:53: LR: [0.0008, 0.0008, 0.0008]
